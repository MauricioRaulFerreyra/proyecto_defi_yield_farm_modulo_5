{
  "id": "4b8029b902bbb912211822101c60391a",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    function __Pausable_init() internal onlyInitializing {\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.22;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/transparent/ProxyAdmin.sol)\n\npragma solidity ^0.8.22;\n\nimport {ITransparentUpgradeableProxy} from \"./TransparentUpgradeableProxy.sol\";\nimport {Ownable} from \"../../access/Ownable.sol\";\n\n/**\n * @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n * explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\n */\ncontract ProxyAdmin is Ownable {\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)`\n     * and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called,\n     * while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev Sets the initial owner who can perform upgrades.\n     */\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    /**\n     * @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation.\n     * See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - This contract must be the admin of `proxy`.\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    function upgradeAndCall(\n        ITransparentUpgradeableProxy proxy,\n        address implementation,\n        bytes memory data\n    ) public payable virtual onlyOwner {\n        proxy.upgradeToAndCall{value: msg.value}(implementation, data);\n    }\n}\n"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\npragma solidity ^0.8.22;\n\nimport {ERC1967Utils} from \"../ERC1967/ERC1967Utils.sol\";\nimport {ERC1967Proxy} from \"../ERC1967/ERC1967Proxy.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {ProxyAdmin} from \"./ProxyAdmin.sol\";\n\n/**\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n * does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n * include them in the ABI so this interface must be used to interact with it.\n */\ninterface ITransparentUpgradeableProxy is IERC1967 {\n    /// @dev See {UUPSUpgradeable-upgradeToAndCall}\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable;\n}\n\n/**\n * @dev This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to\n * the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating\n * the proxy admin cannot fallback to the target implementation.\n *\n * These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a\n * dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to\n * call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and\n * allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative\n * interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership.\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a\n * meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract.\n *\n * IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an\n * immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be\n * overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an\n * undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot\n * is generally fine if the implementation is trusted.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the\n * compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new\n * function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This\n * could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    // An immutable address for the admin to avoid unnecessary SLOADs before each call\n    // at the expense of removing the ability to change the admin once it's set.\n    // This is acceptable if the admin is always a ProxyAdmin instance or similar contract\n    // with its own ability to transfer the permissions to another account.\n    address private immutable _admin;\n\n    /**\n     * @dev The proxy caller is the current admin, and can't fallback to the proxy target.\n     */\n    error ProxyDeniedAdminAccess();\n\n    /**\n     * @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n     * backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n     * {ERC1967Proxy-constructor}.\n     */\n    constructor(address _logic, address initialOwner, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\n        _admin = address(new ProxyAdmin(initialOwner));\n        // Set the storage value and emit an event for ERC-1967 compatibility\n        ERC1967Utils.changeAdmin(_proxyAdmin());\n    }\n\n    /**\n     * @dev Returns the admin of this proxy.\n     */\n    function _proxyAdmin() internal view virtual returns (address) {\n        return _admin;\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior.\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _proxyAdmin()) {\n            if (msg.sig != ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\n                revert ProxyDeniedAdminAccess();\n            } else {\n                _dispatchUpgradeToAndCall();\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy. See {ERC1967Utils-upgradeToAndCall}.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    function _dispatchUpgradeToAndCall() private {\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n        ERC1967Utils.upgradeToAndCall(newImplementation, data);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/Errors.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
      },
      "contracts/DappToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.22;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract DappToken is ERC20, Ownable {\r\n    constructor(\r\n        address initialOwner\r\n    ) ERC20(\"DApp Token\", \"DAPP\") Ownable(initialOwner) {}\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}"
      },
      "contracts/Lock.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract Lock {\n    uint public unlockTime;\n    address payable public owner;\n\n    event Withdrawal(uint amount, uint when);\n\n    constructor(uint _unlockTime) payable {\n        require(\n            block.timestamp < _unlockTime,\n            \"Unlock time should be in the future\"\n        );\n\n        unlockTime = _unlockTime;\n        owner = payable(msg.sender);\n    }\n\n    function withdraw() public {\n        // Uncomment this line, and the import of \"hardhat/console.sol\", to print a log in your terminal\n        // console.log(\"Unlock time is %o and block timestamp is %o\", unlockTime, block.timestamp);\n\n        require(block.timestamp >= unlockTime, \"You can't withdraw yet\");\n        require(msg.sender == owner, \"You aren't the owner\");\n\n        emit Withdrawal(address(this).balance, block.timestamp);\n\n        owner.transfer(address(this).balance);\n    }\n}\n"
      },
      "contracts/LPToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// Compatible with OpenZeppelin Contracts ^5.0.0\r\npragma solidity ^0.8.22;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract LPToken is ERC20, Ownable {\r\n    constructor(\r\n        address initialOwner\r\n    ) ERC20(\"LP Token\", \"LPT\") Ownable(initialOwner) {}\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n}"
      },
      "contracts/ProxyAdmin.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\";\r\nimport \"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\";\r\n\r\ncontract MyProxyAdmin is ProxyAdmin {\r\n    constructor(address initialOwner) ProxyAdmin(initialOwner) {}\r\n\r\n    function upgradeProxy(address proxy, address implementation) external onlyOwner {\r\n        upgradeAndCall(\r\n            ITransparentUpgradeableProxy(proxy),\r\n            implementation,\r\n            bytes(\"\")\r\n        );\r\n    }\r\n\r\n    function upgradeProxyAndInitialize(address proxy, address implementation) external onlyOwner {\r\n        bytes memory data = abi.encodeWithSignature(\"initializeV2()\");\r\n        upgradeAndCall(\r\n            ITransparentUpgradeableProxy(proxy),\r\n            implementation,\r\n            data\r\n        );\r\n    }\r\n}\r\n"
      },
      "contracts/TokenFarm.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.28;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\r\nimport \"./DappToken.sol\";\r\nimport \"./LPToken.sol\";\r\n\r\nenum FarmState { ACTIVE, PAUSED, EMERGENCY_STOP }\r\n\r\ninterface IRewardStrategy {\r\n    function calculateReward(\r\n        uint256 blocks,\r\n        uint256 userBalance,\r\n        uint256 totalBalance,\r\n        uint256 minReward,\r\n        uint256 maxReward,\r\n        address user\r\n    ) external view returns (uint256);\r\n}\r\n\r\ncontract ProportionalVariableStrategy is IRewardStrategy {\r\n    function calculateReward(\r\n        uint256 blocks,\r\n        uint256 userBalance,\r\n        uint256 totalBalance,\r\n        uint256 minReward,\r\n        uint256 maxReward,\r\n        address /* user */\r\n    ) external pure returns (uint256) {\r\n        if (totalBalance == 0 || userBalance == 0) return 0;\r\n        \r\n        if (blocks > 1e6) blocks = 1e6;\r\n        \r\n        uint256 share = (userBalance * 1e18) / totalBalance;\r\n        uint256 averageReward = (minReward + maxReward) / 2;\r\n        \r\n        return (averageReward * blocks * share) / 1e18;\r\n    }\r\n}\r\n\r\n/**\r\n * @title TokenFarm\r\n * @dev Contrato de farming de tokens con sistema de recompensas configurable\r\n * @author Mauricio R Ferreyra\r\n */\r\ncontract TokenFarm is Initializable, OwnableUpgradeable, PausableUpgradeable {\r\n    using SafeMath for uint256;\r\n    \r\n    string public constant name = \"Proportional Token Farm\";\r\n        \r\n    // === ESTADO PRINCIPAL ===\r\n    FarmState public farmState;\r\n    // address public owner; // Eliminado immutable\r\n    DappToken public dappToken; // Eliminado immutable\r\n    LPToken public lpToken; // Eliminado immutable\r\n    IRewardStrategy public rewardStrategy;\r\n\r\n    // === CONFIGURACIÓN ===\r\n    struct RewardConfig {\r\n        uint256 minPerBlock;\r\n        uint256 maxPerBlock;\r\n        uint256 feePercent;\r\n        uint256 lastUpdate;\r\n    }\r\n    \r\n    RewardConfig public rewardConfig;\r\n    uint256 public totalStakingBalance;\r\n    uint256 public collectedFees;\r\n    uint256 public totalRewardsDistributed;\r\n    uint256 public farmStartBlock;\r\n\r\n    // === STAKERS ===\r\n    struct Staker {\r\n        uint256 balance;\r\n        uint256 checkpoint;\r\n        uint256 pendingRewards;\r\n        uint256 totalClaimed;\r\n        uint256 depositTimestamp;\r\n        bool hasStaked;\r\n        bool isStaking;\r\n    }\r\n\r\n    address[] public stakers;\r\n    mapping(address => Staker) public stakersData;\r\n    mapping(address => uint256) public stakerIndex;\r\n    \r\n    // === CONSTANTES ===\r\n    uint256 public constant MAX_STAKERS = 10000;\r\n    uint256 public constant MIN_DEPOSIT = 1e15;\r\n    uint256 public constant MAX_FEE_PERCENT = 50;\r\n    uint256 public lockPeriod;\r\n    bool public emergencyWithdrawEnabled;\r\n\r\n    // === EVENTOS ===\r\n    event Deposit(address indexed user, uint256 amount, uint256 timestamp);\r\n    event Withdraw(address indexed user, uint256 amount, uint256 timestamp);\r\n    event RewardsClaimed(address indexed user, uint256 netAmount, uint256 fee);\r\n    event RewardsDistributed(uint256 totalUsers, uint256 totalAmount, uint256 timestamp);\r\n    event FeesWithdrawn(uint256 amount, uint256 timestamp);\r\n    event RewardConfigUpdated(uint256 min, uint256 max, uint256 fee);\r\n    event StateChanged(FarmState oldState, FarmState newState);\r\n    event StrategyUpdated(address oldStrategy, address newStrategy);\r\n    event EmergencyStop(uint256 timestamp);\r\n    event LockPeriodUpdated(uint256 oldPeriod, uint256 newPeriod);\r\n\r\n    // === ERRORES ===\r\n    error TokenFarm__OnlyOwner();\r\n    error TokenFarm__NotStaking();\r\n    error TokenFarm__FarmStopped();\r\n    error TokenFarm__EmergencyStop();\r\n    error TokenFarm__InvalidAmount();\r\n    error TokenFarm__NoRewards();\r\n    error TokenFarm__NoFees();\r\n    error TokenFarm__TransferFailed();\r\n    error TokenFarm__MaxStakersReached();\r\n    error TokenFarm__StillLocked();\r\n    error TokenFarm__InvalidConfiguration();\r\n\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    function __TokenFarm_init(address _owner) internal onlyInitializing {\r\n        __Ownable_init(_owner); \r\n        __Pausable_init();\r\n        __TokenFarm_init_unchained();\r\n    }\r\n\r\n    function __TokenFarm_init_unchained() internal onlyInitializing {\r\n        // Inicialización básica sin los parámetros\r\n        farmState = FarmState.ACTIVE;\r\n        farmStartBlock = block.number;\r\n        emergencyWithdrawEnabled = true;\r\n        \r\n        rewardConfig = RewardConfig({\r\n            minPerBlock: 1e17,\r\n            maxPerBlock: 1e18,\r\n            feePercent: 2,\r\n            lastUpdate: block.timestamp\r\n        });\r\n    }\r\n\r\n    // Modifica la función initialize existente para que llame a la nueva función\r\n    function initialize(\r\n        address _dappToken,\r\n        address _lpToken,\r\n        address _strategy,\r\n        address _owner\r\n    ) public initializer {\r\n        __TokenFarm_init(_owner); // Llama al inicializador interno\r\n        dappToken = DappToken(_dappToken);\r\n        lpToken = LPToken(_lpToken);\r\n        rewardStrategy = IRewardStrategy(_strategy);\r\n        _transferOwnership(_owner); // Usa la función de OwnableUpgradeable\r\n    }\r\n\r\n    // === MODIFICADORES ===\r\n\r\n    modifier whenActive() {\r\n        if (farmState != FarmState.ACTIVE) revert TokenFarm__FarmStopped();\r\n        _;\r\n    }\r\n\r\n    modifier whenNotEmergency() {\r\n        if (farmState == FarmState.EMERGENCY_STOP) revert TokenFarm__EmergencyStop();\r\n        _;\r\n    }\r\n\r\n    // === MODIFICADOR SOLO STAKER ===\r\n\r\n    modifier onlyStaker() {\r\n        if (!stakersData[msg.sender].isStaking || stakersData[msg.sender].balance == 0) {\r\n            revert TokenFarm__NotStaking();\r\n        }\r\n        _;\r\n    }\r\n\r\n    // === FUNCIONES PRINCIPALES ===\r\n\r\n    function getVersion() public pure virtual returns (string memory) {\r\n        return \"1.0.0\";\r\n    }\r\n\r\n    /**\r\n     * @dev Deposita tokens LP para comenzar a farmear\r\n     * @param _amount Cantidad de tokens LP a depositar\r\n     */\r\n    function deposit(uint256 _amount) \r\n        external \r\n        virtual\r\n        whenActive \r\n        whenNotEmergency\r\n    {\r\n        if (_amount < MIN_DEPOSIT) {\r\n            revert TokenFarm__InvalidAmount();\r\n        }\r\n        if (stakers.length >= MAX_STAKERS && !stakersData[msg.sender].hasStaked) {\r\n            revert TokenFarm__MaxStakersReached();\r\n        }\r\n        \r\n        _beforeDeposit(msg.sender, _amount);\r\n        _executeDeposit(msg.sender, _amount);\r\n        _afterDeposit(msg.sender, _amount);\r\n    }\r\n\r\n    function _beforeDeposit(address user, uint256 amount) internal virtual {\r\n        if (!lpToken.transferFrom(user, address(this), amount)) {\r\n            revert TokenFarm__TransferFailed();\r\n        }\r\n        // _updateRewards(user);\r\n    }\r\n\r\n    function _executeDeposit(address user, uint256 amount) private {\r\n        Staker storage staker = stakersData[user];\r\n        \r\n        if (!staker.hasStaked) {\r\n            _addStaker(user);\r\n            staker.hasStaked = true;\r\n            staker.depositTimestamp = block.timestamp;\r\n            staker.checkpoint = block.number; // Inicializar checkpoint aquí\r\n        }\r\n\r\n        staker.balance += amount;\r\n        staker.isStaking = true;\r\n        totalStakingBalance += amount;\r\n\r\n        // if (staker.checkpoint == 0) {\r\n        //     staker.checkpoint = block.number;\r\n        // }\r\n    }\r\n\r\n    function _afterDeposit(address user, uint256 amount) internal virtual {\r\n        emit Deposit(user, amount, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Retira todos los tokens depositados\r\n     */\r\n    function withdraw() external virtual onlyStaker {\r\n        // En emergencia, siempre permitir retiro si está habilitado\r\n        if (farmState == FarmState.EMERGENCY_STOP && !emergencyWithdrawEnabled) {\r\n            revert TokenFarm__EmergencyStop();\r\n        }\r\n        \r\n        Staker storage staker = stakersData[msg.sender];\r\n        uint256 balance = staker.balance;\r\n\r\n        if (balance == 0) revert TokenFarm__InvalidAmount();\r\n        \r\n        // Verificar período de bloqueo (excepto en emergencia)\r\n        if (farmState != FarmState.EMERGENCY_STOP && lockPeriod > 0) {\r\n            if (block.timestamp < staker.depositTimestamp + lockPeriod) {\r\n                revert TokenFarm__StillLocked();\r\n            }\r\n        }\r\n\r\n        // Solo actualizar recompensas si no estamos en emergencia\r\n        if (farmState != FarmState.EMERGENCY_STOP) {\r\n            _updateRewards(msg.sender);\r\n        }\r\n\r\n        staker.balance = 0;\r\n        staker.isStaking = false;\r\n        totalStakingBalance -= balance;\r\n\r\n        if (!lpToken.transfer(msg.sender, balance)) {\r\n            revert TokenFarm__TransferFailed();\r\n        }\r\n        \r\n        emit Withdraw(msg.sender, balance, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Reclama las recompensas pendientes\r\n     */\r\n    function claimRewards() external virtual \r\n        whenNotEmergency\r\n        whenActive\r\n        onlyStaker\r\n    {\r\n        _updateRewards(msg.sender);\r\n        Staker storage staker = stakersData[msg.sender];\r\n        uint256 reward = staker.pendingRewards;\r\n\r\n        if (reward == 0) revert TokenFarm__NoRewards();\r\n        \r\n        uint256 fee = (reward * rewardConfig.feePercent) / 100;\r\n        uint256 netReward = reward - fee;\r\n\r\n        staker.pendingRewards = 0;\r\n        staker.totalClaimed += netReward;\r\n        collectedFees += fee;\r\n        totalRewardsDistributed += reward;\r\n\r\n        dappToken.mint(msg.sender, netReward);\r\n        emit RewardsClaimed(msg.sender, netReward, fee);\r\n    }\r\n\r\n    /**\r\n     * @dev Distribuye recompensas a todos los stakers activos\r\n     */\r\n    function distributeRewardsAll() external onlyOwner whenActive whenNotEmergency {\r\n        uint256 stakersCount = 0;\r\n        uint256 totalDistributed = 0;\r\n        \r\n        for (uint256 i = 0; i < stakers.length; i++) {\r\n            address userAddr = stakers[i];\r\n            if (stakersData[userAddr].isStaking) {\r\n                uint256 oldRewards = stakersData[userAddr].pendingRewards;\r\n                _updateRewards(userAddr);\r\n                uint256 newRewards = stakersData[userAddr].pendingRewards;\r\n                totalDistributed += (newRewards - oldRewards);\r\n                stakersCount++;\r\n            }\r\n        }\r\n        \r\n        emit RewardsDistributed(stakersCount, totalDistributed, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Actualiza las recompensas pendientes de un usuario\r\n     */\r\n    function _updateRewards(address beneficiary) internal {\r\n        Staker storage staker = stakersData[beneficiary];\r\n        \r\n        if (block.number <= staker.checkpoint || totalStakingBalance == 0 || staker.balance == 0) {\r\n            return;\r\n        }\r\n\r\n        uint256 blocksPassed = block.number - staker.checkpoint;\r\n        uint256 reward = rewardStrategy.calculateReward(\r\n            blocksPassed,\r\n            staker.balance,\r\n            totalStakingBalance,\r\n            rewardConfig.minPerBlock,\r\n            rewardConfig.maxPerBlock,\r\n            beneficiary\r\n        );\r\n\r\n        staker.pendingRewards += reward;\r\n        staker.checkpoint = block.number;\r\n    }\r\n\r\n    function _addStaker(address user) private {\r\n        stakerIndex[user] = stakers.length;\r\n        stakers.push(user);\r\n    }\r\n\r\n    // === FUNCIONES DE ADMINISTRACIÓN ===\r\n\r\n    /**\r\n     * @dev Pausa el farm (no permite nuevos depósitos ni claims)\r\n     */\r\n    function pauseFarm() external virtual onlyOwner {\r\n        if (farmState == FarmState.PAUSED) return;\r\n        FarmState oldState = farmState;\r\n        farmState = FarmState.PAUSED;\r\n        emit StateChanged(oldState, farmState);\r\n    }\r\n\r\n    /**\r\n     * @dev Reanuda el farm\r\n     */\r\n    function resumeFarm() external virtual onlyOwner {\r\n        if (farmState == FarmState.ACTIVE) return;\r\n        if (farmState == FarmState.EMERGENCY_STOP) revert TokenFarm__EmergencyStop();\r\n        \r\n        FarmState oldState = farmState;\r\n        farmState = FarmState.ACTIVE;\r\n        emit StateChanged(oldState, farmState);\r\n    }\r\n\r\n    /**\r\n     * @dev Activa el modo de emergencia\r\n     */\r\n    function emergencyStop() external virtual onlyOwner {\r\n        if (farmState == FarmState.EMERGENCY_STOP) return;\r\n        \r\n        FarmState oldState = farmState;\r\n        farmState = FarmState.EMERGENCY_STOP;\r\n        emit StateChanged(oldState, farmState);\r\n        emit EmergencyStop(block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Actualiza la estrategia de recompensas\r\n     */\r\n    function updateRewardStrategy(IRewardStrategy _newStrategy) external onlyOwner {\r\n        if (address(_newStrategy) == address(0)) revert TokenFarm__InvalidConfiguration();\r\n        \r\n        address oldStrategy = address(rewardStrategy);\r\n        rewardStrategy = _newStrategy;\r\n        emit StrategyUpdated(oldStrategy, address(_newStrategy));\r\n    }\r\n\r\n    /**\r\n     * @dev Actualiza la configuración de recompensas\r\n     */\r\n    function updateRewardConfig(\r\n        uint256 _min,\r\n        uint256 _max,\r\n        uint256 _feePercent\r\n    ) external onlyOwner {\r\n        if (_min > _max) revert TokenFarm__InvalidConfiguration();\r\n        if (_feePercent > MAX_FEE_PERCENT) revert TokenFarm__InvalidConfiguration();\r\n        \r\n        rewardConfig.minPerBlock = _min;\r\n        rewardConfig.maxPerBlock = _max;\r\n        rewardConfig.feePercent = _feePercent;\r\n        rewardConfig.lastUpdate = block.timestamp;\r\n        \r\n        emit RewardConfigUpdated(_min, _max, _feePercent);\r\n    }\r\n\r\n    /**\r\n     * @dev Actualiza el período de bloqueo\r\n     */\r\n    function updateLockPeriod(uint256 _newPeriod) external onlyOwner {\r\n        uint256 oldPeriod = lockPeriod;\r\n        lockPeriod = _newPeriod;\r\n        emit LockPeriodUpdated(oldPeriod, _newPeriod);\r\n    }\r\n\r\n    /**\r\n     * @dev Habilita/deshabilita retiros de emergencia\r\n     */\r\n    function setEmergencyWithdrawEnabled(bool _enabled) external onlyOwner {\r\n        emergencyWithdrawEnabled = _enabled;\r\n    }\r\n\r\n    /**\r\n     * @dev Retira las comisiones acumuladas\r\n     */\r\n    function withdrawFees() external virtual onlyOwner {\r\n        if (collectedFees == 0) revert TokenFarm__NoFees();\r\n        \r\n        uint256 amount = collectedFees;\r\n        collectedFees = 0;\r\n        \r\n        // Verificar que somos el owner del DappToken\r\n        if (dappToken.owner() != address(this)) revert TokenFarm__InvalidConfiguration();\r\n        \r\n        dappToken.mint(owner(), amount);\r\n        emit FeesWithdrawn(amount, block.timestamp);\r\n    }\r\n\r\n    // === FUNCIONES DE VISTA ===\r\n\r\n    /**\r\n     * @dev Obtiene información completa de un usuario\r\n     */\r\n    function getUserInfo(address userAddr) external view returns (Staker memory) {\r\n        return stakersData[userAddr];\r\n    }\r\n\r\n    /**\r\n     * @dev Obtiene estadísticas del contrato\r\n     */\r\n    function getContractStats() external view returns (\r\n        uint256 totalStakers,\r\n        uint256 totalStaked,\r\n        uint256 totalFees,\r\n        uint256 totalRewards,\r\n        FarmState state,\r\n        uint256 activeStakers\r\n    ) {\r\n        uint256 active = 0;\r\n        for (uint256 i = 0; i < stakers.length; i++) {\r\n            if (stakersData[stakers[i]].isStaking) {\r\n                active++;\r\n            }\r\n        }\r\n        \r\n        return (\r\n            stakers.length,\r\n            totalStakingBalance,\r\n            collectedFees,\r\n            totalRewardsDistributed,\r\n            farmState,\r\n            active\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Simula las recompensas actuales y proyectadas\r\n     */\r\n    function simulateRewards(address user) external view returns (\r\n        uint256 pendingRewards,\r\n        uint256 projectedRewards\r\n    ) {\r\n        Staker memory staker = stakersData[user];\r\n        if (!staker.isStaking || totalStakingBalance == 0) {\r\n            return (staker.pendingRewards, 0);\r\n        }\r\n\r\n        uint256 blocksPassed = block.number - staker.checkpoint;\r\n        uint256 projected = rewardStrategy.calculateReward(\r\n            blocksPassed,\r\n            staker.balance,\r\n            totalStakingBalance,\r\n            rewardConfig.minPerBlock,\r\n            rewardConfig.maxPerBlock,\r\n            user\r\n        );\r\n\r\n        return (staker.pendingRewards, projected);\r\n    }\r\n\r\n    /**\r\n     * @dev Calcula la APY estimada basada en la configuración actual\r\n     */\r\n    function getEstimatedAPY() external view returns (uint256) {\r\n        if (totalStakingBalance == 0) return 0;\r\n        \r\n        // Asumiendo ~6000 bloques por día en Ethereum\r\n        uint256 avgRewardPerBlock = (rewardConfig.minPerBlock + rewardConfig.maxPerBlock) / 2;\r\n        uint256 dailyRewards = avgRewardPerBlock * 6000;\r\n        uint256 yearlyRewards = dailyRewards * 365;\r\n        \r\n        // APY = (yearly rewards / total staked) * 100\r\n        return (yearlyRewards * 100) / totalStakingBalance;\r\n    }\r\n\r\n    /**\r\n     * @dev Verifica si un usuario puede retirar\r\n     */\r\n    function canWithdraw(address user) external view returns (bool canWithdrawNow, uint256 unlockTime) {\r\n        Staker memory staker = stakersData[user];\r\n        \r\n        if (!staker.isStaking || staker.balance == 0) {\r\n            return (false, 0);\r\n        }\r\n        \r\n        if (farmState == FarmState.EMERGENCY_STOP) {\r\n            return (emergencyWithdrawEnabled, 0);\r\n        }\r\n        \r\n        if (lockPeriod == 0) {\r\n            return (true, 0);\r\n        }\r\n        \r\n        uint256 unlockTimestamp = staker.depositTimestamp + lockPeriod;\r\n        return (block.timestamp >= unlockTimestamp, unlockTimestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Obtiene la lista de todos los stakers activos\r\n     */\r\n    function getActiveStakers() external view returns (address[] memory activeStakersList) {\r\n        uint256 activeCount = 0;\r\n        \r\n        // Contar stakers activos\r\n        for (uint256 i = 0; i < stakers.length; i++) {\r\n            if (stakersData[stakers[i]].isStaking) {\r\n                activeCount++;\r\n            }\r\n        }\r\n        \r\n        // Crear array con tamaño exacto\r\n        activeStakersList = new address[](activeCount);\r\n        uint256 index = 0;\r\n        \r\n        for (uint256 i = 0; i < stakers.length; i++) {\r\n            if (stakersData[stakers[i]].isStaking) {\r\n                activeStakersList[index] = stakers[i];\r\n                index++;\r\n            }\r\n        }\r\n        \r\n        return activeStakersList;\r\n    }\r\n}\r\n// === LIBRERÍAS AUXILIARES ===\r\n\r\nlibrary SafeMath {\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMath: subtraction overflow\");\r\n        return a - b;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMath: division by zero\");\r\n        return a / b;\r\n    }\r\n}"
      },
      "contracts/TokenFarmV2.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.28;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport \"./TokenFarm.sol\";\r\n\r\n// Custom errors\r\nerror InvalidFeeValue();\r\nerror Unauthorized();\r\nerror InvalidAddress();\r\nerror FundsLocked();\r\nerror AlreadyInitialized();\r\n\r\ninterface ITokenFarm {\r\n    function deposit(uint256 _amount) external;\r\n}\r\n\r\ncontract TokenFarmV2 is TokenFarm {\r\n\r\n\r\n    // V2 state variables - Añadidas al FINAL del storage layout\r\n    uint256 public withdrawFee;\r\n    uint256 public claimFee;\r\n    address public feeCollector;\r\n    uint256 public collectedLpFees;  // Renombrado para LP token fees\r\n    uint256 public collectedDappFees; // Fees en DAPP tokens\r\n    uint256 public rewardPerBlock; // Recompensas por bloque\r\n\r\n    // Constants\r\n    uint256 public constant MAX_WITHDRAW_FEE = 1000;    // 10%\r\n    uint256 public constant MAX_CLAIM_FEE = 1000;       // 10%\r\n    uint256 public constant BASIS_POINTS = 10000;       // 100%\r\n\r\n    // Events\r\n    event RewardsClaimedV2(address indexed user, uint256 amount, uint256 fee);\r\n    event FeesWithdrawnV2(uint256 amount, address indexed collector);\r\n    event LpFeesWithdrawn(uint256 amount, address indexed collector);\r\n    event FeesUpdated(uint256 newWithdrawFee, uint256 newClaimFee);\r\n    event FeeCollectorUpdated(address newCollector);\r\n    event RewardPerBlockUpdated(uint256 newReward);\r\n    event LockPeriodUpdated(uint256 newLockPeriod);\r\n\r\n\r\n    /// @custom:oz-upgrades-unsafe-allow constructor\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    /// @custom:oz-upgrades-validate-as-initializer\r\n    function initializeV2(\r\n        uint256 _withdrawFee,\r\n        uint256 _claimFee,\r\n        address _feeCollector\r\n    ) public reinitializer(2) {\r\n        \r\n        // Luego validar parámetros\r\n        if (_withdrawFee > MAX_WITHDRAW_FEE) revert InvalidFeeValue();\r\n        if (_claimFee > MAX_CLAIM_FEE) revert InvalidFeeValue();\r\n        if (_feeCollector == address(0)) revert InvalidAddress();\r\n\r\n        withdrawFee = _withdrawFee;\r\n        claimFee = _claimFee;\r\n        feeCollector = _feeCollector;\r\n    }\r\n\r\n    function getVersion() public pure override returns (string memory) {\r\n        return \"2.0.0\";\r\n    }\r\n\r\n    // Internal helper to update user rewards\r\n    function _updateUserRewards(address user) internal {\r\n        Staker storage staker = stakersData[user];\r\n        if (block.number > staker.checkpoint && staker.balance > 0) {\r\n            uint256 blocksPassed = block.number - staker.checkpoint;\r\n            // Calculo preciso manteniendo decimales\r\n            uint256 reward = (blocksPassed * rewardPerBlock * staker.balance) / totalStakingBalance;\r\n            \r\n            staker.pendingRewards += reward;\r\n            staker.checkpoint = block.number;\r\n        }\r\n    }\r\n\r\n    function setRewardPerBlock(uint256 _rewardPerBlock) external onlyOwner {\r\n        rewardPerBlock = _rewardPerBlock;\r\n    }\r\n\r\n    function deposit(uint256 amount) public override {\r\n        _updateUserRewards(msg.sender);\r\n        \r\n        // Ejecutar lógica de depósito manualmente\r\n        require(amount >= MIN_DEPOSIT, \"Invalid amount\");\r\n        if (stakers.length >= MAX_STAKERS && !stakersData[msg.sender].hasStaked) {\r\n            revert TokenFarm__MaxStakersReached();\r\n        }\r\n        \r\n        _beforeDeposit(msg.sender, amount);\r\n        \r\n        // Copiar lógica de _executeDeposit\r\n        Staker storage staker = stakersData[msg.sender];\r\n        if (!staker.hasStaked) {\r\n            stakers.push(msg.sender);\r\n            staker.hasStaked = true;\r\n            staker.depositTimestamp = block.timestamp;\r\n        }\r\n        \r\n        staker.balance += amount;\r\n        staker.isStaking = true;\r\n        totalStakingBalance += amount;\r\n        \r\n        _afterDeposit(msg.sender, amount);\r\n        \r\n        // Actualizar checkpoint\r\n        staker.checkpoint = block.number;\r\n    }\r\n\r\n    // Sobrescribir _beforeDeposit con la misma visibilidad (internal)\r\n    function _beforeDeposit(address user, uint256 amount) internal override {\r\n        super._beforeDeposit(user, amount); // Llamar a la versión del padre\r\n    }\r\n\r\n    function claimRewards() public override whenActive {\r\n        _updateUserRewards(msg.sender);\r\n\r\n        Staker storage staker = stakersData[msg.sender];\r\n        uint256 rewards = staker.pendingRewards;\r\n        require(rewards > 0, \"No rewards\");\r\n\r\n        uint256 fee = (rewards * claimFee) / BASIS_POINTS;\r\n        uint256 claimAmount = rewards - fee;\r\n\r\n        // Verificación exhaustiva de balances\r\n        uint256 availableBalance = dappToken.balanceOf(address(this));\r\n        require(availableBalance >= claimAmount, \"Insufficient contract balance\");\r\n\r\n        staker.pendingRewards = 0;\r\n        staker.totalClaimed += claimAmount;\r\n        collectedDappFees += fee;\r\n        totalRewardsDistributed += rewards;\r\n\r\n        bool success = dappToken.transfer(msg.sender, claimAmount);\r\n        require(success, \"Transfer failed\");\r\n    \r\n        emit RewardsClaimedV2(msg.sender, claimAmount, fee);\r\n    }\r\n\r\n    function withdraw() public override onlyStaker {\r\n        if (farmState == FarmState.EMERGENCY_STOP && !emergencyWithdrawEnabled) {\r\n            revert TokenFarm__EmergencyStop();\r\n        }\r\n\r\n        Staker storage staker = stakersData[msg.sender];\r\n        uint256 balance = staker.balance;\r\n        if (balance == 0) revert TokenFarm__InvalidAmount();\r\n\r\n        if (farmState != FarmState.EMERGENCY_STOP && lockPeriod > 0) {\r\n            if (block.timestamp < staker.depositTimestamp + lockPeriod) {\r\n                revert TokenFarm__StillLocked();\r\n            }\r\n        }\r\n\r\n        if (farmState != FarmState.EMERGENCY_STOP) {\r\n            _updateUserRewards(msg.sender);\r\n            if (staker.pendingRewards > 0) {\r\n                uint256 rewards = staker.pendingRewards;\r\n                uint256 claimFeeAmount = (rewards * claimFee) / BASIS_POINTS;\r\n                uint256 claimAmount = rewards - claimFeeAmount;\r\n\r\n                staker.pendingRewards = 0;\r\n                staker.totalClaimed += claimAmount;\r\n                collectedDappFees += claimFeeAmount;\r\n                totalRewardsDistributed += rewards;\r\n\r\n                // dappToken.mint(msg.sender, claimAmount);\r\n                require(dappToken.transfer(msg.sender, claimAmount), \"Transfer failed\");\r\n                emit RewardsClaimedV2(msg.sender, claimAmount, claimFeeAmount);\r\n            }\r\n        }\r\n\r\n        staker.balance = 0;\r\n        staker.isStaking = false;\r\n        totalStakingBalance -= balance;\r\n\r\n        uint256 fee = 0;\r\n        uint256 withdrawAmount = balance;\r\n        if (farmState != FarmState.EMERGENCY_STOP && withdrawFee > 0) {\r\n            fee = (balance * withdrawFee) / BASIS_POINTS;\r\n            withdrawAmount = balance - fee;\r\n            collectedLpFees += fee;\r\n        }\r\n\r\n        require(lpToken.transfer(msg.sender, withdrawAmount), \"Transfer failed\");\r\n        emit Withdraw(msg.sender, withdrawAmount, block.timestamp);\r\n    }\r\n\r\n    function withdrawFees() external override onlyOwner {\r\n        require(collectedDappFees > 0, \"No fees\");\r\n        uint256 amount = collectedDappFees;\r\n        collectedDappFees = 0;\r\n        // dappToken.mint(feeCollector, amount);\r\n        require(dappToken.transfer(feeCollector, amount), \"Transfer failed\");\r\n        emit FeesWithdrawnV2(amount, feeCollector);\r\n    }\r\n\r\n    function withdrawLpFees() external onlyOwner {\r\n        require(collectedLpFees > 0, \"No fees\");\r\n        uint256 amount = collectedLpFees;\r\n        collectedLpFees = 0;\r\n        require(lpToken.transfer(feeCollector, amount), \"Transfer failed\");\r\n        emit LpFeesWithdrawn(amount, feeCollector);\r\n    }\r\n\r\n    function updateFeeCollector(address newCollector) external {\r\n        if (msg.sender != owner()) revert Unauthorized();\r\n        if (newCollector == address(0)) revert InvalidAddress();\r\n        feeCollector = newCollector;\r\n        emit FeeCollectorUpdated(newCollector);\r\n    }\r\n\r\n    function updateFees(\r\n        uint256 _withdrawFee,\r\n        uint256 _claimFee\r\n    ) external {\r\n        if (msg.sender != owner()) revert Unauthorized();\r\n        if (_withdrawFee > MAX_WITHDRAW_FEE) revert InvalidFeeValue();\r\n        if (_claimFee > MAX_CLAIM_FEE) revert InvalidFeeValue();\r\n\r\n        withdrawFee = _withdrawFee;\r\n        claimFee = _claimFee;\r\n\r\n        emit FeesUpdated(_withdrawFee, _claimFee);\r\n    }\r\n\r\n    function setLockPeriod(uint256 _lockPeriod) external {\r\n        if (msg.sender != owner()) revert Unauthorized();\r\n        lockPeriod = _lockPeriod;\r\n    }\r\n\r\n    function getFeeInfo()\r\n        external\r\n        view\r\n        returns (\r\n            uint256 _withdrawFee,\r\n            uint256 _claimFee,\r\n            uint256 _collectedLpFees,\r\n            uint256 _collectedDappFees,\r\n            address _feeCollector\r\n        )\r\n    {\r\n        return (\r\n            withdrawFee,\r\n            claimFee,\r\n            collectedLpFees,\r\n            collectedDappFees,\r\n            feeCollector\r\n        );\r\n    }\r\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "storageLayout"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              508
            ],
            "Initializable": [
              462
            ],
            "OwnableUpgradeable": [
              194
            ]
          },
          "id": 195,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
              "file": "../utils/ContextUpgradeable.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 195,
              "sourceUnit": 509,
              "src": "128:67:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "ContextUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 508,
                    "src": "136:18:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 195,
              "sourceUnit": 463,
              "src": "196:63:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 462,
                    "src": "204:13:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 7,
                    "name": "Initializable",
                    "nameLocations": [
                      "789:13:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 462,
                    "src": "789:13:0"
                  },
                  "id": 8,
                  "nodeType": "InheritanceSpecifier",
                  "src": "789:13:0"
                },
                {
                  "baseName": {
                    "id": 9,
                    "name": "ContextUpgradeable",
                    "nameLocations": [
                      "804:18:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 508,
                    "src": "804:18:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "804:18:0"
                }
              ],
              "canonicalName": "OwnableUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 6,
                "nodeType": "StructuredDocumentation",
                "src": "261:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 194,
              "linearizedBaseContracts": [
                194,
                508,
                462
              ],
              "name": "OwnableUpgradeable",
              "nameLocation": "767:18:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "OwnableUpgradeable.OwnableStorage",
                  "documentation": {
                    "id": 11,
                    "nodeType": "StructuredDocumentation",
                    "src": "829:65:0",
                    "text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
                  },
                  "id": 14,
                  "members": [
                    {
                      "constant": false,
                      "id": 13,
                      "mutability": "mutable",
                      "name": "_owner",
                      "nameLocation": "939:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 14,
                      "src": "931:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "931:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "OwnableStorage",
                  "nameLocation": "906:14:0",
                  "nodeType": "StructDefinition",
                  "scope": 194,
                  "src": "899:53:0",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 17,
                  "mutability": "constant",
                  "name": "OwnableStorageLocation",
                  "nameLocation": "1094:22:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 194,
                  "src": "1069:116:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1069:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1119:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
                      "typeString": "int_const 6517...(69 digits omitted)...7328"
                    },
                    "value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 24,
                    "nodeType": "Block",
                    "src": "1270:81:0",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "1289:56:0",
                          "nodeType": "YulBlock",
                          "src": "1289:56:0",
                          "statements": [
                            {
                              "nativeSrc": "1303:32:0",
                              "nodeType": "YulAssignment",
                              "src": "1303:32:0",
                              "value": {
                                "name": "OwnableStorageLocation",
                                "nativeSrc": "1313:22:0",
                                "nodeType": "YulIdentifier",
                                "src": "1313:22:0"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "1303:6:0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1303:6:0"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 21,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "1303:6:0",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 17,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1313:22:0",
                            "valueSize": 1
                          }
                        ],
                        "id": 23,
                        "nodeType": "InlineAssembly",
                        "src": "1280:65:0"
                      }
                    ]
                  },
                  "id": 25,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getOwnableStorage",
                  "nameLocation": "1201:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1219:2:0"
                  },
                  "returnParameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "1267:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 25,
                        "src": "1244:24:0",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                          "typeString": "struct OwnableUpgradeable.OwnableStorage"
                        },
                        "typeName": {
                          "id": 20,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 19,
                            "name": "OwnableStorage",
                            "nameLocations": [
                              "1244:14:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 14,
                            "src": "1244:14:0"
                          },
                          "referencedDeclaration": 14,
                          "src": "1244:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1243:26:0"
                  },
                  "scope": 194,
                  "src": "1192:159:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 26,
                    "nodeType": "StructuredDocumentation",
                    "src": "1357:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 30,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "1453:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1488:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1480:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1480:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1479:17:0"
                  },
                  "src": "1447:50:0"
                },
                {
                  "documentation": {
                    "id": 31,
                    "nodeType": "StructuredDocumentation",
                    "src": "1503:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 35,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "1596:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1624:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "1616:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1616:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1615:15:0"
                  },
                  "src": "1590:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 41,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1643:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 37,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1680:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 41,
                        "src": "1664:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 39,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1711:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 41,
                        "src": "1695:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1695:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:57:0"
                  },
                  "src": "1637:84:0"
                },
                {
                  "body": {
                    "id": 53,
                    "nodeType": "Block",
                    "src": "1919:55:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "1954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 49,
                            "name": "__Ownable_init_unchained",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 81,
                            "src": "1929:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1929:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 52,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:38:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 42,
                    "nodeType": "StructuredDocumentation",
                    "src": "1727:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 54,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 47,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 46,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "1902:16:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "1902:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1902:16:0"
                    }
                  ],
                  "name": "__Ownable_init",
                  "nameLocation": "1856:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1879:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1871:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1871:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1870:22:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1919:0:0"
                  },
                  "scope": 194,
                  "src": "1847:127:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 80,
                    "nodeType": "Block",
                    "src": "2062:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 66,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 61,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "2076:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 64,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2100:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2092:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 62,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2092:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 65,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2092:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2076:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 75,
                        "nodeType": "IfStatement",
                        "src": "2072:95:0",
                        "trueBody": {
                          "id": 74,
                          "nodeType": "Block",
                          "src": "2104:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 70,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2153:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 69,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2145:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 68,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2145:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 71,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2145:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 67,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "2125:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 72,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2125:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 73,
                              "nodeType": "RevertStatement",
                              "src": "2118:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 77,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 56,
                              "src": "2195:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 76,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "2176:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2176:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 79,
                        "nodeType": "ExpressionStatement",
                        "src": "2176:32:0"
                      }
                    ]
                  },
                  "id": 81,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 59,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 58,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2045:16:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "2045:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2045:16:0"
                    }
                  ],
                  "name": "__Ownable_init_unchained",
                  "nameLocation": "1989:24:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "2022:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 81,
                        "src": "2014:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2014:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2013:22:0"
                  },
                  "returnParameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2062:0:0"
                  },
                  "scope": 194,
                  "src": "1980:235:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 88,
                    "nodeType": "Block",
                    "src": "2324:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 84,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122,
                            "src": "2334:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 85,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2334:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86,
                        "nodeType": "ExpressionStatement",
                        "src": "2334:13:0"
                      },
                      {
                        "id": 87,
                        "nodeType": "PlaceholderStatement",
                        "src": "2357:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 82,
                    "nodeType": "StructuredDocumentation",
                    "src": "2221:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 89,
                  "name": "onlyOwner",
                  "nameLocation": "2312:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 83,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2321:2:0"
                  },
                  "src": "2303:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 104,
                    "nodeType": "Block",
                    "src": "2496:89:0",
                    "statements": [
                      {
                        "assignments": [
                          97
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 97,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2529:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 104,
                            "src": "2506:24:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage"
                            },
                            "typeName": {
                              "id": 96,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 95,
                                "name": "OwnableStorage",
                                "nameLocations": [
                                  "2506:14:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14,
                                "src": "2506:14:0"
                              },
                              "referencedDeclaration": 14,
                              "src": "2506:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 100,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 98,
                            "name": "_getOwnableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "2533:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
                              "typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2533:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2506:47:0"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 101,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97,
                            "src": "2570:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2572:6:0",
                          "memberName": "_owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "2570:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 94,
                        "id": 103,
                        "nodeType": "Return",
                        "src": "2563:15:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 90,
                    "nodeType": "StructuredDocumentation",
                    "src": "2371:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 105,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "2450:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 91,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2455:2:0"
                  },
                  "returnParameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 105,
                        "src": "2487:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2487:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2486:9:0"
                  },
                  "scope": 194,
                  "src": "2441:144:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 121,
                    "nodeType": "Block",
                    "src": "2703:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 109,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "2717:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2717:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 111,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "2728:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2728:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2717:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2713:101:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2742:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 115,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 490,
                                      "src": "2790:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2790:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 114,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "2763:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2763:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2756:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 106,
                    "nodeType": "StructuredDocumentation",
                    "src": "2591:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 122,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "2667:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 107,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2678:2:0"
                  },
                  "returnParameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2703:0:0"
                  },
                  "scope": 194,
                  "src": "2658:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 135,
                    "nodeType": "Block",
                    "src": "3209:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3246:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3238:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 129,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3238:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3238:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 128,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "3219:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3219:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "3219:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 123,
                    "nodeType": "StructuredDocumentation",
                    "src": "2826:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 136,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 126,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 125,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3199:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "3199:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3199:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "3164:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3181:2:0"
                  },
                  "returnParameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3209:0:0"
                  },
                  "scope": 194,
                  "src": "3155:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 163,
                    "nodeType": "Block",
                    "src": "3475:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 144,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 139,
                            "src": "3489:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3509:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3501:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 145,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3501:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3501:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3489:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 158,
                        "nodeType": "IfStatement",
                        "src": "3485:91:0",
                        "trueBody": {
                          "id": 157,
                          "nodeType": "Block",
                          "src": "3513:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3562:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 152,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3554:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 151,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3554:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3554:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 150,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "3534:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3534:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 156,
                              "nodeType": "RevertStatement",
                              "src": "3527:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 160,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 139,
                              "src": "3604:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 159,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "3585:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3585:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 162,
                        "nodeType": "ExpressionStatement",
                        "src": "3585:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 137,
                    "nodeType": "StructuredDocumentation",
                    "src": "3262:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 164,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 142,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 141,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "3465:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "3465:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3465:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "3414:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "3440:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 164,
                        "src": "3432:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3432:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3431:18:0"
                  },
                  "returnParameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3475:0:0"
                  },
                  "scope": 194,
                  "src": "3405:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 192,
                    "nodeType": "Block",
                    "src": "3837:185:0",
                    "statements": [
                      {
                        "assignments": [
                          172
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 172,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3870:1:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 192,
                            "src": "3847:24:0",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage"
                            },
                            "typeName": {
                              "id": 171,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 170,
                                "name": "OwnableStorage",
                                "nameLocations": [
                                  "3847:14:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 14,
                                "src": "3847:14:0"
                              },
                              "referencedDeclaration": 14,
                              "src": "3847:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 175,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 173,
                            "name": "_getOwnableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "3874:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
                              "typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
                            }
                          },
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3874:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                            "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3847:47:0"
                      },
                      {
                        "assignments": [
                          177
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 177,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "3912:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 192,
                            "src": "3904:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 176,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3904:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 180,
                        "initialValue": {
                          "expression": {
                            "id": 178,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 172,
                            "src": "3923:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                              "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                            }
                          },
                          "id": 179,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3925:6:0",
                          "memberName": "_owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "3923:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3904:27:0"
                      },
                      {
                        "expression": {
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 181,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 172,
                              "src": "3941:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
                                "typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
                              }
                            },
                            "id": 183,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3943:6:0",
                            "memberName": "_owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13,
                            "src": "3941:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 184,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "3952:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3941:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "3941:19:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 188,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "3996:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 189,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "4006:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 187,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "3975:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3975:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 191,
                        "nodeType": "EmitStatement",
                        "src": "3970:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 165,
                    "nodeType": "StructuredDocumentation",
                    "src": "3626:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 193,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "3783:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 167,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "3810:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 193,
                        "src": "3802:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3802:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3801:18:0"
                  },
                  "returnParameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3837:0:0"
                  },
                  "scope": 194,
                  "src": "3774:248:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 195,
              "src": "749:3275:0",
              "usedErrors": [
                30,
                35,
                211,
                214
              ],
              "usedEvents": [
                41,
                219
              ]
            }
          ],
          "src": "102:3923:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
          "exportedSymbols": {
            "Initializable": [
              462
            ]
          },
          "id": 463,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 196,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "113:24:1"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Initializable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 197,
                "nodeType": "StructuredDocumentation",
                "src": "139:2209:1",
                "text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
              },
              "fullyImplemented": true,
              "id": 462,
              "linearizedBaseContracts": [
                462
              ],
              "name": "Initializable",
              "nameLocation": "2367:13:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Initializable.InitializableStorage",
                  "documentation": {
                    "id": 198,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:293:1",
                    "text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
                  },
                  "id": 205,
                  "members": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "_initialized",
                      "nameLocation": "2820:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2813:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 200,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2813:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "_initializing",
                      "nameLocation": "2955:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2950:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2950:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "InitializableStorage",
                  "nameLocation": "2692:20:1",
                  "nodeType": "StructDefinition",
                  "scope": 462,
                  "src": "2685:290:1",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 208,
                  "mutability": "constant",
                  "name": "INITIALIZABLE_STORAGE",
                  "nameLocation": "3123:21:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 462,
                  "src": "3098:115:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3098:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3147:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
                      "typeString": "int_const 1089...(70 digits omitted)...9600"
                    },
                    "value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 209,
                    "nodeType": "StructuredDocumentation",
                    "src": "3220:60:1",
                    "text": " @dev The contract is already initialized."
                  },
                  "errorSelector": "f92ee8a9",
                  "id": 211,
                  "name": "InvalidInitialization",
                  "nameLocation": "3291:21:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 210,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3312:2:1"
                  },
                  "src": "3285:30:1"
                },
                {
                  "documentation": {
                    "id": 212,
                    "nodeType": "StructuredDocumentation",
                    "src": "3321:57:1",
                    "text": " @dev The contract is not initializing."
                  },
                  "errorSelector": "d7e6bcf8",
                  "id": 214,
                  "name": "NotInitializing",
                  "nameLocation": "3389:15:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3404:2:1"
                  },
                  "src": "3383:24:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 215,
                    "nodeType": "StructuredDocumentation",
                    "src": "3413:90:1",
                    "text": " @dev Triggered when the contract has been initialized or reinitialized."
                  },
                  "eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
                  "id": 219,
                  "name": "Initialized",
                  "nameLocation": "3514:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "3533:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 219,
                        "src": "3526:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "3526:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3525:16:1"
                  },
                  "src": "3508:34:1"
                },
                {
                  "body": {
                    "id": 301,
                    "nodeType": "Block",
                    "src": "4092:1079:1",
                    "statements": [
                      {
                        "assignments": [
                          224
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 224,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "4187:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4158:30:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 223,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 222,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "4158:20:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 205,
                                "src": "4158:20:1"
                              },
                              "referencedDeclaration": 205,
                              "src": "4158:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 227,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 225,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "4191:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4191:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4158:59:1"
                      },
                      {
                        "assignments": [
                          229
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 229,
                            "mutability": "mutable",
                            "name": "isTopLevelCall",
                            "nameLocation": "4284:14:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4279:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 228,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4279:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 233,
                        "initialValue": {
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4301:16:1",
                          "subExpression": {
                            "expression": {
                              "id": 230,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "4302:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 231,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4304:13:1",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 204,
                            "src": "4302:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4279:38:1"
                      },
                      {
                        "assignments": [
                          235
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 235,
                            "mutability": "mutable",
                            "name": "initialized",
                            "nameLocation": "4334:11:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4327:18:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "typeName": {
                              "id": 234,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "4327:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 238,
                        "initialValue": {
                          "expression": {
                            "id": 236,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 224,
                            "src": "4348:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4350:12:1",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 201,
                          "src": "4348:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4327:35:1"
                      },
                      {
                        "assignments": [
                          240
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 240,
                            "mutability": "mutable",
                            "name": "initialSetup",
                            "nameLocation": "4709:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4704:17:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 239,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4704:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 246,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 241,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "4724:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4739:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4724:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 244,
                            "name": "isTopLevelCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "4744:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4724:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4704:54:1"
                      },
                      {
                        "assignments": [
                          248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 248,
                            "mutability": "mutable",
                            "name": "construction",
                            "nameLocation": "4773:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4768:17:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 247,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4768:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 261,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 249,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "4788:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4803:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4788:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 254,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "4816:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Initializable_$462",
                                        "typeString": "contract Initializable"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Initializable_$462",
                                        "typeString": "contract Initializable"
                                      }
                                    ],
                                    "id": 253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4808:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 252,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4808:7:1",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 255,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4808:13:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 256,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4822:4:1",
                                "memberName": "code",
                                "nodeType": "MemberAccess",
                                "src": "4808:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 257,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4827:6:1",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4808:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4837:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4808:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4788:50:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4768:70:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4853:13:1",
                            "subExpression": {
                              "id": 262,
                              "name": "initialSetup",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "4854:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "4870:13:1",
                            "subExpression": {
                              "id": 264,
                              "name": "construction",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "4871:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4853:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 271,
                        "nodeType": "IfStatement",
                        "src": "4849:91:1",
                        "trueBody": {
                          "id": 270,
                          "nodeType": "Block",
                          "src": "4885:55:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 267,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 211,
                                  "src": "4906:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 268,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4906:23:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 269,
                              "nodeType": "RevertStatement",
                              "src": "4899:30:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 272,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 224,
                              "src": "4949:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 274,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4951:12:1",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 201,
                            "src": "4949:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4966:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4949:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 277,
                        "nodeType": "ExpressionStatement",
                        "src": "4949:18:1"
                      },
                      {
                        "condition": {
                          "id": 278,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "4981:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 286,
                        "nodeType": "IfStatement",
                        "src": "4977:67:1",
                        "trueBody": {
                          "id": 285,
                          "nodeType": "Block",
                          "src": "4997:47:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 279,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 224,
                                    "src": "5011:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 281,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5013:13:1",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 204,
                                  "src": "5011:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5029:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "5011:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 284,
                              "nodeType": "ExpressionStatement",
                              "src": "5011:22:1"
                            }
                          ]
                        }
                      },
                      {
                        "id": 287,
                        "nodeType": "PlaceholderStatement",
                        "src": "5053:1:1"
                      },
                      {
                        "condition": {
                          "id": 288,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "5068:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 300,
                        "nodeType": "IfStatement",
                        "src": "5064:101:1",
                        "trueBody": {
                          "id": 299,
                          "nodeType": "Block",
                          "src": "5084:81:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 289,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 224,
                                    "src": "5098:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 291,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "5100:13:1",
                                  "memberName": "_initializing",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 204,
                                  "src": "5098:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5116:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "5098:23:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 294,
                              "nodeType": "ExpressionStatement",
                              "src": "5098:23:1"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 296,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5152:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "id": 295,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "5140:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 297,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5140:14:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 298,
                              "nodeType": "EmitStatement",
                              "src": "5135:19:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 220,
                    "nodeType": "StructuredDocumentation",
                    "src": "3548:516:1",
                    "text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
                  },
                  "id": 302,
                  "name": "initializer",
                  "nameLocation": "4078:11:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 221,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4089:2:1"
                  },
                  "src": "4069:1102:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 348,
                    "nodeType": "Block",
                    "src": "6289:392:1",
                    "statements": [
                      {
                        "assignments": [
                          309
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 309,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "6384:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 348,
                            "src": "6355:30:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 308,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 307,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "6355:20:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 205,
                                "src": "6355:20:1"
                              },
                              "referencedDeclaration": 205,
                              "src": "6355:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 312,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 310,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "6388:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6388:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6355:59:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 313,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "6429:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6431:13:1",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 204,
                            "src": "6429:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 315,
                                "name": "$",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "6448:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                  "typeString": "struct Initializable.InitializableStorage storage pointer"
                                }
                              },
                              "id": 316,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6450:12:1",
                              "memberName": "_initialized",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 201,
                              "src": "6448:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 317,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "6466:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "6448:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6429:44:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 324,
                        "nodeType": "IfStatement",
                        "src": "6425:105:1",
                        "trueBody": {
                          "id": 323,
                          "nodeType": "Block",
                          "src": "6475:55:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 320,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 211,
                                  "src": "6496:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6496:23:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 322,
                              "nodeType": "RevertStatement",
                              "src": "6489:30:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 325,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "6539:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 327,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6541:12:1",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 201,
                            "src": "6539:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 328,
                            "name": "version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "6556:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "6539:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "6539:24:1"
                      },
                      {
                        "expression": {
                          "id": 335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 331,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "6573:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6575:13:1",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 204,
                            "src": "6573:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6591:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6573:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 336,
                        "nodeType": "ExpressionStatement",
                        "src": "6573:22:1"
                      },
                      {
                        "id": 337,
                        "nodeType": "PlaceholderStatement",
                        "src": "6605:1:1"
                      },
                      {
                        "expression": {
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 338,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "6616:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 340,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6618:13:1",
                            "memberName": "_initializing",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 204,
                            "src": "6616:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6634:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6616:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 343,
                        "nodeType": "ExpressionStatement",
                        "src": "6616:23:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 345,
                              "name": "version",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "6666:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 344,
                            "name": "Initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "6654:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                              "typeString": "function (uint64)"
                            }
                          },
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6654:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 347,
                        "nodeType": "EmitStatement",
                        "src": "6649:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 303,
                    "nodeType": "StructuredDocumentation",
                    "src": "5177:1068:1",
                    "text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
                  },
                  "id": 349,
                  "name": "reinitializer",
                  "nameLocation": "6259:13:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "version",
                        "nameLocation": "6280:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 349,
                        "src": "6273:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "6273:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6272:16:1"
                  },
                  "src": "6250:431:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 356,
                    "nodeType": "Block",
                    "src": "6919:48:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 352,
                            "name": "_checkInitializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 370,
                            "src": "6929:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6929:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 354,
                        "nodeType": "ExpressionStatement",
                        "src": "6929:20:1"
                      },
                      {
                        "id": 355,
                        "nodeType": "PlaceholderStatement",
                        "src": "6959:1:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 350,
                    "nodeType": "StructuredDocumentation",
                    "src": "6687:199:1",
                    "text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
                  },
                  "id": 357,
                  "name": "onlyInitializing",
                  "nameLocation": "6900:16:1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6916:2:1"
                  },
                  "src": "6891:76:1",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 369,
                    "nodeType": "Block",
                    "src": "7134:89:1",
                    "statements": [
                      {
                        "condition": {
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7148:18:1",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 361,
                              "name": "_isInitializing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "7149:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7149:17:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 368,
                        "nodeType": "IfStatement",
                        "src": "7144:73:1",
                        "trueBody": {
                          "id": 367,
                          "nodeType": "Block",
                          "src": "7168:49:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 364,
                                  "name": "NotInitializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 214,
                                  "src": "7189:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7189:17:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 366,
                              "nodeType": "RevertStatement",
                              "src": "7182:24:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 358,
                    "nodeType": "StructuredDocumentation",
                    "src": "6973:104:1",
                    "text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
                  },
                  "id": 370,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkInitializing",
                  "nameLocation": "7091:18:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7109:2:1"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7134:0:1"
                  },
                  "scope": 462,
                  "src": "7082:141:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 415,
                    "nodeType": "Block",
                    "src": "7758:373:1",
                    "statements": [
                      {
                        "assignments": [
                          376
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 376,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "7853:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 415,
                            "src": "7824:30:1",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage"
                            },
                            "typeName": {
                              "id": 375,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 374,
                                "name": "InitializableStorage",
                                "nameLocations": [
                                  "7824:20:1"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 205,
                                "src": "7824:20:1"
                              },
                              "referencedDeclaration": 205,
                              "src": "7824:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 379,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 377,
                            "name": "_getInitializableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "7857:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                              "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7857:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7824:59:1"
                      },
                      {
                        "condition": {
                          "expression": {
                            "id": 380,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 376,
                            "src": "7898:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 381,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7900:13:1",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 204,
                          "src": "7898:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 386,
                        "nodeType": "IfStatement",
                        "src": "7894:76:1",
                        "trueBody": {
                          "id": 385,
                          "nodeType": "Block",
                          "src": "7915:55:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 382,
                                  "name": "InvalidInitialization",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 211,
                                  "src": "7936:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7936:23:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 384,
                              "nodeType": "RevertStatement",
                              "src": "7929:30:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 387,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "7983:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                "typeString": "struct Initializable.InitializableStorage storage pointer"
                              }
                            },
                            "id": 388,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7985:12:1",
                            "memberName": "_initialized",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 201,
                            "src": "7983:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 391,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8006:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  },
                                  "typeName": {
                                    "id": 390,
                                    "name": "uint64",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8006:6:1",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint64_$",
                                    "typeString": "type(uint64)"
                                  }
                                ],
                                "id": 389,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "8001:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8001:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint64",
                                "typeString": "type(uint64)"
                              }
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8014:3:1",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "8001:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "7983:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 414,
                        "nodeType": "IfStatement",
                        "src": "7979:146:1",
                        "trueBody": {
                          "id": 413,
                          "nodeType": "Block",
                          "src": "8019:106:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 403,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 395,
                                    "name": "$",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 376,
                                    "src": "8033:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                                      "typeString": "struct Initializable.InitializableStorage storage pointer"
                                    }
                                  },
                                  "id": 397,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8035:12:1",
                                  "memberName": "_initialized",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 201,
                                  "src": "8033:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 400,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "8055:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        },
                                        "typeName": {
                                          "id": 399,
                                          "name": "uint64",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8055:6:1",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_uint64_$",
                                          "typeString": "type(uint64)"
                                        }
                                      ],
                                      "id": 398,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "8050:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 401,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8050:12:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_uint64",
                                      "typeString": "type(uint64)"
                                    }
                                  },
                                  "id": 402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "8063:3:1",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "8050:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "8033:33:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 404,
                              "nodeType": "ExpressionStatement",
                              "src": "8033:33:1"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 408,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "8102:6:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          },
                                          "typeName": {
                                            "id": 407,
                                            "name": "uint64",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "8102:6:1",
                                            "typeDescriptions": {}
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_type$_t_uint64_$",
                                            "typeString": "type(uint64)"
                                          }
                                        ],
                                        "id": 406,
                                        "name": "type",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -27,
                                        "src": "8097:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 409,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8097:12:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_meta_type_t_uint64",
                                        "typeString": "type(uint64)"
                                      }
                                    },
                                    "id": 410,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "8110:3:1",
                                    "memberName": "max",
                                    "nodeType": "MemberAccess",
                                    "src": "8097:16:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  ],
                                  "id": 405,
                                  "name": "Initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "8085:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
                                    "typeString": "function (uint64)"
                                  }
                                },
                                "id": 411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8085:29:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 412,
                              "nodeType": "EmitStatement",
                              "src": "8080:34:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 371,
                    "nodeType": "StructuredDocumentation",
                    "src": "7229:475:1",
                    "text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
                  },
                  "id": 416,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_disableInitializers",
                  "nameLocation": "7718:20:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7738:2:1"
                  },
                  "returnParameters": {
                    "id": 373,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7758:0:1"
                  },
                  "scope": 462,
                  "src": "7709:422:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 426,
                    "nodeType": "Block",
                    "src": "8306:63:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 422,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "8323:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8323:26:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8350:12:1",
                          "memberName": "_initialized",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 201,
                          "src": "8323:39:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "functionReturnParameters": 421,
                        "id": 425,
                        "nodeType": "Return",
                        "src": "8316:46:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 417,
                    "nodeType": "StructuredDocumentation",
                    "src": "8137:99:1",
                    "text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
                  },
                  "id": 427,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializedVersion",
                  "nameLocation": "8250:22:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8272:2:1"
                  },
                  "returnParameters": {
                    "id": 421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 420,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 427,
                        "src": "8298:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 419,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "8298:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8297:8:1"
                  },
                  "scope": 462,
                  "src": "8241:128:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 437,
                    "nodeType": "Block",
                    "src": "8541:64:1",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 433,
                              "name": "_getInitializableStorage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "8558:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
                                "typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8558:26:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                              "typeString": "struct Initializable.InitializableStorage storage pointer"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8585:13:1",
                          "memberName": "_initializing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 204,
                          "src": "8558:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 432,
                        "id": 436,
                        "nodeType": "Return",
                        "src": "8551:47:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 428,
                    "nodeType": "StructuredDocumentation",
                    "src": "8375:105:1",
                    "text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
                  },
                  "id": 438,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_isInitializing",
                  "nameLocation": "8494:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 429,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8509:2:1"
                  },
                  "returnParameters": {
                    "id": 432,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 438,
                        "src": "8535:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8535:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8534:6:1"
                  },
                  "scope": 462,
                  "src": "8485:120:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 446,
                    "nodeType": "Block",
                    "src": "8896:45:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 444,
                          "name": "INITIALIZABLE_STORAGE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "8913:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 443,
                        "id": 445,
                        "nodeType": "Return",
                        "src": "8906:28:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 439,
                    "nodeType": "StructuredDocumentation",
                    "src": "8611:203:1",
                    "text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
                  },
                  "id": 447,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_initializableStorageSlot",
                  "nameLocation": "8828:25:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 440,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8853:2:1"
                  },
                  "returnParameters": {
                    "id": 443,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 442,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 447,
                        "src": "8887:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 441,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8887:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8886:9:1"
                  },
                  "scope": 462,
                  "src": "8819:122:1",
                  "stateMutability": "pure",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 460,
                    "nodeType": "Block",
                    "src": "9161:115:1",
                    "statements": [
                      {
                        "assignments": [
                          455
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 455,
                            "mutability": "mutable",
                            "name": "slot",
                            "nameLocation": "9179:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 460,
                            "src": "9171:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 454,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9171:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 458,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 456,
                            "name": "_initializableStorageSlot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "9186:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9186:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9171:42:1"
                      },
                      {
                        "AST": {
                          "nativeSrc": "9232:38:1",
                          "nodeType": "YulBlock",
                          "src": "9232:38:1",
                          "statements": [
                            {
                              "nativeSrc": "9246:14:1",
                              "nodeType": "YulAssignment",
                              "src": "9246:14:1",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "9256:4:1",
                                "nodeType": "YulIdentifier",
                                "src": "9256:4:1"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "9246:6:1",
                                  "nodeType": "YulIdentifier",
                                  "src": "9246:6:1"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 452,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "9246:6:1",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 455,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "9256:4:1",
                            "valueSize": 1
                          }
                        ],
                        "id": 459,
                        "nodeType": "InlineAssembly",
                        "src": "9223:47:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 448,
                    "nodeType": "StructuredDocumentation",
                    "src": "8947:67:1",
                    "text": " @dev Returns a pointer to the storage namespace."
                  },
                  "id": 461,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getInitializableStorage",
                  "nameLocation": "9080:24:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9104:2:1"
                  },
                  "returnParameters": {
                    "id": 453,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 452,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "9158:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 461,
                        "src": "9129:30:1",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                          "typeString": "struct Initializable.InitializableStorage"
                        },
                        "typeName": {
                          "id": 451,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 450,
                            "name": "InitializableStorage",
                            "nameLocations": [
                              "9129:20:1"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 205,
                            "src": "9129:20:1"
                          },
                          "referencedDeclaration": 205,
                          "src": "9129:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
                            "typeString": "struct Initializable.InitializableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9128:32:1"
                  },
                  "scope": 462,
                  "src": "9071:205:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 463,
              "src": "2349:6929:1",
              "usedErrors": [
                211,
                214
              ],
              "usedEvents": [
                219
              ]
            }
          ],
          "src": "113:9166:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              508
            ],
            "Initializable": [
              462
            ]
          },
          "id": 509,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 464,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 466,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 509,
              "sourceUnit": 463,
              "src": "126:63:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 465,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 462,
                    "src": "134:13:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 468,
                    "name": "Initializable",
                    "nameLocations": [
                      "728:13:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 462,
                    "src": "728:13:2"
                  },
                  "id": 469,
                  "nodeType": "InheritanceSpecifier",
                  "src": "728:13:2"
                }
              ],
              "canonicalName": "ContextUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 467,
                "nodeType": "StructuredDocumentation",
                "src": "191:496:2",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 508,
              "linearizedBaseContracts": [
                508,
                462
              ],
              "name": "ContextUpgradeable",
              "nameLocation": "706:18:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 474,
                    "nodeType": "Block",
                    "src": "800:7:2",
                    "statements": []
                  },
                  "id": 475,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 472,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 471,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "783:16:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "783:16:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "783:16:2"
                    }
                  ],
                  "name": "__Context_init",
                  "nameLocation": "757:14:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 470,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "771:2:2"
                  },
                  "returnParameters": {
                    "id": 473,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "800:0:2"
                  },
                  "scope": 508,
                  "src": "748:59:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 480,
                    "nodeType": "Block",
                    "src": "875:7:2",
                    "statements": []
                  },
                  "id": 481,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 478,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 477,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "858:16:2"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "858:16:2"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "858:16:2"
                    }
                  ],
                  "name": "__Context_init_unchained",
                  "nameLocation": "822:24:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 476,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "846:2:2"
                  },
                  "returnParameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "875:0:2"
                  },
                  "scope": 508,
                  "src": "813:69:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 489,
                    "nodeType": "Block",
                    "src": "949:34:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 486,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "966:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "970:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "966:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 485,
                        "id": 488,
                        "nodeType": "Return",
                        "src": "959:17:2"
                      }
                    ]
                  },
                  "id": 490,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "896:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 482,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "906:2:2"
                  },
                  "returnParameters": {
                    "id": 485,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 484,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 490,
                        "src": "940:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 483,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "939:9:2"
                  },
                  "scope": 508,
                  "src": "887:96:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 498,
                    "nodeType": "Block",
                    "src": "1056:32:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 495,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1073:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1077:4:2",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "1073:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 494,
                        "id": 497,
                        "nodeType": "Return",
                        "src": "1066:15:2"
                      }
                    ]
                  },
                  "id": 499,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "998:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 491,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1006:2:2"
                  },
                  "returnParameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 499,
                        "src": "1040:14:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1040:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1039:16:2"
                  },
                  "scope": 508,
                  "src": "989:99:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 506,
                    "nodeType": "Block",
                    "src": "1166:25:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1183:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 503,
                        "id": 505,
                        "nodeType": "Return",
                        "src": "1176:8:2"
                      }
                    ]
                  },
                  "id": 507,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "1103:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 500,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1123:2:2"
                  },
                  "returnParameters": {
                    "id": 503,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 502,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "1157:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 501,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1157:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1156:9:2"
                  },
                  "scope": 508,
                  "src": "1094:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 509,
              "src": "688:505:2",
              "usedErrors": [
                211,
                214
              ],
              "usedEvents": [
                219
              ]
            }
          ],
          "src": "101:1093:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              508
            ],
            "Initializable": [
              462
            ],
            "PausableUpgradeable": [
              668
            ]
          },
          "id": 669,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 510,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
              "file": "../utils/ContextUpgradeable.sol",
              "id": 512,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 669,
              "sourceUnit": 509,
              "src": "128:67:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 511,
                    "name": "ContextUpgradeable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 508,
                    "src": "136:18:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "../proxy/utils/Initializable.sol",
              "id": 514,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 669,
              "sourceUnit": 463,
              "src": "196:63:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 513,
                    "name": "Initializable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 462,
                    "src": "204:13:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 516,
                    "name": "Initializable",
                    "nameLocations": [
                      "742:13:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 462,
                    "src": "742:13:3"
                  },
                  "id": 517,
                  "nodeType": "InheritanceSpecifier",
                  "src": "742:13:3"
                },
                {
                  "baseName": {
                    "id": 518,
                    "name": "ContextUpgradeable",
                    "nameLocations": [
                      "757:18:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 508,
                    "src": "757:18:3"
                  },
                  "id": 519,
                  "nodeType": "InheritanceSpecifier",
                  "src": "757:18:3"
                }
              ],
              "canonicalName": "PausableUpgradeable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 515,
                "nodeType": "StructuredDocumentation",
                "src": "261:439:3",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 668,
              "linearizedBaseContracts": [
                668,
                508,
                462
              ],
              "name": "PausableUpgradeable",
              "nameLocation": "719:19:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "PausableUpgradeable.PausableStorage",
                  "documentation": {
                    "id": 520,
                    "nodeType": "StructuredDocumentation",
                    "src": "782:66:3",
                    "text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
                  },
                  "id": 523,
                  "members": [
                    {
                      "constant": false,
                      "id": 522,
                      "mutability": "mutable",
                      "name": "_paused",
                      "nameLocation": "891:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 523,
                      "src": "886:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 521,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "886:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "PausableStorage",
                  "nameLocation": "860:15:3",
                  "nodeType": "StructDefinition",
                  "scope": 668,
                  "src": "853:52:3",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 526,
                  "mutability": "constant",
                  "name": "PausableStorageLocation",
                  "nameLocation": "1048:23:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 668,
                  "src": "1023:117:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1023:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1074:66:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
                      "typeString": "int_const 9289...(69 digits omitted)...6832"
                    },
                    "value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 533,
                    "nodeType": "Block",
                    "src": "1227:82:3",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "1246:57:3",
                          "nodeType": "YulBlock",
                          "src": "1246:57:3",
                          "statements": [
                            {
                              "nativeSrc": "1260:33:3",
                              "nodeType": "YulAssignment",
                              "src": "1260:33:3",
                              "value": {
                                "name": "PausableStorageLocation",
                                "nativeSrc": "1270:23:3",
                                "nodeType": "YulIdentifier",
                                "src": "1270:23:3"
                              },
                              "variableNames": [
                                {
                                  "name": "$.slot",
                                  "nativeSrc": "1260:6:3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1260:6:3"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 530,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "1260:6:3",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 526,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1270:23:3",
                            "valueSize": 1
                          }
                        ],
                        "id": 532,
                        "nodeType": "InlineAssembly",
                        "src": "1237:66:3"
                      }
                    ]
                  },
                  "id": 534,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getPausableStorage",
                  "nameLocation": "1156:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 527,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1175:2:3"
                  },
                  "returnParameters": {
                    "id": 531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 530,
                        "mutability": "mutable",
                        "name": "$",
                        "nameLocation": "1224:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "1200:25:3",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                          "typeString": "struct PausableUpgradeable.PausableStorage"
                        },
                        "typeName": {
                          "id": 529,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 528,
                            "name": "PausableStorage",
                            "nameLocations": [
                              "1200:15:3"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 523,
                            "src": "1200:15:3"
                          },
                          "referencedDeclaration": 523,
                          "src": "1200:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                            "typeString": "struct PausableUpgradeable.PausableStorage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1199:27:3"
                  },
                  "scope": 668,
                  "src": "1147:162:3",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 535,
                    "nodeType": "StructuredDocumentation",
                    "src": "1315:73:3",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 539,
                  "name": "Paused",
                  "nameLocation": "1399:6:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 538,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 537,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1414:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 539,
                        "src": "1406:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 536,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1406:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1405:17:3"
                  },
                  "src": "1393:30:3"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 540,
                    "nodeType": "StructuredDocumentation",
                    "src": "1429:70:3",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 544,
                  "name": "Unpaused",
                  "nameLocation": "1510:8:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 542,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1527:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 544,
                        "src": "1519:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 541,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1519:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1518:17:3"
                  },
                  "src": "1504:32:3"
                },
                {
                  "documentation": {
                    "id": 545,
                    "nodeType": "StructuredDocumentation",
                    "src": "1542:76:3",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 547,
                  "name": "EnforcedPause",
                  "nameLocation": "1629:13:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1642:2:3"
                  },
                  "src": "1623:22:3"
                },
                {
                  "documentation": {
                    "id": 548,
                    "nodeType": "StructuredDocumentation",
                    "src": "1651:80:3",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 550,
                  "name": "ExpectedPause",
                  "nameLocation": "1742:13:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 549,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1755:2:3"
                  },
                  "src": "1736:22:3"
                },
                {
                  "body": {
                    "id": 557,
                    "nodeType": "Block",
                    "src": "1969:47:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 553,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "1979:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1979:19:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 555,
                        "nodeType": "ExpressionStatement",
                        "src": "1979:19:3"
                      },
                      {
                        "id": 556,
                        "nodeType": "PlaceholderStatement",
                        "src": "2008:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 551,
                    "nodeType": "StructuredDocumentation",
                    "src": "1764:175:3",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 558,
                  "name": "whenNotPaused",
                  "nameLocation": "1953:13:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 552,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1966:2:3"
                  },
                  "src": "1944:72:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 565,
                    "nodeType": "Block",
                    "src": "2216:44:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 561,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "2226:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2226:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 563,
                        "nodeType": "ExpressionStatement",
                        "src": "2226:16:3"
                      },
                      {
                        "id": 564,
                        "nodeType": "PlaceholderStatement",
                        "src": "2252:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 559,
                    "nodeType": "StructuredDocumentation",
                    "src": "2022:167:3",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 566,
                  "name": "whenPaused",
                  "nameLocation": "2203:10:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 560,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2213:2:3"
                  },
                  "src": "2194:66:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "2319:7:3",
                    "statements": []
                  },
                  "id": 572,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 569,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 568,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2302:16:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "2302:16:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2302:16:3"
                    }
                  ],
                  "name": "__Pausable_init",
                  "nameLocation": "2275:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 567,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2290:2:3"
                  },
                  "returnParameters": {
                    "id": 570,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:0:3"
                  },
                  "scope": 668,
                  "src": "2266:60:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 577,
                    "nodeType": "Block",
                    "src": "2395:7:3",
                    "statements": []
                  },
                  "id": 578,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 575,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 574,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "2378:16:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "2378:16:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2378:16:3"
                    }
                  ],
                  "name": "__Pausable_init_unchained",
                  "nameLocation": "2341:25:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2366:2:3"
                  },
                  "returnParameters": {
                    "id": 576,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2395:0:3"
                  },
                  "scope": 668,
                  "src": "2332:70:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 593,
                    "nodeType": "Block",
                    "src": "2549:92:3",
                    "statements": [
                      {
                        "assignments": [
                          586
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 586,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "2583:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 593,
                            "src": "2559:25:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                              "typeString": "struct PausableUpgradeable.PausableStorage"
                            },
                            "typeName": {
                              "id": 585,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 584,
                                "name": "PausableStorage",
                                "nameLocations": [
                                  "2559:15:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 523,
                                "src": "2559:15:3"
                              },
                              "referencedDeclaration": 523,
                              "src": "2559:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                                "typeString": "struct PausableUpgradeable.PausableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 589,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 587,
                            "name": "_getPausableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "2587:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$523_storage_ptr_$",
                              "typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2587:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                            "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2559:49:3"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 590,
                            "name": "$",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 586,
                            "src": "2625:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                              "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                            }
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2627:7:3",
                          "memberName": "_paused",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 522,
                          "src": "2625:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 583,
                        "id": 592,
                        "nodeType": "Return",
                        "src": "2618:16:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 579,
                    "nodeType": "StructuredDocumentation",
                    "src": "2407:84:3",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "2505:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 580,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2511:2:3"
                  },
                  "returnParameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 582,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "2543:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 581,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2543:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2542:6:3"
                  },
                  "scope": 668,
                  "src": "2496:145:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 605,
                    "nodeType": "Block",
                    "src": "2760:77:3",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 598,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "2774:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2774:8:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 604,
                        "nodeType": "IfStatement",
                        "src": "2770:61:3",
                        "trueBody": {
                          "id": 603,
                          "nodeType": "Block",
                          "src": "2784:47:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 600,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 547,
                                  "src": "2805:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2805:15:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 602,
                              "nodeType": "RevertStatement",
                              "src": "2798:22:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 595,
                    "nodeType": "StructuredDocumentation",
                    "src": "2647:57:3",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "2718:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2735:2:3"
                  },
                  "returnParameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2760:0:3"
                  },
                  "scope": 668,
                  "src": "2709:128:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 618,
                    "nodeType": "Block",
                    "src": "2957:78:3",
                    "statements": [
                      {
                        "condition": {
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2971:9:3",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 610,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "2972:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2972:8:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 617,
                        "nodeType": "IfStatement",
                        "src": "2967:62:3",
                        "trueBody": {
                          "id": 616,
                          "nodeType": "Block",
                          "src": "2982:47:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 613,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 550,
                                  "src": "3003:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 614,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3003:15:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 615,
                              "nodeType": "RevertStatement",
                              "src": "2996:22:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 607,
                    "nodeType": "StructuredDocumentation",
                    "src": "2843:61:3",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 619,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2918:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 608,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2932:2:3"
                  },
                  "returnParameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2957:0:3"
                  },
                  "scope": 668,
                  "src": "2909:126:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 642,
                    "nodeType": "Block",
                    "src": "3219:127:3",
                    "statements": [
                      {
                        "assignments": [
                          627
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 627,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3253:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 642,
                            "src": "3229:25:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                              "typeString": "struct PausableUpgradeable.PausableStorage"
                            },
                            "typeName": {
                              "id": 626,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 625,
                                "name": "PausableStorage",
                                "nameLocations": [
                                  "3229:15:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 523,
                                "src": "3229:15:3"
                              },
                              "referencedDeclaration": 523,
                              "src": "3229:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                                "typeString": "struct PausableUpgradeable.PausableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 630,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 628,
                            "name": "_getPausableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "3257:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$523_storage_ptr_$",
                              "typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
                            }
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3257:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                            "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3229:49:3"
                      },
                      {
                        "expression": {
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 631,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "3288:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                                "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                              }
                            },
                            "id": 633,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3290:7:3",
                            "memberName": "_paused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 522,
                            "src": "3288:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3300:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3288:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 636,
                        "nodeType": "ExpressionStatement",
                        "src": "3288:16:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 638,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 490,
                                "src": "3326:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3326:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 637,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "3319:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3319:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 641,
                        "nodeType": "EmitStatement",
                        "src": "3314:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 620,
                    "nodeType": "StructuredDocumentation",
                    "src": "3041:124:3",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 643,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 623,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 622,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "3205:13:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 558,
                        "src": "3205:13:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3205:13:3"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "3179:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3185:2:3"
                  },
                  "returnParameters": {
                    "id": 624,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3219:0:3"
                  },
                  "scope": 668,
                  "src": "3170:176:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 666,
                    "nodeType": "Block",
                    "src": "3526:130:3",
                    "statements": [
                      {
                        "assignments": [
                          651
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 651,
                            "mutability": "mutable",
                            "name": "$",
                            "nameLocation": "3560:1:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 666,
                            "src": "3536:25:3",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                              "typeString": "struct PausableUpgradeable.PausableStorage"
                            },
                            "typeName": {
                              "id": 650,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 649,
                                "name": "PausableStorage",
                                "nameLocations": [
                                  "3536:15:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 523,
                                "src": "3536:15:3"
                              },
                              "referencedDeclaration": 523,
                              "src": "3536:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                                "typeString": "struct PausableUpgradeable.PausableStorage"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 654,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 652,
                            "name": "_getPausableStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "3564:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$523_storage_ptr_$",
                              "typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3564:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                            "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3536:49:3"
                      },
                      {
                        "expression": {
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 655,
                              "name": "$",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "3595:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PausableStorage_$523_storage_ptr",
                                "typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3597:7:3",
                            "memberName": "_paused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 522,
                            "src": "3595:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3607:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3595:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 660,
                        "nodeType": "ExpressionStatement",
                        "src": "3595:17:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 662,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 490,
                                "src": "3636:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3636:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 661,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "3627:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3627:22:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 665,
                        "nodeType": "EmitStatement",
                        "src": "3622:27:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 644,
                    "nodeType": "StructuredDocumentation",
                    "src": "3352:121:3",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 667,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 647,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 646,
                        "name": "whenPaused",
                        "nameLocations": [
                          "3515:10:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 566,
                        "src": "3515:10:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3515:10:3"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "3487:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3495:2:3"
                  },
                  "returnParameters": {
                    "id": 648,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3526:0:3"
                  },
                  "scope": 668,
                  "src": "3478:178:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 669,
              "src": "701:2957:3",
              "usedErrors": [
                211,
                214,
                547,
                550
              ],
              "usedEvents": [
                219,
                539,
                544
              ]
            }
          ],
          "src": "102:3557:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              2445
            ],
            "Ownable": [
              816
            ]
          },
          "id": 817,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 670,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 672,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 817,
              "sourceUnit": 2446,
              "src": "128:45:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 671,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2445,
                    "src": "136:7:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 674,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2445,
                    "src": "692:7:4"
                  },
                  "id": 675,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:4"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 673,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:4",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 816,
              "linearizedBaseContracts": [
                816,
                2445
              ],
              "name": "Ownable",
              "nameLocation": "681:7:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 677,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "706:22:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 678,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:4",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 682,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 681,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 680,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "858:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 679,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:4"
                  },
                  "src": "825:50:4"
                },
                {
                  "documentation": {
                    "id": 683,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:4",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 687,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 686,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 685,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 687,
                        "src": "994:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 684,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:4"
                  },
                  "src": "968:41:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 693,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 693,
                        "src": "1042:29:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 691,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 693,
                        "src": "1073:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:4"
                  },
                  "src": "1015:84:4"
                },
                {
                  "body": {
                    "id": 718,
                    "nodeType": "Block",
                    "src": "1259:153:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 699,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 696,
                            "src": "1273:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 700,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 713,
                        "nodeType": "IfStatement",
                        "src": "1269:95:4",
                        "trueBody": {
                          "id": 712,
                          "nodeType": "Block",
                          "src": "1301:63:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 708,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 707,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 706,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 709,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 705,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 687,
                                  "src": "1322:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 711,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 715,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 696,
                              "src": "1392:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 714,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "1373:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 717,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 694,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:4",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 719,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 697,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 696,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 719,
                        "src": "1237:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 695,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:4"
                  },
                  "returnParameters": {
                    "id": 698,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:4"
                  },
                  "scope": 816,
                  "src": "1225:187:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 726,
                    "nodeType": "Block",
                    "src": "1521:41:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 722,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "1531:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:4"
                      },
                      {
                        "id": 725,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 720,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:4",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 727,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:4"
                  },
                  "src": "1500:62:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 735,
                    "nodeType": "Block",
                    "src": "1693:30:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 733,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "1710:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 732,
                        "id": 734,
                        "nodeType": "Return",
                        "src": "1703:13:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 728,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:4",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 736,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 729,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:4"
                  },
                  "returnParameters": {
                    "id": 732,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 731,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 736,
                        "src": "1684:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 730,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:4"
                  },
                  "scope": 816,
                  "src": "1638:85:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 752,
                    "nodeType": "Block",
                    "src": "1841:117:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 740,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 736,
                              "src": "1855:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 742,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2427,
                              "src": "1866:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 751,
                        "nodeType": "IfStatement",
                        "src": "1851:101:4",
                        "trueBody": {
                          "id": 750,
                          "nodeType": "Block",
                          "src": "1880:72:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 746,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2427,
                                      "src": "1928:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 747,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 745,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 682,
                                  "src": "1901:26:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 749,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 737,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:4",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 753,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:4"
                  },
                  "returnParameters": {
                    "id": 739,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:4"
                  },
                  "scope": 816,
                  "src": "1796:162:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 766,
                    "nodeType": "Block",
                    "src": "2347:47:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 761,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 760,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 759,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "2357:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 765,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 754,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:4",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 767,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 757,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 756,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 727,
                        "src": "2337:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:4"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 755,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:4"
                  },
                  "returnParameters": {
                    "id": 758,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:4"
                  },
                  "scope": 816,
                  "src": "2293:101:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 794,
                    "nodeType": "Block",
                    "src": "2613:145:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 775,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 770,
                            "src": "2627:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 777,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 776,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 789,
                        "nodeType": "IfStatement",
                        "src": "2623:91:4",
                        "trueBody": {
                          "id": 788,
                          "nodeType": "Block",
                          "src": "2651:63:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 784,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 783,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 782,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 785,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 781,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 687,
                                  "src": "2672:19:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 786,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 787,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 791,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 770,
                              "src": "2742:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 790,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 815,
                            "src": "2723:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 793,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 768,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:4",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 795,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 773,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 772,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 727,
                        "src": "2603:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:4"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 770,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 795,
                        "src": "2570:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 769,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:4"
                  },
                  "returnParameters": {
                    "id": 774,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:4"
                  },
                  "scope": 816,
                  "src": "2543:215:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 814,
                    "nodeType": "Block",
                    "src": "2975:124:4",
                    "statements": [
                      {
                        "assignments": [
                          802
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 802,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 814,
                            "src": "2985:16:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 801,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 804,
                        "initialValue": {
                          "id": 803,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 677,
                          "src": "3004:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:4"
                      },
                      {
                        "expression": {
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 805,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "3020:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 806,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 798,
                            "src": "3029:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 808,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 810,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 802,
                              "src": "3073:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 811,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 798,
                              "src": "3083:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 809,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "3052:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 813,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 796,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:4",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 815,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 799,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 798,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "2940:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 797,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:4"
                  },
                  "returnParameters": {
                    "id": 800,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:4"
                  },
                  "scope": 816,
                  "src": "2912:187:4",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 817,
              "src": "663:2438:4",
              "usedErrors": [
                682,
                687
              ],
              "usedEvents": [
                693
              ]
            }
          ],
          "src": "102:3000:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
          "exportedSymbols": {
            "IERC1967": [
              837
            ]
          },
          "id": 838,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 818,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "107:24:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1967",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 819,
                "nodeType": "StructuredDocumentation",
                "src": "133:101:5",
                "text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
              },
              "fullyImplemented": true,
              "id": 837,
              "linearizedBaseContracts": [
                837
              ],
              "name": "IERC1967",
              "nameLocation": "245:8:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 820,
                    "nodeType": "StructuredDocumentation",
                    "src": "260:68:5",
                    "text": " @dev Emitted when the implementation is upgraded."
                  },
                  "eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
                  "id": 824,
                  "name": "Upgraded",
                  "nameLocation": "339:8:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 822,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "364:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 824,
                        "src": "348:30:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 821,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "348:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "347:32:5"
                  },
                  "src": "333:47:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 825,
                    "nodeType": "StructuredDocumentation",
                    "src": "386:67:5",
                    "text": " @dev Emitted when the admin account has changed."
                  },
                  "eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
                  "id": 831,
                  "name": "AdminChanged",
                  "nameLocation": "464:12:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 827,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "previousAdmin",
                        "nameLocation": "485:13:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 831,
                        "src": "477:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 826,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "477:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 829,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "508:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 831,
                        "src": "500:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "500:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "476:41:5"
                  },
                  "src": "458:60:5"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 832,
                    "nodeType": "StructuredDocumentation",
                    "src": "524:59:5",
                    "text": " @dev Emitted when the beacon is changed."
                  },
                  "eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
                  "id": 836,
                  "name": "BeaconUpgraded",
                  "nameLocation": "594:14:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 835,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 834,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "beacon",
                        "nameLocation": "625:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 836,
                        "src": "609:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "609:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "608:24:5"
                  },
                  "src": "588:45:5"
                }
              ],
              "scope": 838,
              "src": "235:400:5",
              "usedErrors": [],
              "usedEvents": [
                824,
                831,
                836
              ]
            }
          ],
          "src": "107:529:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              974
            ],
            "IERC20Errors": [
              879
            ],
            "IERC721Errors": [
              927
            ]
          },
          "id": 975,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 839,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 840,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:6",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 879,
              "linearizedBaseContracts": [
                879
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 841,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:6",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 849,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 843,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "654:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 842,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 845,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "670:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 844,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "687:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:6"
                  },
                  "src": "623:80:6"
                },
                {
                  "documentation": {
                    "id": 850,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:6",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 854,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 852,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 854,
                        "src": "891:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 851,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:6"
                  },
                  "src": "866:41:6"
                },
                {
                  "documentation": {
                    "id": 855,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:6",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 859,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 858,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 859,
                        "src": "1104:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:6"
                  },
                  "src": "1077:45:6"
                },
                {
                  "documentation": {
                    "id": 860,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:6",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 868,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 867,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 862,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 868,
                        "src": "1511:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 861,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 864,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 868,
                        "src": "1528:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 863,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 866,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 868,
                        "src": "1547:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 865,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:6"
                  },
                  "src": "1478:85:6"
                },
                {
                  "documentation": {
                    "id": 869,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:6",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 873,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 872,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 871,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 873,
                        "src": "1775:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 870,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:6"
                  },
                  "src": "1748:45:6"
                },
                {
                  "documentation": {
                    "id": 874,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:6",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 878,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 878,
                        "src": "2025:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:6"
                  },
                  "src": "1999:43:6"
                }
              ],
              "scope": 975,
              "src": "280:1764:6",
              "usedErrors": [
                849,
                854,
                859,
                868,
                873,
                878
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 880,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:6",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 927,
              "linearizedBaseContracts": [
                927
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 881,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:6",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 885,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 884,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 883,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 885,
                        "src": "2469:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 882,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:6"
                  },
                  "src": "2444:40:6"
                },
                {
                  "documentation": {
                    "id": 886,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:6",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 890,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 889,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 888,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 890,
                        "src": "2656:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 887,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:6"
                  },
                  "src": "2627:46:6"
                },
                {
                  "documentation": {
                    "id": 891,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:6",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 899,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 898,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 893,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 899,
                        "src": "3000:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 892,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 895,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 899,
                        "src": "3016:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 894,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 897,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 899,
                        "src": "3033:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 896,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:6"
                  },
                  "src": "2973:75:6"
                },
                {
                  "documentation": {
                    "id": 900,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:6",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 904,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 903,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 902,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 904,
                        "src": "3237:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 901,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:6"
                  },
                  "src": "3211:42:6"
                },
                {
                  "documentation": {
                    "id": 905,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:6",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 909,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 908,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 907,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 909,
                        "src": "3451:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 906,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:6"
                  },
                  "src": "3423:46:6"
                },
                {
                  "documentation": {
                    "id": 910,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:6",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 916,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 915,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 912,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "3760:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 911,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 916,
                        "src": "3778:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:6"
                  },
                  "src": "3727:68:6"
                },
                {
                  "documentation": {
                    "id": 917,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:6",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 921,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 920,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "4008:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:6"
                  },
                  "src": "3980:46:6"
                },
                {
                  "documentation": {
                    "id": 922,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:6",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 926,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 925,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "4262:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:6"
                  },
                  "src": "4234:46:6"
                }
              ],
              "scope": 975,
              "src": "2190:2092:6",
              "usedErrors": [
                885,
                890,
                899,
                904,
                909,
                916,
                921,
                926
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 928,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:6",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 974,
              "linearizedBaseContracts": [
                974
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 929,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:6",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 939,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 938,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 931,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "4860:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 930,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 933,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "4876:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 932,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 935,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "4893:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 934,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 937,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 939,
                        "src": "4909:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 936,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:6"
                  },
                  "src": "4827:99:6"
                },
                {
                  "documentation": {
                    "id": 940,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:6",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 944,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 943,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 942,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 944,
                        "src": "5116:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 941,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:6"
                  },
                  "src": "5089:43:6"
                },
                {
                  "documentation": {
                    "id": 945,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:6",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 949,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 948,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 947,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 949,
                        "src": "5331:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:6"
                  },
                  "src": "5302:47:6"
                },
                {
                  "documentation": {
                    "id": 950,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:6",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 956,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 955,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 952,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "5651:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 954,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 956,
                        "src": "5669:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 953,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:6"
                  },
                  "src": "5616:68:6"
                },
                {
                  "documentation": {
                    "id": 957,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:6",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 961,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 960,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 959,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 961,
                        "src": "5898:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 958,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:6"
                  },
                  "src": "5869:47:6"
                },
                {
                  "documentation": {
                    "id": 962,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:6",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 966,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 965,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 964,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 966,
                        "src": "6153:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 963,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:6"
                  },
                  "src": "6124:47:6"
                },
                {
                  "documentation": {
                    "id": 967,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:6",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 973,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:6",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 972,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 969,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "6494:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 968,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 971,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 973,
                        "src": "6513:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 970,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:6"
                  },
                  "src": "6462:73:6"
                }
              ],
              "scope": 975,
              "src": "4430:2107:6",
              "usedErrors": [
                939,
                944,
                949,
                956,
                961,
                966,
                973
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
          "exportedSymbols": {
            "ERC1967Proxy": [
              1012
            ],
            "ERC1967Utils": [
              1306
            ],
            "Proxy": [
              1342
            ]
          },
          "id": 1013,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 976,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".22"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
              "file": "../Proxy.sol",
              "id": 978,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1013,
              "sourceUnit": 1343,
              "src": "140:35:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 977,
                    "name": "Proxy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1342,
                    "src": "148:5:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
              "file": "./ERC1967Utils.sol",
              "id": 980,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1013,
              "sourceUnit": 1307,
              "src": "176:48:7",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 979,
                    "name": "ERC1967Utils",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1306,
                    "src": "184:12:7",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 982,
                    "name": "Proxy",
                    "nameLocations": [
                      "625:5:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1342,
                    "src": "625:5:7"
                  },
                  "id": 983,
                  "nodeType": "InheritanceSpecifier",
                  "src": "625:5:7"
                }
              ],
              "canonicalName": "ERC1967Proxy",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 981,
                "nodeType": "StructuredDocumentation",
                "src": "226:373:7",
                "text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
              },
              "fullyImplemented": true,
              "id": 1012,
              "linearizedBaseContracts": [
                1012,
                1342
              ],
              "name": "ERC1967Proxy",
              "nameLocation": "609:12:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 998,
                    "nodeType": "Block",
                    "src": "1145:69:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 994,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "1185:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 995,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 988,
                              "src": "1201:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 991,
                              "name": "ERC1967Utils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1306,
                              "src": "1155:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1306_$",
                                "typeString": "type(library ERC1967Utils)"
                              }
                            },
                            "id": 993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1168:16:7",
                            "memberName": "upgradeToAndCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1121,
                            "src": "1155:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes memory)"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1155:52:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "1155:52:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 984,
                    "nodeType": "StructuredDocumentation",
                    "src": "637:439:7",
                    "text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
                  },
                  "id": 999,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 989,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 986,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "1101:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 999,
                        "src": "1093:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1093:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "1130:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 999,
                        "src": "1117:18:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1117:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1092:44:7"
                  },
                  "returnParameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1145:0:7"
                  },
                  "scope": 1012,
                  "src": "1081:133:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1323
                  ],
                  "body": {
                    "id": 1010,
                    "nodeType": "Block",
                    "src": "1659:56:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 1006,
                              "name": "ERC1967Utils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1306,
                              "src": "1676:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1306_$",
                                "typeString": "type(library ERC1967Utils)"
                              }
                            },
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1689:17:7",
                            "memberName": "getImplementation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1058,
                            "src": "1676:30:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1676:32:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1005,
                        "id": 1009,
                        "nodeType": "Return",
                        "src": "1669:39:7"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1000,
                    "nodeType": "StructuredDocumentation",
                    "src": "1220:358:7",
                    "text": " @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
                  },
                  "id": 1011,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_implementation",
                  "nameLocation": "1592:15:7",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1002,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "1632:8:7"
                  },
                  "parameters": {
                    "id": 1001,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1607:2:7"
                  },
                  "returnParameters": {
                    "id": 1005,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1004,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1011,
                        "src": "1650:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1650:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1649:9:7"
                  },
                  "scope": 1012,
                  "src": "1583:132:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1013,
              "src": "600:1117:7",
              "usedErrors": [
                1032,
                1045,
                2165,
                2458
              ],
              "usedEvents": [
                824
              ]
            }
          ],
          "src": "114:1604:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
          "exportedSymbols": {
            "Address": [
              2415
            ],
            "ERC1967Utils": [
              1306
            ],
            "IBeacon": [
              1352
            ],
            "IERC1967": [
              837
            ],
            "StorageSlot": [
              2591
            ]
          },
          "id": 1307,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1014,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".22"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
              "file": "../beacon/IBeacon.sol",
              "id": 1016,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1307,
              "sourceUnit": 1353,
              "src": "140:46:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1015,
                    "name": "IBeacon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1352,
                    "src": "148:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
              "file": "../../interfaces/IERC1967.sol",
              "id": 1018,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1307,
              "sourceUnit": 838,
              "src": "187:55:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1017,
                    "name": "IERC1967",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 837,
                    "src": "195:8:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
              "file": "../../utils/Address.sol",
              "id": 1020,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1307,
              "sourceUnit": 2416,
              "src": "243:48:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1019,
                    "name": "Address",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2415,
                    "src": "251:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
              "file": "../../utils/StorageSlot.sol",
              "id": 1022,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1307,
              "sourceUnit": 2592,
              "src": "292:56:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1021,
                    "name": "StorageSlot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2591,
                    "src": "300:11:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ERC1967Utils",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 1023,
                "nodeType": "StructuredDocumentation",
                "src": "350:145:8",
                "text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
              },
              "fullyImplemented": true,
              "id": 1306,
              "linearizedBaseContracts": [
                1306
              ],
              "name": "ERC1967Utils",
              "nameLocation": "504:12:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 1024,
                    "nodeType": "StructuredDocumentation",
                    "src": "523:170:8",
                    "text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
                  },
                  "id": 1027,
                  "mutability": "constant",
                  "name": "IMPLEMENTATION_SLOT",
                  "nameLocation": "789:19:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1306,
                  "src": "763:114:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "763:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
                    "id": 1026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "811:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
                      "typeString": "int_const 2444...(69 digits omitted)...5612"
                    },
                    "value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
                  },
                  "visibility": "internal"
                },
                {
                  "documentation": {
                    "id": 1028,
                    "nodeType": "StructuredDocumentation",
                    "src": "884:69:8",
                    "text": " @dev The `implementation` of the proxy is invalid."
                  },
                  "errorSelector": "4c9c8ce3",
                  "id": 1032,
                  "name": "ERC1967InvalidImplementation",
                  "nameLocation": "964:28:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1030,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "1001:14:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1032,
                        "src": "993:22:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1029,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "993:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "992:24:8"
                  },
                  "src": "958:59:8"
                },
                {
                  "documentation": {
                    "id": 1033,
                    "nodeType": "StructuredDocumentation",
                    "src": "1023:60:8",
                    "text": " @dev The `admin` of the proxy is invalid."
                  },
                  "errorSelector": "62e77ba2",
                  "id": 1037,
                  "name": "ERC1967InvalidAdmin",
                  "nameLocation": "1094:19:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1036,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1035,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "1122:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1037,
                        "src": "1114:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1113:15:8"
                  },
                  "src": "1088:41:8"
                },
                {
                  "documentation": {
                    "id": 1038,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:61:8",
                    "text": " @dev The `beacon` of the proxy is invalid."
                  },
                  "errorSelector": "64ced0ec",
                  "id": 1042,
                  "name": "ERC1967InvalidBeacon",
                  "nameLocation": "1207:20:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1040,
                        "mutability": "mutable",
                        "name": "beacon",
                        "nameLocation": "1236:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "1228:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1228:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1227:16:8"
                  },
                  "src": "1201:43:8"
                },
                {
                  "documentation": {
                    "id": 1043,
                    "nodeType": "StructuredDocumentation",
                    "src": "1250:82:8",
                    "text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
                  },
                  "errorSelector": "b398979f",
                  "id": 1045,
                  "name": "ERC1967NonPayable",
                  "nameLocation": "1343:17:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1044,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1360:2:8"
                  },
                  "src": "1337:26:8"
                },
                {
                  "body": {
                    "id": 1057,
                    "nodeType": "Block",
                    "src": "1502:77:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1053,
                                "name": "IMPLEMENTATION_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1027,
                                "src": "1546:19:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 1051,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2591,
                                "src": "1519:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2591_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 1052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1531:14:8",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2502,
                              "src": "1519:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2473_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 1054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1519:47:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$2473_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1567:5:8",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2472,
                          "src": "1519:53:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1050,
                        "id": 1056,
                        "nodeType": "Return",
                        "src": "1512:60:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1046,
                    "nodeType": "StructuredDocumentation",
                    "src": "1369:67:8",
                    "text": " @dev Returns the current implementation address."
                  },
                  "id": 1058,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getImplementation",
                  "nameLocation": "1450:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1047,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1467:2:8"
                  },
                  "returnParameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1049,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1058,
                        "src": "1493:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1493:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1492:9:8"
                  },
                  "scope": 1306,
                  "src": "1441:138:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1084,
                    "nodeType": "Block",
                    "src": "1734:218:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1064,
                                "name": "newImplementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1061,
                                "src": "1748:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1766:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "1748:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1771:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1748:29:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1781:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1748:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1074,
                        "nodeType": "IfStatement",
                        "src": "1744:119:8",
                        "trueBody": {
                          "id": 1073,
                          "nodeType": "Block",
                          "src": "1784:79:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1070,
                                    "name": "newImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1061,
                                    "src": "1834:17:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1069,
                                  "name": "ERC1967InvalidImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1032,
                                  "src": "1805:28:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1071,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1805:47:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1072,
                              "nodeType": "RevertStatement",
                              "src": "1798:54:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1078,
                                  "name": "IMPLEMENTATION_SLOT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1027,
                                  "src": "1899:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1075,
                                  "name": "StorageSlot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2591,
                                  "src": "1872:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2591_$",
                                    "typeString": "type(library StorageSlot)"
                                  }
                                },
                                "id": 1077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1884:14:8",
                                "memberName": "getAddressSlot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2502,
                                "src": "1872:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2473_storage_ptr_$",
                                  "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                }
                              },
                              "id": 1079,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1872:47:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSlot_$2473_storage_ptr",
                                "typeString": "struct StorageSlot.AddressSlot storage pointer"
                              }
                            },
                            "id": 1080,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1920:5:8",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2472,
                            "src": "1872:53:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1081,
                            "name": "newImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1061,
                            "src": "1928:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1872:73:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1083,
                        "nodeType": "ExpressionStatement",
                        "src": "1872:73:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1059,
                    "nodeType": "StructuredDocumentation",
                    "src": "1585:81:8",
                    "text": " @dev Stores a new address in the ERC-1967 implementation slot."
                  },
                  "id": 1085,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setImplementation",
                  "nameLocation": "1680:18:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1062,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1061,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "1707:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1699:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1060,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1699:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1698:27:8"
                  },
                  "returnParameters": {
                    "id": 1063,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1734:0:8"
                  },
                  "scope": 1306,
                  "src": "1671:281:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1120,
                    "nodeType": "Block",
                    "src": "2345:263:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1094,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "2374:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1093,
                            "name": "_setImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1085,
                            "src": "2355:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2355:37:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1096,
                        "nodeType": "ExpressionStatement",
                        "src": "2355:37:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1100,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1088,
                              "src": "2425:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1097,
                              "name": "IERC1967",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "2407:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1967_$837_$",
                                "typeString": "type(contract IERC1967)"
                              }
                            },
                            "id": 1099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2416:8:8",
                            "memberName": "Upgraded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 824,
                            "src": "2407:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2407:36:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1102,
                        "nodeType": "EmitStatement",
                        "src": "2402:41:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1103,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1090,
                              "src": "2458:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2463:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2458:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1105,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2472:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2458:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1118,
                          "nodeType": "Block",
                          "src": "2559:43:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1115,
                                  "name": "_checkNonPayable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1305,
                                  "src": "2573:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 1116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2573:18:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1117,
                              "nodeType": "ExpressionStatement",
                              "src": "2573:18:8"
                            }
                          ]
                        },
                        "id": 1119,
                        "nodeType": "IfStatement",
                        "src": "2454:148:8",
                        "trueBody": {
                          "id": 1114,
                          "nodeType": "Block",
                          "src": "2475:78:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1110,
                                    "name": "newImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1088,
                                    "src": "2518:17:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1111,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1090,
                                    "src": "2537:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1107,
                                    "name": "Address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2415,
                                    "src": "2489:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Address_$2415_$",
                                      "typeString": "type(library Address)"
                                    }
                                  },
                                  "id": 1109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2497:20:8",
                                  "memberName": "functionDelegateCall",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2332,
                                  "src": "2489:28:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (address,bytes memory) returns (bytes memory)"
                                  }
                                },
                                "id": 1112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2489:53:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1113,
                              "nodeType": "ExpressionStatement",
                              "src": "2489:53:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1086,
                    "nodeType": "StructuredDocumentation",
                    "src": "1958:301:8",
                    "text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
                  },
                  "id": 1121,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "upgradeToAndCall",
                  "nameLocation": "2273:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "2298:17:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1121,
                        "src": "2290:25:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2290:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2330:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1121,
                        "src": "2317:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2317:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2289:46:8"
                  },
                  "returnParameters": {
                    "id": 1092,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2345:0:8"
                  },
                  "scope": 1306,
                  "src": "2264:344:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1122,
                    "nodeType": "StructuredDocumentation",
                    "src": "2614:145:8",
                    "text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
                  },
                  "id": 1125,
                  "mutability": "constant",
                  "name": "ADMIN_SLOT",
                  "nameLocation": "2855:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1306,
                  "src": "2829:105:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2829:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
                    "id": 1124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2868:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
                      "typeString": "int_const 8195...(69 digits omitted)...7091"
                    },
                    "value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1137,
                    "nodeType": "Block",
                    "src": "3339:68:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1133,
                                "name": "ADMIN_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "3383:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 1131,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2591,
                                "src": "3356:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2591_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 1132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3368:14:8",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2502,
                              "src": "3356:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2473_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 1134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3356:38:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$2473_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3395:5:8",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2472,
                          "src": "3356:44:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1130,
                        "id": 1136,
                        "nodeType": "Return",
                        "src": "3349:51:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1126,
                    "nodeType": "StructuredDocumentation",
                    "src": "2941:341:8",
                    "text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
                  },
                  "id": 1138,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAdmin",
                  "nameLocation": "3296:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1127,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3304:2:8"
                  },
                  "returnParameters": {
                    "id": 1130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1129,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1138,
                        "src": "3330:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3330:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3329:9:8"
                  },
                  "scope": 1306,
                  "src": "3287:120:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1168,
                    "nodeType": "Block",
                    "src": "3535:172:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1144,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "3549:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3569:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3561:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1145,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3561:7:8",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3561:10:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3549:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1158,
                        "nodeType": "IfStatement",
                        "src": "3545:91:8",
                        "trueBody": {
                          "id": 1157,
                          "nodeType": "Block",
                          "src": "3573:63:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3622:1:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1152,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3614:7:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1151,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3614:7:8",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3614:10:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1150,
                                  "name": "ERC1967InvalidAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1037,
                                  "src": "3594:19:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3594:31:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1156,
                              "nodeType": "RevertStatement",
                              "src": "3587:38:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1162,
                                  "name": "ADMIN_SLOT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1125,
                                  "src": "3672:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1159,
                                  "name": "StorageSlot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2591,
                                  "src": "3645:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2591_$",
                                    "typeString": "type(library StorageSlot)"
                                  }
                                },
                                "id": 1161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3657:14:8",
                                "memberName": "getAddressSlot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2502,
                                "src": "3645:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2473_storage_ptr_$",
                                  "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                }
                              },
                              "id": 1163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3645:38:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSlot_$2473_storage_ptr",
                                "typeString": "struct StorageSlot.AddressSlot storage pointer"
                              }
                            },
                            "id": 1164,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3684:5:8",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2472,
                            "src": "3645:44:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1165,
                            "name": "newAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "3692:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3645:55:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1167,
                        "nodeType": "ExpressionStatement",
                        "src": "3645:55:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1139,
                    "nodeType": "StructuredDocumentation",
                    "src": "3413:72:8",
                    "text": " @dev Stores a new address in the ERC-1967 admin slot."
                  },
                  "id": 1169,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setAdmin",
                  "nameLocation": "3499:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1141,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "3517:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1169,
                        "src": "3509:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1140,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3509:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3508:18:8"
                  },
                  "returnParameters": {
                    "id": 1143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3535:0:8"
                  },
                  "scope": 1306,
                  "src": "3490:217:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1187,
                    "nodeType": "Block",
                    "src": "3875:94:8",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1178,
                                "name": "getAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1138,
                                "src": "3912:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3912:10:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1180,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "3924:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1175,
                              "name": "IERC1967",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "3890:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1967_$837_$",
                                "typeString": "type(contract IERC1967)"
                              }
                            },
                            "id": 1177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3899:12:8",
                            "memberName": "AdminChanged",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 831,
                            "src": "3890:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3890:43:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1182,
                        "nodeType": "EmitStatement",
                        "src": "3885:48:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1184,
                              "name": "newAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "3953:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1183,
                            "name": "_setAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1169,
                            "src": "3943:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3943:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1186,
                        "nodeType": "ExpressionStatement",
                        "src": "3943:19:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1170,
                    "nodeType": "StructuredDocumentation",
                    "src": "3713:109:8",
                    "text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
                  },
                  "id": 1188,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeAdmin",
                  "nameLocation": "3836:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1172,
                        "mutability": "mutable",
                        "name": "newAdmin",
                        "nameLocation": "3856:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1188,
                        "src": "3848:16:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1171,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3848:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3847:18:8"
                  },
                  "returnParameters": {
                    "id": 1174,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3875:0:8"
                  },
                  "scope": 1306,
                  "src": "3827:142:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "documentation": {
                    "id": 1189,
                    "nodeType": "StructuredDocumentation",
                    "src": "3975:201:8",
                    "text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
                  },
                  "id": 1192,
                  "mutability": "constant",
                  "name": "BEACON_SLOT",
                  "nameLocation": "4272:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1306,
                  "src": "4246:106:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4246:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4286:66:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
                      "typeString": "int_const 7415...(69 digits omitted)...4704"
                    },
                    "value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1204,
                    "nodeType": "Block",
                    "src": "4468:69:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1200,
                                "name": "BEACON_SLOT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "4512:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 1198,
                                "name": "StorageSlot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2591,
                                "src": "4485:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2591_$",
                                  "typeString": "type(library StorageSlot)"
                                }
                              },
                              "id": 1199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4497:14:8",
                              "memberName": "getAddressSlot",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2502,
                              "src": "4485:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2473_storage_ptr_$",
                                "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                              }
                            },
                            "id": 1201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4485:39:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AddressSlot_$2473_storage_ptr",
                              "typeString": "struct StorageSlot.AddressSlot storage pointer"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4525:5:8",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2472,
                          "src": "4485:45:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1197,
                        "id": 1203,
                        "nodeType": "Return",
                        "src": "4478:52:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1193,
                    "nodeType": "StructuredDocumentation",
                    "src": "4359:51:8",
                    "text": " @dev Returns the current beacon."
                  },
                  "id": 1205,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBeacon",
                  "nameLocation": "4424:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4433:2:8"
                  },
                  "returnParameters": {
                    "id": 1197,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1196,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1205,
                        "src": "4459:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1195,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4459:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4458:9:8"
                  },
                  "scope": 1306,
                  "src": "4415:122:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1250,
                    "nodeType": "Block",
                    "src": "4667:390:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1211,
                                "name": "newBeacon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1208,
                                "src": "4681:9:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4691:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "4681:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4696:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4681:21:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4706:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4681:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1221,
                        "nodeType": "IfStatement",
                        "src": "4677:95:8",
                        "trueBody": {
                          "id": 1220,
                          "nodeType": "Block",
                          "src": "4709:63:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1217,
                                    "name": "newBeacon",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1208,
                                    "src": "4751:9:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1216,
                                  "name": "ERC1967InvalidBeacon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1042,
                                  "src": "4730:20:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4730:31:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1219,
                              "nodeType": "RevertStatement",
                              "src": "4723:38:8"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1225,
                                  "name": "BEACON_SLOT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1192,
                                  "src": "4809:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1222,
                                  "name": "StorageSlot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2591,
                                  "src": "4782:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StorageSlot_$2591_$",
                                    "typeString": "type(library StorageSlot)"
                                  }
                                },
                                "id": 1224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4794:14:8",
                                "memberName": "getAddressSlot",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2502,
                                "src": "4782:26:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2473_storage_ptr_$",
                                  "typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
                                }
                              },
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4782:39:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSlot_$2473_storage_ptr",
                                "typeString": "struct StorageSlot.AddressSlot storage pointer"
                              }
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4822:5:8",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2472,
                            "src": "4782:45:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1228,
                            "name": "newBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1208,
                            "src": "4830:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4782:57:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1230,
                        "nodeType": "ExpressionStatement",
                        "src": "4782:57:8"
                      },
                      {
                        "assignments": [
                          1232
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1232,
                            "mutability": "mutable",
                            "name": "beaconImplementation",
                            "nameLocation": "4858:20:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1250,
                            "src": "4850:28:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1231,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4850:7:8",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1238,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1234,
                                  "name": "newBeacon",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1208,
                                  "src": "4889:9:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1233,
                                "name": "IBeacon",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1352,
                                "src": "4881:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBeacon_$1352_$",
                                  "typeString": "type(contract IBeacon)"
                                }
                              },
                              "id": 1235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4881:18:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBeacon_$1352",
                                "typeString": "contract IBeacon"
                              }
                            },
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4900:14:8",
                            "memberName": "implementation",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1351,
                            "src": "4881:33:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 1237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4881:35:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4850:66:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 1239,
                                "name": "beaconImplementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1232,
                                "src": "4930:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4951:4:8",
                              "memberName": "code",
                              "nodeType": "MemberAccess",
                              "src": "4930:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4956:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4930:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4966:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4930:37:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1249,
                        "nodeType": "IfStatement",
                        "src": "4926:125:8",
                        "trueBody": {
                          "id": 1248,
                          "nodeType": "Block",
                          "src": "4969:82:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 1245,
                                    "name": "beaconImplementation",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1232,
                                    "src": "5019:20:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1244,
                                  "name": "ERC1967InvalidImplementation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1032,
                                  "src": "4990:28:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4990:50:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1247,
                              "nodeType": "RevertStatement",
                              "src": "4983:57:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1206,
                    "nodeType": "StructuredDocumentation",
                    "src": "4543:72:8",
                    "text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
                  },
                  "id": 1251,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setBeacon",
                  "nameLocation": "4629:10:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1208,
                        "mutability": "mutable",
                        "name": "newBeacon",
                        "nameLocation": "4648:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1251,
                        "src": "4640:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4640:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4639:19:8"
                  },
                  "returnParameters": {
                    "id": 1210,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4667:0:8"
                  },
                  "scope": 1306,
                  "src": "4620:437:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1290,
                    "nodeType": "Block",
                    "src": "5661:263:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1260,
                              "name": "newBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1254,
                              "src": "5682:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1259,
                            "name": "_setBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1251,
                            "src": "5671:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5671:21:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1262,
                        "nodeType": "ExpressionStatement",
                        "src": "5671:21:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1266,
                              "name": "newBeacon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1254,
                              "src": "5731:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1263,
                              "name": "IERC1967",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 837,
                              "src": "5707:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1967_$837_$",
                                "typeString": "type(contract IERC1967)"
                              }
                            },
                            "id": 1265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5716:14:8",
                            "memberName": "BeaconUpgraded",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 836,
                            "src": "5707:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5707:34:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1268,
                        "nodeType": "EmitStatement",
                        "src": "5702:39:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1269,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1256,
                              "src": "5756:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5761:6:8",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5756:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5770:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5756:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1288,
                          "nodeType": "Block",
                          "src": "5875:43:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1285,
                                  "name": "_checkNonPayable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1305,
                                  "src": "5889:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 1286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5889:18:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1287,
                              "nodeType": "ExpressionStatement",
                              "src": "5889:18:8"
                            }
                          ]
                        },
                        "id": 1289,
                        "nodeType": "IfStatement",
                        "src": "5752:166:8",
                        "trueBody": {
                          "id": 1284,
                          "nodeType": "Block",
                          "src": "5773:96:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 1277,
                                            "name": "newBeacon",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1254,
                                            "src": "5824:9:8",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1276,
                                          "name": "IBeacon",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1352,
                                          "src": "5816:7:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IBeacon_$1352_$",
                                            "typeString": "type(contract IBeacon)"
                                          }
                                        },
                                        "id": 1278,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "5816:18:8",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IBeacon_$1352",
                                          "typeString": "contract IBeacon"
                                        }
                                      },
                                      "id": 1279,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5835:14:8",
                                      "memberName": "implementation",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1351,
                                      "src": "5816:33:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                        "typeString": "function () view external returns (address)"
                                      }
                                    },
                                    "id": 1280,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5816:35:8",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1281,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1256,
                                    "src": "5853:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1273,
                                    "name": "Address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2415,
                                    "src": "5787:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Address_$2415_$",
                                      "typeString": "type(library Address)"
                                    }
                                  },
                                  "id": 1275,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5795:20:8",
                                  "memberName": "functionDelegateCall",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2332,
                                  "src": "5787:28:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function (address,bytes memory) returns (bytes memory)"
                                  }
                                },
                                "id": 1282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5787:71:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 1283,
                              "nodeType": "ExpressionStatement",
                              "src": "5787:71:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1252,
                    "nodeType": "StructuredDocumentation",
                    "src": "5063:514:8",
                    "text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
                  },
                  "id": 1291,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "upgradeBeaconToAndCall",
                  "nameLocation": "5591:22:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1254,
                        "mutability": "mutable",
                        "name": "newBeacon",
                        "nameLocation": "5622:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1291,
                        "src": "5614:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1253,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5614:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1256,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "5646:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1291,
                        "src": "5633:17:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5633:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5613:38:8"
                  },
                  "returnParameters": {
                    "id": 1258,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5661:0:8"
                  },
                  "scope": 1306,
                  "src": "5582:342:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1304,
                    "nodeType": "Block",
                    "src": "6149:86:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1295,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6163:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6167:5:8",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "6163:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6175:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6163:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1303,
                        "nodeType": "IfStatement",
                        "src": "6159:70:8",
                        "trueBody": {
                          "id": 1302,
                          "nodeType": "Block",
                          "src": "6178:51:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1299,
                                  "name": "ERC1967NonPayable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1045,
                                  "src": "6199:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6199:19:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1301,
                              "nodeType": "RevertStatement",
                              "src": "6192:26:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1292,
                    "nodeType": "StructuredDocumentation",
                    "src": "5930:178:8",
                    "text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
                  },
                  "id": 1305,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkNonPayable",
                  "nameLocation": "6122:16:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1293,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6138:2:8"
                  },
                  "returnParameters": {
                    "id": 1294,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6149:0:8"
                  },
                  "scope": 1306,
                  "src": "6113:122:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1307,
              "src": "496:5741:8",
              "usedErrors": [
                1032,
                1037,
                1042,
                1045
              ],
              "usedEvents": []
            }
          ],
          "src": "114:6124:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/proxy/Proxy.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/Proxy.sol",
          "exportedSymbols": {
            "Proxy": [
              1342
            ]
          },
          "id": 1343,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1308,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "99:24:9"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Proxy",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1309,
                "nodeType": "StructuredDocumentation",
                "src": "125:598:9",
                "text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
              },
              "fullyImplemented": false,
              "id": 1342,
              "linearizedBaseContracts": [
                1342
              ],
              "name": "Proxy",
              "nameLocation": "742:5:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1316,
                    "nodeType": "Block",
                    "src": "1009:835:9",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "1028:810:9",
                          "nodeType": "YulBlock",
                          "src": "1028:810:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1281:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "1281:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1284:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "1284:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nativeSrc": "1287:12:9",
                                      "nodeType": "YulIdentifier",
                                      "src": "1287:12:9"
                                    },
                                    "nativeSrc": "1287:14:9",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1287:14:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nativeSrc": "1268:12:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "1268:12:9"
                                },
                                "nativeSrc": "1268:34:9",
                                "nodeType": "YulFunctionCall",
                                "src": "1268:34:9"
                              },
                              "nativeSrc": "1268:34:9",
                              "nodeType": "YulExpressionStatement",
                              "src": "1268:34:9"
                            },
                            {
                              "nativeSrc": "1429:74:9",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1429:74:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "gas",
                                      "nativeSrc": "1456:3:9",
                                      "nodeType": "YulIdentifier",
                                      "src": "1456:3:9"
                                    },
                                    "nativeSrc": "1456:5:9",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1456:5:9"
                                  },
                                  {
                                    "name": "implementation",
                                    "nativeSrc": "1463:14:9",
                                    "nodeType": "YulIdentifier",
                                    "src": "1463:14:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1479:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "1479:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nativeSrc": "1482:12:9",
                                      "nodeType": "YulIdentifier",
                                      "src": "1482:12:9"
                                    },
                                    "nativeSrc": "1482:14:9",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1482:14:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1498:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "1498:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1501:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "1501:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "delegatecall",
                                  "nativeSrc": "1443:12:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "1443:12:9"
                                },
                                "nativeSrc": "1443:60:9",
                                "nodeType": "YulFunctionCall",
                                "src": "1443:60:9"
                              },
                              "variables": [
                                {
                                  "name": "result",
                                  "nativeSrc": "1433:6:9",
                                  "nodeType": "YulTypedName",
                                  "src": "1433:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1571:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "1571:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1574:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "1574:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nativeSrc": "1577:14:9",
                                      "nodeType": "YulIdentifier",
                                      "src": "1577:14:9"
                                    },
                                    "nativeSrc": "1577:16:9",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1577:16:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nativeSrc": "1556:14:9",
                                  "nodeType": "YulIdentifier",
                                  "src": "1556:14:9"
                                },
                                "nativeSrc": "1556:38:9",
                                "nodeType": "YulFunctionCall",
                                "src": "1556:38:9"
                              },
                              "nativeSrc": "1556:38:9",
                              "nodeType": "YulExpressionStatement",
                              "src": "1556:38:9"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "1689:59:9",
                                    "nodeType": "YulBlock",
                                    "src": "1689:59:9",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1714:1:9",
                                              "nodeType": "YulLiteral",
                                              "src": "1714:1:9",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nativeSrc": "1717:14:9",
                                                "nodeType": "YulIdentifier",
                                                "src": "1717:14:9"
                                              },
                                              "nativeSrc": "1717:16:9",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1717:16:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "revert",
                                            "nativeSrc": "1707:6:9",
                                            "nodeType": "YulIdentifier",
                                            "src": "1707:6:9"
                                          },
                                          "nativeSrc": "1707:27:9",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1707:27:9"
                                        },
                                        "nativeSrc": "1707:27:9",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1707:27:9"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "1682:66:9",
                                  "nodeType": "YulCase",
                                  "src": "1682:66:9",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "1687:1:9",
                                    "nodeType": "YulLiteral",
                                    "src": "1687:1:9",
                                    "type": "",
                                    "value": "0"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "1769:59:9",
                                    "nodeType": "YulBlock",
                                    "src": "1769:59:9",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1794:1:9",
                                              "nodeType": "YulLiteral",
                                              "src": "1794:1:9",
                                              "type": "",
                                              "value": "0"
                                            },
                                            {
                                              "arguments": [],
                                              "functionName": {
                                                "name": "returndatasize",
                                                "nativeSrc": "1797:14:9",
                                                "nodeType": "YulIdentifier",
                                                "src": "1797:14:9"
                                              },
                                              "nativeSrc": "1797:16:9",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1797:16:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "return",
                                            "nativeSrc": "1787:6:9",
                                            "nodeType": "YulIdentifier",
                                            "src": "1787:6:9"
                                          },
                                          "nativeSrc": "1787:27:9",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1787:27:9"
                                        },
                                        "nativeSrc": "1787:27:9",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "1787:27:9"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "1761:67:9",
                                  "nodeType": "YulCase",
                                  "src": "1761:67:9",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "name": "result",
                                "nativeSrc": "1615:6:9",
                                "nodeType": "YulIdentifier",
                                "src": "1615:6:9"
                              },
                              "nativeSrc": "1608:220:9",
                              "nodeType": "YulSwitch",
                              "src": "1608:220:9"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 1312,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1463:14:9",
                            "valueSize": 1
                          }
                        ],
                        "id": 1315,
                        "nodeType": "InlineAssembly",
                        "src": "1019:819:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1310,
                    "nodeType": "StructuredDocumentation",
                    "src": "754:190:9",
                    "text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."
                  },
                  "id": 1317,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_delegate",
                  "nameLocation": "958:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1313,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1312,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "976:14:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1317,
                        "src": "968:22:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1311,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "968:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "967:24:9"
                  },
                  "returnParameters": {
                    "id": 1314,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1009:0:9"
                  },
                  "scope": 1342,
                  "src": "949:895:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "documentation": {
                    "id": 1318,
                    "nodeType": "StructuredDocumentation",
                    "src": "1850:173:9",
                    "text": " @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."
                  },
                  "id": 1323,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_implementation",
                  "nameLocation": "2037:15:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1319,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2052:2:9"
                  },
                  "returnParameters": {
                    "id": 1322,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1321,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1323,
                        "src": "2086:7:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1320,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2086:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2085:9:9"
                  },
                  "scope": 1342,
                  "src": "2028:67:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1332,
                    "nodeType": "Block",
                    "src": "2361:45:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1328,
                                "name": "_implementation",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1323,
                                "src": "2381:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2381:17:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1327,
                            "name": "_delegate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1317,
                            "src": "2371:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2371:28:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1331,
                        "nodeType": "ExpressionStatement",
                        "src": "2371:28:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1324,
                    "nodeType": "StructuredDocumentation",
                    "src": "2101:217:9",
                    "text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."
                  },
                  "id": 1333,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_fallback",
                  "nameLocation": "2332:9:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1325,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2341:2:9"
                  },
                  "returnParameters": {
                    "id": 1326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2361:0:9"
                  },
                  "scope": 1342,
                  "src": "2323:83:9",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1340,
                    "nodeType": "Block",
                    "src": "2639:28:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1337,
                            "name": "_fallback",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1333,
                            "src": "2649:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2649:11:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1339,
                        "nodeType": "ExpressionStatement",
                        "src": "2649:11:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1334,
                    "nodeType": "StructuredDocumentation",
                    "src": "2412:186:9",
                    "text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
                  },
                  "id": 1341,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1335,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2611:2:9"
                  },
                  "returnParameters": {
                    "id": 1336,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2639:0:9"
                  },
                  "scope": 1342,
                  "src": "2603:64:9",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 1343,
              "src": "724:1945:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "99:2571:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
          "exportedSymbols": {
            "IBeacon": [
              1352
            ]
          },
          "id": 1353,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1344,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBeacon",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1345,
                "nodeType": "StructuredDocumentation",
                "src": "134:79:10",
                "text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
              },
              "fullyImplemented": false,
              "id": 1352,
              "linearizedBaseContracts": [
                1352
              ],
              "name": "IBeacon",
              "nameLocation": "224:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1346,
                    "nodeType": "StructuredDocumentation",
                    "src": "238:168:10",
                    "text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
                  },
                  "functionSelector": "5c60da1b",
                  "id": 1351,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "implementation",
                  "nameLocation": "420:14:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "434:2:10"
                  },
                  "returnParameters": {
                    "id": 1350,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1349,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1351,
                        "src": "460:7:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1348,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "460:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "459:9:10"
                  },
                  "scope": 1352,
                  "src": "411:58:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1353,
              "src": "214:257:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "108:364:10"
        },
        "id": 10
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
          "exportedSymbols": {
            "ITransparentUpgradeableProxy": [
              1422
            ],
            "Ownable": [
              816
            ],
            "ProxyAdmin": [
              1400
            ]
          },
          "id": 1401,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1354,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".22"
              ],
              "nodeType": "PragmaDirective",
              "src": "116:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
              "file": "./TransparentUpgradeableProxy.sol",
              "id": 1356,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1401,
              "sourceUnit": 1537,
              "src": "142:79:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1355,
                    "name": "ITransparentUpgradeableProxy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1422,
                    "src": "150:28:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "../../access/Ownable.sol",
              "id": 1358,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1401,
              "sourceUnit": 817,
              "src": "222:49:11",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1357,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 816,
                    "src": "230:7:11",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1360,
                    "name": "Ownable",
                    "nameLocations": [
                      "525:7:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 816,
                    "src": "525:7:11"
                  },
                  "id": 1361,
                  "nodeType": "InheritanceSpecifier",
                  "src": "525:7:11"
                }
              ],
              "canonicalName": "ProxyAdmin",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1359,
                "nodeType": "StructuredDocumentation",
                "src": "273:228:11",
                "text": " @dev This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an\n explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}."
              },
              "fullyImplemented": true,
              "id": 1400,
              "linearizedBaseContracts": [
                1400,
                816,
                2445
              ],
              "name": "ProxyAdmin",
              "nameLocation": "511:10:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "documentation": {
                    "id": 1362,
                    "nodeType": "StructuredDocumentation",
                    "src": "539:643:11",
                    "text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)`\n and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called,\n while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
                  },
                  "functionSelector": "ad3cb1cc",
                  "id": 1365,
                  "mutability": "constant",
                  "name": "UPGRADE_INTERFACE_VERSION",
                  "nameLocation": "1210:25:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1400,
                  "src": "1187:58:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1187:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "352e302e30",
                    "id": 1364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1238:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
                      "typeString": "literal_string \"5.0.0\""
                    },
                    "value": "5.0.0"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1374,
                    "nodeType": "Block",
                    "src": "1385:2:11",
                    "statements": []
                  },
                  "documentation": {
                    "id": 1366,
                    "nodeType": "StructuredDocumentation",
                    "src": "1252:72:11",
                    "text": " @dev Sets the initial owner who can perform upgrades."
                  },
                  "id": 1375,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1371,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1368,
                          "src": "1371:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1372,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1370,
                        "name": "Ownable",
                        "nameLocations": [
                          "1363:7:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 816,
                        "src": "1363:7:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1363:21:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1368,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1349:12:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "1341:20:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1367,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1341:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1340:22:11"
                  },
                  "returnParameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1385:0:11"
                  },
                  "scope": 1400,
                  "src": "1329:58:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1398,
                    "nodeType": "Block",
                    "src": "1883:79:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1394,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1381,
                              "src": "1934:14:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1395,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "1950:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 1388,
                                "name": "proxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1379,
                                "src": "1893:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$1422",
                                  "typeString": "contract ITransparentUpgradeableProxy"
                                }
                              },
                              "id": 1390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1899:16:11",
                              "memberName": "upgradeToAndCall",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1421,
                              "src": "1893:22:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,bytes memory) payable external"
                              }
                            },
                            "id": 1393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 1391,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1923:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1927:5:11",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "1923:9:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1893:40:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$returns$__$value",
                              "typeString": "function (address,bytes memory) payable external"
                            }
                          },
                          "id": 1396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1893:62:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1397,
                        "nodeType": "ExpressionStatement",
                        "src": "1893:62:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1376,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:319:11",
                    "text": " @dev Upgrades `proxy` to `implementation` and calls a function on the new implementation.\n See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}.\n Requirements:\n - This contract must be the admin of `proxy`.\n - If `data` is empty, `msg.value` must be zero."
                  },
                  "functionSelector": "9623609d",
                  "id": 1399,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1386,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1385,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1873:9:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 727,
                        "src": "1873:9:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1873:9:11"
                    }
                  ],
                  "name": "upgradeAndCall",
                  "nameLocation": "1726:14:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1384,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1379,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "1779:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1399,
                        "src": "1750:34:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$1422",
                          "typeString": "contract ITransparentUpgradeableProxy"
                        },
                        "typeName": {
                          "id": 1378,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1377,
                            "name": "ITransparentUpgradeableProxy",
                            "nameLocations": [
                              "1750:28:11"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1422,
                            "src": "1750:28:11"
                          },
                          "referencedDeclaration": 1422,
                          "src": "1750:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$1422",
                            "typeString": "contract ITransparentUpgradeableProxy"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1381,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "1802:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1399,
                        "src": "1794:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1380,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1794:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1383,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1839:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1399,
                        "src": "1826:17:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1382,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1826:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1740:109:11"
                  },
                  "returnParameters": {
                    "id": 1387,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1883:0:11"
                  },
                  "scope": 1400,
                  "src": "1717:245:11",
                  "stateMutability": "payable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1401,
              "src": "502:1462:11",
              "usedErrors": [
                682,
                687
              ],
              "usedEvents": [
                693
              ]
            }
          ],
          "src": "116:1849:11"
        },
        "id": 11
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
          "exportedSymbols": {
            "ERC1967Proxy": [
              1012
            ],
            "ERC1967Utils": [
              1306
            ],
            "IERC1967": [
              837
            ],
            "ITransparentUpgradeableProxy": [
              1422
            ],
            "ProxyAdmin": [
              1400
            ],
            "TransparentUpgradeableProxy": [
              1536
            ]
          },
          "id": 1537,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1402,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".22"
              ],
              "nodeType": "PragmaDirective",
              "src": "133:24:12"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
              "file": "../ERC1967/ERC1967Utils.sol",
              "id": 1404,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1537,
              "sourceUnit": 1307,
              "src": "159:57:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1403,
                    "name": "ERC1967Utils",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1306,
                    "src": "167:12:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
              "file": "../ERC1967/ERC1967Proxy.sol",
              "id": 1406,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1537,
              "sourceUnit": 1013,
              "src": "217:57:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1405,
                    "name": "ERC1967Proxy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1012,
                    "src": "225:12:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
              "file": "../../interfaces/IERC1967.sol",
              "id": 1408,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1537,
              "sourceUnit": 838,
              "src": "275:55:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1407,
                    "name": "IERC1967",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 837,
                    "src": "283:8:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
              "file": "./ProxyAdmin.sol",
              "id": 1410,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1537,
              "sourceUnit": 1401,
              "src": "331:44:12",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1409,
                    "name": "ProxyAdmin",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1400,
                    "src": "339:10:12",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1412,
                    "name": "IERC1967",
                    "nameLocations": [
                      "865:8:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 837,
                    "src": "865:8:12"
                  },
                  "id": 1413,
                  "nodeType": "InheritanceSpecifier",
                  "src": "865:8:12"
                }
              ],
              "canonicalName": "ITransparentUpgradeableProxy",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1411,
                "nodeType": "StructuredDocumentation",
                "src": "377:445:12",
                "text": " @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch\n mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n include them in the ABI so this interface must be used to interact with it."
              },
              "fullyImplemented": false,
              "id": 1422,
              "linearizedBaseContracts": [
                1422,
                837
              ],
              "name": "ITransparentUpgradeableProxy",
              "nameLocation": "833:28:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1414,
                    "nodeType": "StructuredDocumentation",
                    "src": "880:47:12",
                    "text": "@dev See {UUPSUpgradeable-upgradeToAndCall}"
                  },
                  "functionSelector": "4f1ef286",
                  "id": 1421,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "upgradeToAndCall",
                  "nameLocation": "941:16:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1416,
                        "mutability": "mutable",
                        "name": "newImplementation",
                        "nameLocation": "966:17:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1421,
                        "src": "958:25:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1415,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "958:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1418,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "1000:4:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1421,
                        "src": "985:19:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1417,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "985:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "957:48:12"
                  },
                  "returnParameters": {
                    "id": 1420,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1022:0:12"
                  },
                  "scope": 1422,
                  "src": "932:91:12",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1537,
              "src": "823:202:12",
              "usedErrors": [],
              "usedEvents": [
                824,
                831,
                836
              ]
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1424,
                    "name": "ERC1967Proxy",
                    "nameLocations": [
                      "4354:12:12"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1012,
                    "src": "4354:12:12"
                  },
                  "id": 1425,
                  "nodeType": "InheritanceSpecifier",
                  "src": "4354:12:12"
                }
              ],
              "canonicalName": "TransparentUpgradeableProxy",
              "contractDependencies": [
                1400
              ],
              "contractKind": "contract",
              "documentation": {
                "id": 1423,
                "nodeType": "StructuredDocumentation",
                "src": "1027:3286:12",
                "text": " @dev This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself.\n 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to\n the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating\n the proxy admin cannot fallback to the target implementation.\n These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a\n dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to\n call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and\n allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative\n interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership.\n NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch\n mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n implementation.\n NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a\n meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract.\n IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an\n immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be\n overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an\n undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot\n is generally fine if the implementation is trusted.\n WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the\n compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new\n function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This\n could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency."
              },
              "fullyImplemented": true,
              "id": 1536,
              "linearizedBaseContracts": [
                1536,
                1012,
                1342
              ],
              "name": "TransparentUpgradeableProxy",
              "nameLocation": "4323:27:12",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1427,
                  "mutability": "immutable",
                  "name": "_admin",
                  "nameLocation": "4734:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1536,
                  "src": "4708:32:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4708:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 1428,
                    "nodeType": "StructuredDocumentation",
                    "src": "4747:102:12",
                    "text": " @dev The proxy caller is the current admin, and can't fallback to the proxy target."
                  },
                  "errorSelector": "d2b576ec",
                  "id": 1430,
                  "name": "ProxyDeniedAdminAccess",
                  "nameLocation": "4860:22:12",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1429,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4882:2:12"
                  },
                  "src": "4854:31:12"
                },
                {
                  "body": {
                    "id": 1462,
                    "nodeType": "Block",
                    "src": "5263:190:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1444,
                            "name": "_admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "5273:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1450,
                                    "name": "initialOwner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1435,
                                    "src": "5305:12:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1449,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "5290:14:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ProxyAdmin_$1400_$",
                                    "typeString": "function (address) returns (contract ProxyAdmin)"
                                  },
                                  "typeName": {
                                    "id": 1448,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1447,
                                      "name": "ProxyAdmin",
                                      "nameLocations": [
                                        "5294:10:12"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 1400,
                                      "src": "5294:10:12"
                                    },
                                    "referencedDeclaration": 1400,
                                    "src": "5294:10:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ProxyAdmin_$1400",
                                      "typeString": "contract ProxyAdmin"
                                    }
                                  }
                                },
                                "id": 1451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5290:28:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ProxyAdmin_$1400",
                                  "typeString": "contract ProxyAdmin"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ProxyAdmin_$1400",
                                  "typeString": "contract ProxyAdmin"
                                }
                              ],
                              "id": 1446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5282:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1445,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5282:7:12",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5282:37:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5273:46:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1454,
                        "nodeType": "ExpressionStatement",
                        "src": "5273:46:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1458,
                                "name": "_proxyAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1472,
                                "src": "5432:11:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5432:13:12",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1455,
                              "name": "ERC1967Utils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1306,
                              "src": "5407:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1306_$",
                                "typeString": "type(library ERC1967Utils)"
                              }
                            },
                            "id": 1457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5420:11:12",
                            "memberName": "changeAdmin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1188,
                            "src": "5407:24:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5407:39:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1461,
                        "nodeType": "ExpressionStatement",
                        "src": "5407:39:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1431,
                    "nodeType": "StructuredDocumentation",
                    "src": "4891:261:12",
                    "text": " @dev Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`,\n backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in\n {ERC1967Proxy-constructor}."
                  },
                  "id": 1463,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1440,
                          "name": "_logic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1433,
                          "src": "5248:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1441,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1437,
                          "src": "5256:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 1442,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1439,
                        "name": "ERC1967Proxy",
                        "nameLocations": [
                          "5235:12:12"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1012,
                        "src": "5235:12:12"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5235:27:12"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1433,
                        "mutability": "mutable",
                        "name": "_logic",
                        "nameLocation": "5177:6:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "5169:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1432,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5169:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1435,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "5193:12:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "5185:20:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5185:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1437,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "5220:5:12",
                        "nodeType": "VariableDeclaration",
                        "scope": 1463,
                        "src": "5207:18:12",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1436,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5207:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5168:58:12"
                  },
                  "returnParameters": {
                    "id": 1443,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5263:0:12"
                  },
                  "scope": 1536,
                  "src": "5157:296:12",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1471,
                    "nodeType": "Block",
                    "src": "5583:30:12",
                    "statements": [
                      {
                        "expression": {
                          "id": 1469,
                          "name": "_admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1427,
                          "src": "5600:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1468,
                        "id": 1470,
                        "nodeType": "Return",
                        "src": "5593:13:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1464,
                    "nodeType": "StructuredDocumentation",
                    "src": "5459:56:12",
                    "text": " @dev Returns the admin of this proxy."
                  },
                  "id": 1472,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_proxyAdmin",
                  "nameLocation": "5529:11:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5540:2:12"
                  },
                  "returnParameters": {
                    "id": 1468,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1467,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1472,
                        "src": "5574:7:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1466,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5574:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5573:9:12"
                  },
                  "scope": 1536,
                  "src": "5520:93:12",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1333
                  ],
                  "body": {
                    "id": 1505,
                    "nodeType": "Block",
                    "src": "5802:322:12",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1477,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5816:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5820:6:12",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5816:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1479,
                              "name": "_proxyAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1472,
                              "src": "5830:11:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5830:13:12",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5816:27:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1503,
                          "nodeType": "Block",
                          "src": "6076:42:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 1498,
                                    "name": "super",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -25,
                                    "src": "6090:5:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$1536_$",
                                      "typeString": "type(contract super TransparentUpgradeableProxy)"
                                    }
                                  },
                                  "id": 1500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6096:9:12",
                                  "memberName": "_fallback",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1333,
                                  "src": "6090:15:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                    "typeString": "function ()"
                                  }
                                },
                                "id": 1501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6090:17:12",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1502,
                              "nodeType": "ExpressionStatement",
                              "src": "6090:17:12"
                            }
                          ]
                        },
                        "id": 1504,
                        "nodeType": "IfStatement",
                        "src": "5812:306:12",
                        "trueBody": {
                          "id": 1497,
                          "nodeType": "Block",
                          "src": "5845:225:12",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                },
                                "id": 1487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1482,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5863:3:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1483,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5867:3:12",
                                  "memberName": "sig",
                                  "nodeType": "MemberAccess",
                                  "src": "5863:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 1484,
                                      "name": "ITransparentUpgradeableProxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1422,
                                      "src": "5874:28:12",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$1422_$",
                                        "typeString": "type(contract ITransparentUpgradeableProxy)"
                                      }
                                    },
                                    "id": 1485,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "5903:16:12",
                                    "memberName": "upgradeToAndCall",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1421,
                                    "src": "5874:45:12",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_declaration_payable$_t_address_$_t_bytes_calldata_ptr_$returns$__$",
                                      "typeString": "function ITransparentUpgradeableProxy.upgradeToAndCall(address,bytes calldata) payable"
                                    }
                                  },
                                  "id": 1486,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "5920:8:12",
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "src": "5874:54:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                "src": "5863:65:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1495,
                                "nodeType": "Block",
                                "src": "6000:60:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1492,
                                        "name": "_dispatchUpgradeToAndCall",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1535,
                                        "src": "6018:25:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                          "typeString": "function ()"
                                        }
                                      },
                                      "id": 1493,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6018:27:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1494,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6018:27:12"
                                  }
                                ]
                              },
                              "id": 1496,
                              "nodeType": "IfStatement",
                              "src": "5859:201:12",
                              "trueBody": {
                                "id": 1491,
                                "nodeType": "Block",
                                "src": "5930:64:12",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 1488,
                                        "name": "ProxyDeniedAdminAccess",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1430,
                                        "src": "5955:22:12",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                          "typeString": "function () pure returns (error)"
                                        }
                                      },
                                      "id": 1489,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5955:24:12",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1490,
                                    "nodeType": "RevertStatement",
                                    "src": "5948:31:12"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1473,
                    "nodeType": "StructuredDocumentation",
                    "src": "5619:131:12",
                    "text": " @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior."
                  },
                  "id": 1506,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_fallback",
                  "nameLocation": "5764:9:12",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1475,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5793:8:12"
                  },
                  "parameters": {
                    "id": 1474,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5773:2:12"
                  },
                  "returnParameters": {
                    "id": 1476,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5802:0:12"
                  },
                  "scope": 1536,
                  "src": "5755:369:12",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1534,
                    "nodeType": "Block",
                    "src": "6371:172:12",
                    "statements": [
                      {
                        "assignments": [
                          1511,
                          1513
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1511,
                            "mutability": "mutable",
                            "name": "newImplementation",
                            "nameLocation": "6390:17:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1534,
                            "src": "6382:25:12",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1510,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6382:7:12",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1513,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "6422:4:12",
                            "nodeType": "VariableDeclaration",
                            "scope": 1534,
                            "src": "6409:17:12",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1512,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "6409:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1526,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 1516,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6441:3:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6445:4:12",
                                "memberName": "data",
                                "nodeType": "MemberAccess",
                                "src": "6441:8:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              },
                              "id": 1519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexRangeAccess",
                              "src": "6441:12:12",
                              "startExpression": {
                                "hexValue": "34",
                                "id": 1518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6450:1:12",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                "typeString": "bytes calldata slice"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6456:7:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1520,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6456:7:12",
                                    "typeDescriptions": {}
                                  }
                                },
                                {
                                  "id": 1523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6465:5:12",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 1522,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6465:5:12",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 1524,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "6455:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                                "typeString": "tuple(type(address),type(bytes storage pointer))"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr_slice",
                                "typeString": "bytes calldata slice"
                              },
                              {
                                "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_bytes_storage_ptr_$_$",
                                "typeString": "tuple(type(address),type(bytes storage pointer))"
                              }
                            ],
                            "expression": {
                              "id": 1514,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6430:3:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6434:6:12",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "6430:10:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6430:42:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_payable_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(address payable,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6381:91:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1530,
                              "name": "newImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1511,
                              "src": "6512:17:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1531,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1513,
                              "src": "6531:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1527,
                              "name": "ERC1967Utils",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1306,
                              "src": "6482:12:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1306_$",
                                "typeString": "type(library ERC1967Utils)"
                              }
                            },
                            "id": 1529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6495:16:12",
                            "memberName": "upgradeToAndCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1121,
                            "src": "6482:29:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,bytes memory)"
                            }
                          },
                          "id": 1532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6482:54:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1533,
                        "nodeType": "ExpressionStatement",
                        "src": "6482:54:12"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1507,
                    "nodeType": "StructuredDocumentation",
                    "src": "6130:191:12",
                    "text": " @dev Upgrade the implementation of the proxy. See {ERC1967Utils-upgradeToAndCall}.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."
                  },
                  "id": 1535,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_dispatchUpgradeToAndCall",
                  "nameLocation": "6335:25:12",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6360:2:12"
                  },
                  "returnParameters": {
                    "id": 1509,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6371:0:12"
                  },
                  "scope": 1536,
                  "src": "6326:217:12",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 1537,
              "src": "4314:2231:12",
              "usedErrors": [
                1032,
                1037,
                1045,
                1430,
                2165,
                2458
              ],
              "usedEvents": [
                824,
                831
              ]
            }
          ],
          "src": "133:6413:12"
        },
        "id": 12
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              2445
            ],
            "ERC20": [
              2051
            ],
            "IERC20": [
              2129
            ],
            "IERC20Errors": [
              879
            ],
            "IERC20Metadata": [
              2155
            ]
          },
          "id": 2052,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1538,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:13"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 1540,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2052,
              "sourceUnit": 2130,
              "src": "131:36:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1539,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2129,
                    "src": "139:6:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 1542,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2052,
              "sourceUnit": 2156,
              "src": "168:63:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1541,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2155,
                    "src": "176:14:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 1544,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2052,
              "sourceUnit": 2446,
              "src": "232:48:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1543,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2445,
                    "src": "240:7:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 1546,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2052,
              "sourceUnit": 975,
              "src": "281:65:13",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1545,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 879,
                    "src": "289:12:13",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1548,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2445,
                    "src": "1133:7:13"
                  },
                  "id": 1549,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:13"
                },
                {
                  "baseName": {
                    "id": 1550,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2129,
                    "src": "1142:6:13"
                  },
                  "id": 1551,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:13"
                },
                {
                  "baseName": {
                    "id": 1552,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2155,
                    "src": "1150:14:13"
                  },
                  "id": 1553,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:13"
                },
                {
                  "baseName": {
                    "id": 1554,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:13"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 879,
                    "src": "1166:12:13"
                  },
                  "id": 1555,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:13"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1547,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:13",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 2051,
              "linearizedBaseContracts": [
                2051,
                879,
                2155,
                2129,
                2445
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:13",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1559,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "1185:53:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1558,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:13",
                    "keyType": {
                      "id": 1556,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1557,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "1245:83:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 1564,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:13",
                    "keyType": {
                      "id": 1560,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1563,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:13",
                      "keyType": {
                        "id": 1561,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 1562,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "1335:28:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "1370:20:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 2051,
                  "src": "1396:22:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1587,
                    "nodeType": "Block",
                    "src": "1638:57:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1579,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1569,
                            "src": "1648:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1580,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1574,
                            "src": "1656:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1582,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:13"
                      },
                      {
                        "expression": {
                          "id": 1585,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1583,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1571,
                            "src": "1671:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1584,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1576,
                            "src": "1681:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1586,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1572,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:13",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 1588,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1577,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1574,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1588,
                        "src": "1594:19:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1573,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1576,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1588,
                        "src": "1615:21:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1575,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:13"
                  },
                  "returnParameters": {
                    "id": 1578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:13"
                  },
                  "scope": 2051,
                  "src": "1582:113:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    2142
                  ],
                  "body": {
                    "id": 1596,
                    "nodeType": "Block",
                    "src": "1820:29:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1594,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1569,
                          "src": "1837:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1593,
                        "id": 1595,
                        "nodeType": "Return",
                        "src": "1830:12:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1589,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:13",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1597,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1590,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:13"
                  },
                  "returnParameters": {
                    "id": 1593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1592,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1597,
                        "src": "1805:13:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:13"
                  },
                  "scope": 2051,
                  "src": "1760:89:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2148
                  ],
                  "body": {
                    "id": 1605,
                    "nodeType": "Block",
                    "src": "2024:31:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1603,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1571,
                          "src": "2041:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1602,
                        "id": 1604,
                        "nodeType": "Return",
                        "src": "2034:14:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1598,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:13",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1599,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:13"
                  },
                  "returnParameters": {
                    "id": 1602,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1601,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1606,
                        "src": "2009:13:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1600,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:13"
                  },
                  "scope": 2051,
                  "src": "1962:93:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2154
                  ],
                  "body": {
                    "id": 1614,
                    "nodeType": "Block",
                    "src": "2744:26:13",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 1611,
                        "id": 1613,
                        "nodeType": "Return",
                        "src": "2754:9:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1607,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:13",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 1615,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1608,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:13"
                  },
                  "returnParameters": {
                    "id": 1611,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1610,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1615,
                        "src": "2737:5:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1609,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:13"
                  },
                  "scope": 2051,
                  "src": "2688:82:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2078
                  ],
                  "body": {
                    "id": 1623,
                    "nodeType": "Block",
                    "src": "2891:36:13",
                    "statements": [
                      {
                        "expression": {
                          "id": 1621,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1567,
                          "src": "2908:12:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1620,
                        "id": 1622,
                        "nodeType": "Return",
                        "src": "2901:19:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1616,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:13",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1624,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1617,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:13"
                  },
                  "returnParameters": {
                    "id": 1620,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1619,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1624,
                        "src": "2882:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1618,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:13"
                  },
                  "scope": 2051,
                  "src": "2830:97:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2086
                  ],
                  "body": {
                    "id": 1636,
                    "nodeType": "Block",
                    "src": "3059:42:13",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1632,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1559,
                            "src": "3076:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1634,
                          "indexExpression": {
                            "id": 1633,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1627,
                            "src": "3086:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1631,
                        "id": 1635,
                        "nodeType": "Return",
                        "src": "3069:25:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1625,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:13",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 1637,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1627,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1637,
                        "src": "3004:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:13"
                  },
                  "returnParameters": {
                    "id": 1631,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1630,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1637,
                        "src": "3050:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1629,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:13"
                  },
                  "scope": 2051,
                  "src": "2985:116:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2096
                  ],
                  "body": {
                    "id": 1660,
                    "nodeType": "Block",
                    "src": "3371:103:13",
                    "statements": [
                      {
                        "assignments": [
                          1648
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1648,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1660,
                            "src": "3381:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1647,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1651,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1649,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2427,
                            "src": "3397:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1653,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1648,
                              "src": "3429:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1654,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1640,
                              "src": "3436:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1655,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1642,
                              "src": "3440:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1652,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1781,
                            "src": "3419:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1657,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:13"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1646,
                        "id": 1659,
                        "nodeType": "Return",
                        "src": "3456:11:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1638,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:13",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1661,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1643,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1640,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1661,
                        "src": "3314:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1639,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1642,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1661,
                        "src": "3326:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1641,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:13"
                  },
                  "returnParameters": {
                    "id": 1646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1645,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1661,
                        "src": "3365:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1644,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:13"
                  },
                  "scope": 2051,
                  "src": "3296:178:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2106
                  ],
                  "body": {
                    "id": 1677,
                    "nodeType": "Block",
                    "src": "3621:51:13",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1671,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1565,
                              "src": "3638:11:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1673,
                            "indexExpression": {
                              "id": 1672,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1664,
                              "src": "3650:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1675,
                          "indexExpression": {
                            "id": 1674,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1666,
                            "src": "3657:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1670,
                        "id": 1676,
                        "nodeType": "Return",
                        "src": "3631:34:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1662,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:13",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1678,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1667,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1664,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "3551:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1663,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1666,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "3566:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1665,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:13"
                  },
                  "returnParameters": {
                    "id": 1670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1669,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "3612:7:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1668,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:13"
                  },
                  "scope": 2051,
                  "src": "3532:140:13",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2116
                  ],
                  "body": {
                    "id": 1701,
                    "nodeType": "Block",
                    "src": "4058:107:13",
                    "statements": [
                      {
                        "assignments": [
                          1689
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1689,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1701,
                            "src": "4068:13:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1688,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1692,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1690,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2427,
                            "src": "4084:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1694,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1689,
                              "src": "4115:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1695,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1681,
                              "src": "4122:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1696,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1683,
                              "src": "4131:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1693,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1942,
                              2002
                            ],
                            "referencedDeclaration": 1942,
                            "src": "4106:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1698,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:13"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1687,
                        "id": 1700,
                        "nodeType": "Return",
                        "src": "4147:11:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1679,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:13",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1702,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1681,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1702,
                        "src": "3996:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1683,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1702,
                        "src": "4013:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1682,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:13"
                  },
                  "returnParameters": {
                    "id": 1687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1686,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1702,
                        "src": "4052:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1685,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:13"
                  },
                  "scope": 2051,
                  "src": "3979:186:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    2128
                  ],
                  "body": {
                    "id": 1733,
                    "nodeType": "Block",
                    "src": "4850:151:13",
                    "statements": [
                      {
                        "assignments": [
                          1715
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1715,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 1733,
                            "src": "4860:15:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1714,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:13",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1718,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1716,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2427,
                            "src": "4878:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1720,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1705,
                              "src": "4916:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1721,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1715,
                              "src": "4922:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1722,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "4931:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1719,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2050,
                            "src": "4900:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1724,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1726,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1705,
                              "src": "4957:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1727,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1707,
                              "src": "4963:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1728,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1709,
                              "src": "4967:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1725,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1781,
                            "src": "4947:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1730,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:13"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1713,
                        "id": 1732,
                        "nodeType": "Return",
                        "src": "4983:11:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1703,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:13",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1734,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1710,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1705,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1734,
                        "src": "4779:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1704,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1707,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1734,
                        "src": "4793:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1706,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1709,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1734,
                        "src": "4805:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1708,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:13"
                  },
                  "returnParameters": {
                    "id": 1713,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1712,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1734,
                        "src": "4844:4:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1711,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:13"
                  },
                  "scope": 2051,
                  "src": "4757:244:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1780,
                    "nodeType": "Block",
                    "src": "5443:231:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1744,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1737,
                            "src": "5457:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1745,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1758,
                        "nodeType": "IfStatement",
                        "src": "5453:86:13",
                        "trueBody": {
                          "id": 1757,
                          "nodeType": "Block",
                          "src": "5477:62:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1753,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1752,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1751,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1754,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1750,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 854,
                                  "src": "5498:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1756,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1759,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1739,
                            "src": "5552:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1760,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1773,
                        "nodeType": "IfStatement",
                        "src": "5548:86:13",
                        "trueBody": {
                          "id": 1772,
                          "nodeType": "Block",
                          "src": "5570:64:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1768,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1767,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1766,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1769,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1765,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 859,
                                  "src": "5591:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1771,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1775,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1737,
                              "src": "5651:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1776,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1739,
                              "src": "5657:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1777,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1741,
                              "src": "5661:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1774,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1858,
                            "src": "5643:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1779,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1735,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:13",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 1781,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1742,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1737,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1781,
                        "src": "5393:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1736,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1739,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1781,
                        "src": "5407:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1738,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1741,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1781,
                        "src": "5419:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1740,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:13"
                  },
                  "returnParameters": {
                    "id": 1743,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:13"
                  },
                  "scope": 2051,
                  "src": "5374:300:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1857,
                    "nodeType": "Block",
                    "src": "6064:1032:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1791,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1784,
                            "src": "6078:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1792,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1828,
                          "nodeType": "Block",
                          "src": "6252:362:13",
                          "statements": [
                            {
                              "assignments": [
                                1803
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1803,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:13",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1828,
                                  "src": "6266:19:13",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1802,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1807,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1804,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1559,
                                  "src": "6288:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1806,
                                "indexExpression": {
                                  "id": 1805,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1784,
                                  "src": "6298:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:13"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1808,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1803,
                                  "src": "6321:11:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1809,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1788,
                                  "src": "6335:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1818,
                              "nodeType": "IfStatement",
                              "src": "6317:115:13",
                              "trueBody": {
                                "id": 1817,
                                "nodeType": "Block",
                                "src": "6342:90:13",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1812,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1784,
                                          "src": "6392:4:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1813,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1803,
                                          "src": "6398:11:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1814,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1788,
                                          "src": "6411:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1811,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 849,
                                        "src": "6367:24:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1815,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1816,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:13"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1827,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:13",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1819,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1559,
                                        "src": "6552:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1821,
                                      "indexExpression": {
                                        "id": 1820,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1784,
                                        "src": "6562:4:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1824,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1822,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1803,
                                        "src": "6570:11:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1823,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1788,
                                        "src": "6584:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1826,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:13"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 1829,
                        "nodeType": "IfStatement",
                        "src": "6074:540:13",
                        "trueBody": {
                          "id": 1801,
                          "nodeType": "Block",
                          "src": "6098:148:13",
                          "statements": [
                            {
                              "expression": {
                                "id": 1799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1797,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1567,
                                  "src": "6214:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 1798,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1788,
                                  "src": "6230:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1800,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1830,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1786,
                            "src": "6628:2:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1831,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1849,
                          "nodeType": "Block",
                          "src": "6843:206:13",
                          "statements": [
                            {
                              "id": 1848,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:13",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1846,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 1842,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1559,
                                        "src": "7002:9:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1844,
                                      "indexExpression": {
                                        "id": 1843,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1786,
                                        "src": "7012:2:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 1845,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1788,
                                      "src": "7019:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1847,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:13"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 1850,
                        "nodeType": "IfStatement",
                        "src": "6624:425:13",
                        "trueBody": {
                          "id": 1841,
                          "nodeType": "Block",
                          "src": "6646:191:13",
                          "statements": [
                            {
                              "id": 1840,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:13",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 1836,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1567,
                                      "src": "6791:12:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 1837,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1788,
                                      "src": "6807:5:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1839,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:13"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1852,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1784,
                              "src": "7073:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1853,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1786,
                              "src": "7079:2:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1854,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1788,
                              "src": "7083:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1851,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2063,
                            "src": "7064:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1856,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1782,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:13",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 1858,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1784,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1858,
                        "src": "6006:12:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1783,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1786,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1858,
                        "src": "6020:10:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1785,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1788,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1858,
                        "src": "6032:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1787,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:13"
                  },
                  "returnParameters": {
                    "id": 1790,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:13"
                  },
                  "scope": 2051,
                  "src": "5989:1107:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1890,
                    "nodeType": "Block",
                    "src": "7495:152:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1866,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1861,
                            "src": "7509:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1868,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1867,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1880,
                        "nodeType": "IfStatement",
                        "src": "7505:91:13",
                        "trueBody": {
                          "id": 1879,
                          "nodeType": "Block",
                          "src": "7532:64:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1875,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1874,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1873,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1876,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1872,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 859,
                                  "src": "7553:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1878,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1884,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1883,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1882,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1886,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1861,
                              "src": "7625:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1887,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1863,
                              "src": "7634:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1881,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1858,
                            "src": "7605:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1889,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1859,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:13",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 1891,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1864,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1861,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1891,
                        "src": "7454:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1860,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1863,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1891,
                        "src": "7471:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1862,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:13"
                  },
                  "returnParameters": {
                    "id": 1865,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:13"
                  },
                  "scope": 2051,
                  "src": "7439:208:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1923,
                    "nodeType": "Block",
                    "src": "8021:150:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1899,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1894,
                            "src": "8035:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1900,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1913,
                        "nodeType": "IfStatement",
                        "src": "8031:89:13",
                        "trueBody": {
                          "id": 1912,
                          "nodeType": "Block",
                          "src": "8058:62:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1908,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1907,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1906,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1909,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1905,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 854,
                                  "src": "8079:18:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1911,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1915,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1894,
                              "src": "8137:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1918,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1916,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1920,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1896,
                              "src": "8158:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1914,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1858,
                            "src": "8129:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1922,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1892,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:13",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 1924,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1897,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1894,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1924,
                        "src": "7980:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1893,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1896,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1924,
                        "src": "7997:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1895,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:13"
                  },
                  "returnParameters": {
                    "id": 1898,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:13"
                  },
                  "scope": 2051,
                  "src": "7965:206:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1941,
                    "nodeType": "Block",
                    "src": "8781:54:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1935,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1927,
                              "src": "8800:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1936,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1929,
                              "src": "8807:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1937,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1931,
                              "src": "8816:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1934,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1942,
                              2002
                            ],
                            "referencedDeclaration": 2002,
                            "src": "8791:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 1939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1940,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:13"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1925,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:13",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 1942,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1932,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1927,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1942,
                        "src": "8725:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1926,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1929,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1942,
                        "src": "8740:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1928,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1931,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 1942,
                        "src": "8757:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1930,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:13"
                  },
                  "returnParameters": {
                    "id": 1933,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:13"
                  },
                  "scope": 2051,
                  "src": "8707:128:13",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2001,
                    "nodeType": "Block",
                    "src": "9780:334:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1954,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1945,
                            "src": "9794:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1955,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1968,
                        "nodeType": "IfStatement",
                        "src": "9790:89:13",
                        "trueBody": {
                          "id": 1967,
                          "nodeType": "Block",
                          "src": "9815:64:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1963,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1962,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1961,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1964,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1960,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 873,
                                  "src": "9836:20:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1966,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:13"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1969,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1947,
                            "src": "9892:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1972,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1971,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1970,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1983,
                        "nodeType": "IfStatement",
                        "src": "9888:90:13",
                        "trueBody": {
                          "id": 1982,
                          "nodeType": "Block",
                          "src": "9915:63:13",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1978,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1977,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1976,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:13",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1979,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1975,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 878,
                                  "src": "9936:19:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 1980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1981,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1984,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1565,
                                "src": "9987:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1987,
                              "indexExpression": {
                                "id": 1985,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1945,
                                "src": "9999:5:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1988,
                            "indexExpression": {
                              "id": 1986,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1947,
                              "src": "10006:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1989,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1949,
                            "src": "10017:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1991,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:13"
                      },
                      {
                        "condition": {
                          "id": 1992,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1951,
                          "src": "10036:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2000,
                        "nodeType": "IfStatement",
                        "src": "10032:76:13",
                        "trueBody": {
                          "id": 1999,
                          "nodeType": "Block",
                          "src": "10047:61:13",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1994,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1945,
                                    "src": "10075:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1995,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1947,
                                    "src": "10082:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1996,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1949,
                                    "src": "10091:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1993,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2072,
                                  "src": "10066:8:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 1997,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:13",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1998,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:13"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1943,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:13",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 2002,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1952,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1945,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2002,
                        "src": "9700:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1944,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1947,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2002,
                        "src": "9715:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1946,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1949,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2002,
                        "src": "9732:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1948,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1951,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2002,
                        "src": "9747:14:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1950,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:13"
                  },
                  "returnParameters": {
                    "id": 1953,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:13"
                  },
                  "scope": 2051,
                  "src": "9682:432:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2049,
                    "nodeType": "Block",
                    "src": "10485:387:13",
                    "statements": [
                      {
                        "assignments": [
                          2013
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2013,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 2049,
                            "src": "10495:24:13",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2012,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2018,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2015,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2005,
                              "src": "10532:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2016,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2007,
                              "src": "10539:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2014,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1678,
                            "src": "10522:9:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 2017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:13"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2019,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2013,
                            "src": "10561:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2022,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 2021,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:13",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 2020,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10580:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 2023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 2024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:13",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2048,
                        "nodeType": "IfStatement",
                        "src": "10557:309:13",
                        "trueBody": {
                          "id": 2047,
                          "nodeType": "Block",
                          "src": "10599:267:13",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2028,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2026,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2013,
                                  "src": "10617:16:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 2027,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2009,
                                  "src": "10636:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2036,
                              "nodeType": "IfStatement",
                              "src": "10613:130:13",
                              "trueBody": {
                                "id": 2035,
                                "nodeType": "Block",
                                "src": "10643:100:13",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 2030,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2007,
                                          "src": "10695:7:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 2031,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2013,
                                          "src": "10704:16:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 2032,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2009,
                                          "src": "10722:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 2029,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 868,
                                        "src": "10668:26:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 2033,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:13",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 2034,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:13"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 2046,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:13",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 2038,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2005,
                                        "src": "10793:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 2039,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2007,
                                        "src": "10800:7:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2042,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2040,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2013,
                                          "src": "10809:16:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 2041,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2009,
                                          "src": "10828:5:13",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 2043,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:13",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 2037,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        1942,
                                        2002
                                      ],
                                      "referencedDeclaration": 2002,
                                      "src": "10784:8:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 2044,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:13",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 2045,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:13"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2003,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:13",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 2050,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:13",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2010,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2005,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2050,
                        "src": "10421:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2004,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2007,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2050,
                        "src": "10436:15:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2006,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:13",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2009,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:13",
                        "nodeType": "VariableDeclaration",
                        "scope": 2050,
                        "src": "10453:13:13",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2008,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:13"
                  },
                  "returnParameters": {
                    "id": 2011,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:13"
                  },
                  "scope": 2051,
                  "src": "10396:476:13",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 2052,
              "src": "1106:9768:13",
              "usedErrors": [
                849,
                854,
                859,
                868,
                873,
                878
              ],
              "usedEvents": [
                2063,
                2072
              ]
            }
          ],
          "src": "105:10770:13"
        },
        "id": 13
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              2129
            ]
          },
          "id": 2130,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2053,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:14"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2054,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:14",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 2129,
              "linearizedBaseContracts": [
                2129
              ],
              "name": "IERC20",
              "nameLocation": "214:6:14",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2055,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:14",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 2063,
                  "name": "Transfer",
                  "nameLocation": "396:8:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2062,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2057,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "405:20:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2056,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2059,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "427:18:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2058,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2061,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2063,
                        "src": "447:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2060,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:14"
                  },
                  "src": "390:72:14"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 2064,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:14",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 2072,
                  "name": "Approval",
                  "nameLocation": "627:8:14",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2066,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2072,
                        "src": "636:21:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2065,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2068,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2072,
                        "src": "659:23:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2070,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2072,
                        "src": "684:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:14"
                  },
                  "src": "621:78:14"
                },
                {
                  "documentation": {
                    "id": 2073,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:14",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 2078,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2074,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:14"
                  },
                  "returnParameters": {
                    "id": 2077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2076,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2078,
                        "src": "821:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2075,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:14"
                  },
                  "scope": 2129,
                  "src": "775:55:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2079,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:14",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 2086,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2082,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2081,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2086,
                        "src": "931:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2080,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:14"
                  },
                  "returnParameters": {
                    "id": 2085,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2084,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2086,
                        "src": "971:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2083,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:14"
                  },
                  "scope": 2129,
                  "src": "912:68:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2087,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:14",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 2096,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2092,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2089,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2096,
                        "src": "1222:10:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2088,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2091,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2096,
                        "src": "1234:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2090,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:14"
                  },
                  "returnParameters": {
                    "id": 2095,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2094,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2096,
                        "src": "1267:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2093,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:14"
                  },
                  "scope": 2129,
                  "src": "1204:69:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2097,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:14",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 2106,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2099,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2106,
                        "src": "1567:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2098,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2101,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2106,
                        "src": "1582:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:14"
                  },
                  "returnParameters": {
                    "id": 2105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2104,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2106,
                        "src": "1622:7:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2103,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:14"
                  },
                  "scope": 2129,
                  "src": "1548:83:14",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2107,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:14",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 2116,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2109,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2116,
                        "src": "2326:15:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2111,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2116,
                        "src": "2343:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:14"
                  },
                  "returnParameters": {
                    "id": 2115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2114,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2116,
                        "src": "2376:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2113,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:14"
                  },
                  "scope": 2129,
                  "src": "2309:73:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2117,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:14",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 2128,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:14",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2119,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "2712:12:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2121,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "2726:10:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:14",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2123,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:14",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "2738:13:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2122,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:14"
                  },
                  "returnParameters": {
                    "id": 2127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2126,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2128,
                        "src": "2771:4:14",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2125,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:14"
                  },
                  "scope": 2129,
                  "src": "2690:87:14",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2130,
              "src": "204:2575:14",
              "usedErrors": [],
              "usedEvents": [
                2063,
                2072
              ]
            }
          ],
          "src": "106:2674:14"
        },
        "id": 14
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              2129
            ],
            "IERC20Metadata": [
              2155
            ]
          },
          "id": 2156,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2131,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:15"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 2133,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2156,
              "sourceUnit": 2130,
              "src": "151:37:15",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2132,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2129,
                    "src": "159:6:15",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2135,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:15"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2129,
                    "src": "306:6:15"
                  },
                  "id": 2136,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:15"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2134,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:15",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 2155,
              "linearizedBaseContracts": [
                2155,
                2129
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:15",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2137,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:15",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 2142,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2138,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:15"
                  },
                  "returnParameters": {
                    "id": 2141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2140,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2142,
                        "src": "417:13:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2139,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:15"
                  },
                  "scope": 2155,
                  "src": "378:54:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2143,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:15",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 2148,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2144,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:15"
                  },
                  "returnParameters": {
                    "id": 2147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2146,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2148,
                        "src": "540:13:15",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2145,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:15"
                  },
                  "scope": 2155,
                  "src": "499:56:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 2149,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:15",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 2154,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:15",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2150,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:15"
                  },
                  "returnParameters": {
                    "id": 2153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2152,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2154,
                        "src": "674:5:15",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2151,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:15"
                  },
                  "scope": 2155,
                  "src": "631:50:15",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2156,
              "src": "278:405:15",
              "usedErrors": [],
              "usedEvents": [
                2063,
                2072
              ]
            }
          ],
          "src": "125:559:15"
        },
        "id": 15
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
          "exportedSymbols": {
            "Address": [
              2415
            ],
            "Errors": [
              2467
            ]
          },
          "id": 2416,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2157,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:16"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
              "file": "./Errors.sol",
              "id": 2159,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2416,
              "sourceUnit": 2468,
              "src": "127:36:16",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2158,
                    "name": "Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2467,
                    "src": "135:6:16",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Address",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2160,
                "nodeType": "StructuredDocumentation",
                "src": "165:67:16",
                "text": " @dev Collection of functions related to the address type"
              },
              "fullyImplemented": true,
              "id": 2415,
              "linearizedBaseContracts": [
                2415
              ],
              "name": "Address",
              "nameLocation": "241:7:16",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2161,
                    "nodeType": "StructuredDocumentation",
                    "src": "255:75:16",
                    "text": " @dev There's no code at `target` (it is not a contract)."
                  },
                  "errorSelector": "9996b315",
                  "id": 2165,
                  "name": "AddressEmptyCode",
                  "nameLocation": "341:16:16",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2164,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2163,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "366:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2165,
                        "src": "358:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2162,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "358:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "357:16:16"
                  },
                  "src": "335:39:16"
                },
                {
                  "body": {
                    "id": 2212,
                    "nodeType": "Block",
                    "src": "1361:294:16",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2175,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1383:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Address_$2415",
                                    "typeString": "library Address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Address_$2415",
                                    "typeString": "library Address"
                                  }
                                ],
                                "id": 2174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1375:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2173,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1375:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1375:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1389:7:16",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "1375:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2178,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2170,
                            "src": "1399:6:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1375:30:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2192,
                        "nodeType": "IfStatement",
                        "src": "1371:125:16",
                        "trueBody": {
                          "id": 2191,
                          "nodeType": "Block",
                          "src": "1407:89:16",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2185,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "1463:4:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Address_$2415",
                                            "typeString": "library Address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Address_$2415",
                                            "typeString": "library Address"
                                          }
                                        ],
                                        "id": 2184,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1455:7:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2183,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1455:7:16",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2186,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1455:13:16",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2187,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1469:7:16",
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "1455:21:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2188,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2170,
                                    "src": "1478:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2180,
                                    "name": "Errors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2467,
                                    "src": "1428:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Errors_$2467_$",
                                      "typeString": "type(library Errors)"
                                    }
                                  },
                                  "id": 2182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1435:19:16",
                                  "memberName": "InsufficientBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2455,
                                  "src": "1428:26:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 2189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1428:57:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2190,
                              "nodeType": "RevertStatement",
                              "src": "1421:64:16"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2194,
                          2196
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2194,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "1512:7:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 2212,
                            "src": "1507:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2193,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1507:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2196,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "1534:10:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 2212,
                            "src": "1521:23:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2195,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1521:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2203,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 2201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1578:2:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 2197,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2168,
                                "src": "1548:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 2198,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1558:4:16",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "1548:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2199,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2170,
                                "src": "1570:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "1548:29:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1548:33:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1506:75:16"
                      },
                      {
                        "condition": {
                          "id": 2205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1595:8:16",
                          "subExpression": {
                            "id": 2204,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2194,
                            "src": "1596:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2211,
                        "nodeType": "IfStatement",
                        "src": "1591:58:16",
                        "trueBody": {
                          "id": 2210,
                          "nodeType": "Block",
                          "src": "1605:44:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2207,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2196,
                                    "src": "1627:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2206,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2414,
                                  "src": "1619:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) pure"
                                  }
                                },
                                "id": 2208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1619:19:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2209,
                              "nodeType": "ExpressionStatement",
                              "src": "1619:19:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2166,
                    "nodeType": "StructuredDocumentation",
                    "src": "380:905:16",
                    "text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
                  },
                  "id": 2213,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nameLocation": "1299:9:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2171,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2168,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1325:9:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2213,
                        "src": "1309:25:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 2167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1309:15:16",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2170,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1344:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2213,
                        "src": "1336:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2169,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1308:43:16"
                  },
                  "returnParameters": {
                    "id": 2172,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1361:0:16"
                  },
                  "scope": 2415,
                  "src": "1290:365:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2229,
                    "nodeType": "Block",
                    "src": "2589:62:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2224,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2216,
                              "src": "2628:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2225,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2218,
                              "src": "2636:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 2226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2642:1:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2223,
                            "name": "functionCallWithValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2280,
                            "src": "2606:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
                            }
                          },
                          "id": 2227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2606:38:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 2222,
                        "id": 2228,
                        "nodeType": "Return",
                        "src": "2599:45:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2214,
                    "nodeType": "StructuredDocumentation",
                    "src": "1661:834:16",
                    "text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
                  },
                  "id": 2230,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCall",
                  "nameLocation": "2509:12:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2219,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2216,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "2530:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "2522:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2522:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2218,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2551:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "2538:17:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2217,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2538:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2521:35:16"
                  },
                  "returnParameters": {
                    "id": 2222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2221,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2230,
                        "src": "2575:12:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2220,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2575:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2574:14:16"
                  },
                  "scope": 2415,
                  "src": "2500:151:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2279,
                    "nodeType": "Block",
                    "src": "3088:294:16",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2244,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3110:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Address_$2415",
                                    "typeString": "library Address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Address_$2415",
                                    "typeString": "library Address"
                                  }
                                ],
                                "id": 2243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3102:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2242,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3102:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3102:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3116:7:16",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "3102:21:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2247,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2237,
                            "src": "3126:5:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3102:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2261,
                        "nodeType": "IfStatement",
                        "src": "3098:123:16",
                        "trueBody": {
                          "id": 2260,
                          "nodeType": "Block",
                          "src": "3133:88:16",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 2254,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "3189:4:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Address_$2415",
                                            "typeString": "library Address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_Address_$2415",
                                            "typeString": "library Address"
                                          }
                                        ],
                                        "id": 2253,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3181:7:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 2252,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3181:7:16",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 2255,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3181:13:16",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2256,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3195:7:16",
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "3181:21:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 2257,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2237,
                                    "src": "3204:5:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2249,
                                    "name": "Errors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2467,
                                    "src": "3154:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Errors_$2467_$",
                                      "typeString": "type(library Errors)"
                                    }
                                  },
                                  "id": 2251,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3161:19:16",
                                  "memberName": "InsufficientBalance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2455,
                                  "src": "3154:26:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                    "typeString": "function (uint256,uint256) pure returns (error)"
                                  }
                                },
                                "id": 2258,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3154:56:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2259,
                              "nodeType": "RevertStatement",
                              "src": "3147:63:16"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          2263,
                          2265
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2263,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3236:7:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 2279,
                            "src": "3231:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2262,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3231:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2265,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "3258:10:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 2279,
                            "src": "3245:23:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2264,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3245:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2272,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2270,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2235,
                              "src": "3298:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 2266,
                                "name": "target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2233,
                                "src": "3272:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3279:4:16",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3272:11:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 2269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 2268,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2237,
                                "src": "3291:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3272:25:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3272:31:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3230:73:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2274,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2233,
                              "src": "3347:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2275,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2263,
                              "src": "3355:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 2276,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2265,
                              "src": "3364:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2273,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2372,
                            "src": "3320:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 2277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3320:55:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 2241,
                        "id": 2278,
                        "nodeType": "Return",
                        "src": "3313:62:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2231,
                    "nodeType": "StructuredDocumentation",
                    "src": "2657:313:16",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
                  },
                  "id": 2280,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionCallWithValue",
                  "nameLocation": "2984:21:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2233,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3014:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2280,
                        "src": "3006:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3006:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2235,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3035:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2280,
                        "src": "3022:17:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2234,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3022:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2237,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3049:5:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2280,
                        "src": "3041:13:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2236,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3041:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3005:50:16"
                  },
                  "returnParameters": {
                    "id": 2241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2240,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2280,
                        "src": "3074:12:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2239,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3074:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3073:14:16"
                  },
                  "scope": 2415,
                  "src": "2975:407:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2305,
                    "nodeType": "Block",
                    "src": "3621:154:16",
                    "statements": [
                      {
                        "assignments": [
                          2291,
                          2293
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2291,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3637:7:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 2305,
                            "src": "3632:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2290,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3632:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2293,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "3659:10:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 2305,
                            "src": "3646:23:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2292,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3646:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2298,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2296,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2285,
                              "src": "3691:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 2294,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2283,
                              "src": "3673:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3680:10:16",
                            "memberName": "staticcall",
                            "nodeType": "MemberAccess",
                            "src": "3673:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 2297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3673:23:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3631:65:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2300,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2283,
                              "src": "3740:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2301,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2291,
                              "src": "3748:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 2302,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2293,
                              "src": "3757:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2299,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2372,
                            "src": "3713:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 2303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3713:55:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 2289,
                        "id": 2304,
                        "nodeType": "Return",
                        "src": "3706:62:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2281,
                    "nodeType": "StructuredDocumentation",
                    "src": "3388:128:16",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
                  },
                  "id": 2306,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionStaticCall",
                  "nameLocation": "3530:18:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2283,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3557:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2306,
                        "src": "3549:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3549:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2285,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3578:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2306,
                        "src": "3565:17:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2284,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3565:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3548:35:16"
                  },
                  "returnParameters": {
                    "id": 2289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2288,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2306,
                        "src": "3607:12:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2287,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3607:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3606:14:16"
                  },
                  "scope": 2415,
                  "src": "3521:254:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2331,
                    "nodeType": "Block",
                    "src": "4013:156:16",
                    "statements": [
                      {
                        "assignments": [
                          2317,
                          2319
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2317,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4029:7:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 2331,
                            "src": "4024:12:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2316,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4024:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2319,
                            "mutability": "mutable",
                            "name": "returndata",
                            "nameLocation": "4051:10:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 2331,
                            "src": "4038:23:16",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2318,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "4038:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2324,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2322,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2311,
                              "src": "4085:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 2320,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2309,
                              "src": "4065:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 2321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4072:12:16",
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "4065:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 2323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4065:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4023:67:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2326,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2309,
                              "src": "4134:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2327,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2317,
                              "src": "4142:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 2328,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2319,
                              "src": "4151:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2325,
                            "name": "verifyCallResultFromTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2372,
                            "src": "4107:26:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
                            }
                          },
                          "id": 2329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4107:55:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "functionReturnParameters": 2315,
                        "id": 2330,
                        "nodeType": "Return",
                        "src": "4100:62:16"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2307,
                    "nodeType": "StructuredDocumentation",
                    "src": "3781:130:16",
                    "text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
                  },
                  "id": 2332,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "functionDelegateCall",
                  "nameLocation": "3925:20:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2309,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "3954:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2332,
                        "src": "3946:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3946:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2311,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3975:4:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2332,
                        "src": "3962:17:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2310,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3962:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3945:35:16"
                  },
                  "returnParameters": {
                    "id": 2315,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2314,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2332,
                        "src": "3999:12:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2313,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3999:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3998:14:16"
                  },
                  "scope": 2415,
                  "src": "3916:253:16",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2371,
                    "nodeType": "Block",
                    "src": "4595:424:16",
                    "statements": [
                      {
                        "condition": {
                          "id": 2345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4609:8:16",
                          "subExpression": {
                            "id": 2344,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2337,
                            "src": "4610:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2369,
                          "nodeType": "Block",
                          "src": "4669:344:16",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 2351,
                                      "name": "returndata",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2339,
                                      "src": "4857:10:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 2352,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4868:6:16",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "4857:17:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 2353,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4878:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "4857:22:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2359,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "expression": {
                                        "id": 2355,
                                        "name": "target",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2335,
                                        "src": "4883:6:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "id": 2356,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4890:4:16",
                                      "memberName": "code",
                                      "nodeType": "MemberAccess",
                                      "src": "4883:11:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 2357,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4895:6:16",
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "4883:18:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 2358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4905:1:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "4883:23:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4857:49:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2366,
                              "nodeType": "IfStatement",
                              "src": "4853:119:16",
                              "trueBody": {
                                "id": 2365,
                                "nodeType": "Block",
                                "src": "4908:64:16",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 2362,
                                          "name": "target",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2335,
                                          "src": "4950:6:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 2361,
                                        "name": "AddressEmptyCode",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2165,
                                        "src": "4933:16:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                          "typeString": "function (address) pure returns (error)"
                                        }
                                      },
                                      "id": 2363,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4933:24:16",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 2364,
                                    "nodeType": "RevertStatement",
                                    "src": "4926:31:16"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "id": 2367,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2339,
                                "src": "4992:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 2343,
                              "id": 2368,
                              "nodeType": "Return",
                              "src": "4985:17:16"
                            }
                          ]
                        },
                        "id": 2370,
                        "nodeType": "IfStatement",
                        "src": "4605:408:16",
                        "trueBody": {
                          "id": 2350,
                          "nodeType": "Block",
                          "src": "4619:44:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2347,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2339,
                                    "src": "4641:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2346,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2414,
                                  "src": "4633:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) pure"
                                  }
                                },
                                "id": 2348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4633:19:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2349,
                              "nodeType": "ExpressionStatement",
                              "src": "4633:19:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2333,
                    "nodeType": "StructuredDocumentation",
                    "src": "4175:257:16",
                    "text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
                  },
                  "id": 2372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResultFromTarget",
                  "nameLocation": "4446:26:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2335,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "4490:6:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2372,
                        "src": "4482:14:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4482:7:16",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2337,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "4511:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2372,
                        "src": "4506:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2336,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4506:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2339,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "4541:10:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2372,
                        "src": "4528:23:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2338,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4528:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4472:85:16"
                  },
                  "returnParameters": {
                    "id": 2343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2342,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2372,
                        "src": "4581:12:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2341,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4581:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4580:14:16"
                  },
                  "scope": 2415,
                  "src": "4437:582:16",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2393,
                    "nodeType": "Block",
                    "src": "5323:122:16",
                    "statements": [
                      {
                        "condition": {
                          "id": 2383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "5337:8:16",
                          "subExpression": {
                            "id": 2382,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2375,
                            "src": "5338:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2391,
                          "nodeType": "Block",
                          "src": "5397:42:16",
                          "statements": [
                            {
                              "expression": {
                                "id": 2389,
                                "name": "returndata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2377,
                                "src": "5418:10:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "functionReturnParameters": 2381,
                              "id": 2390,
                              "nodeType": "Return",
                              "src": "5411:17:16"
                            }
                          ]
                        },
                        "id": 2392,
                        "nodeType": "IfStatement",
                        "src": "5333:106:16",
                        "trueBody": {
                          "id": 2388,
                          "nodeType": "Block",
                          "src": "5347:44:16",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2385,
                                    "name": "returndata",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2377,
                                    "src": "5369:10:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 2384,
                                  "name": "_revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2414,
                                  "src": "5361:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (bytes memory) pure"
                                  }
                                },
                                "id": 2386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5361:19:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2387,
                              "nodeType": "ExpressionStatement",
                              "src": "5361:19:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2373,
                    "nodeType": "StructuredDocumentation",
                    "src": "5025:191:16",
                    "text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
                  },
                  "id": 2394,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyCallResult",
                  "nameLocation": "5230:16:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2375,
                        "mutability": "mutable",
                        "name": "success",
                        "nameLocation": "5252:7:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2394,
                        "src": "5247:12:16",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2374,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5247:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2377,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "5274:10:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2394,
                        "src": "5261:23:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2376,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5261:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5246:39:16"
                  },
                  "returnParameters": {
                    "id": 2381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2380,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2394,
                        "src": "5309:12:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2379,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5309:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5308:14:16"
                  },
                  "scope": 2415,
                  "src": "5221:224:16",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2413,
                    "nodeType": "Block",
                    "src": "5614:432:16",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 2400,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2397,
                              "src": "5690:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 2401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5701:6:16",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5690:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5710:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5690:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2411,
                          "nodeType": "Block",
                          "src": "5989:51:16",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 2406,
                                    "name": "Errors",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2467,
                                    "src": "6010:6:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_Errors_$2467_$",
                                      "typeString": "type(library Errors)"
                                    }
                                  },
                                  "id": 2408,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6017:10:16",
                                  "memberName": "FailedCall",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2458,
                                  "src": "6010:17:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 2409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6010:19:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 2410,
                              "nodeType": "RevertStatement",
                              "src": "6003:26:16"
                            }
                          ]
                        },
                        "id": 2412,
                        "nodeType": "IfStatement",
                        "src": "5686:354:16",
                        "trueBody": {
                          "id": 2405,
                          "nodeType": "Block",
                          "src": "5713:270:16",
                          "statements": [
                            {
                              "AST": {
                                "nativeSrc": "5840:133:16",
                                "nodeType": "YulBlock",
                                "src": "5840:133:16",
                                "statements": [
                                  {
                                    "nativeSrc": "5858:40:16",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "5858:40:16",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nativeSrc": "5887:10:16",
                                          "nodeType": "YulIdentifier",
                                          "src": "5887:10:16"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nativeSrc": "5881:5:16",
                                        "nodeType": "YulIdentifier",
                                        "src": "5881:5:16"
                                      },
                                      "nativeSrc": "5881:17:16",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5881:17:16"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nativeSrc": "5862:15:16",
                                        "nodeType": "YulTypedName",
                                        "src": "5862:15:16",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5926:2:16",
                                              "nodeType": "YulLiteral",
                                              "src": "5926:2:16",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nativeSrc": "5930:10:16",
                                              "nodeType": "YulIdentifier",
                                              "src": "5930:10:16"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "5922:3:16",
                                            "nodeType": "YulIdentifier",
                                            "src": "5922:3:16"
                                          },
                                          "nativeSrc": "5922:19:16",
                                          "nodeType": "YulFunctionCall",
                                          "src": "5922:19:16"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nativeSrc": "5943:15:16",
                                          "nodeType": "YulIdentifier",
                                          "src": "5943:15:16"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5915:6:16",
                                        "nodeType": "YulIdentifier",
                                        "src": "5915:6:16"
                                      },
                                      "nativeSrc": "5915:44:16",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5915:44:16"
                                    },
                                    "nativeSrc": "5915:44:16",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5915:44:16"
                                  }
                                ]
                              },
                              "evmVersion": "paris",
                              "externalReferences": [
                                {
                                  "declaration": 2397,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "5887:10:16",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 2397,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "5930:10:16",
                                  "valueSize": 1
                                }
                              ],
                              "flags": [
                                "memory-safe"
                              ],
                              "id": 2404,
                              "nodeType": "InlineAssembly",
                              "src": "5815:158:16"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2395,
                    "nodeType": "StructuredDocumentation",
                    "src": "5451:103:16",
                    "text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
                  },
                  "id": 2414,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revert",
                  "nameLocation": "5568:7:16",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2397,
                        "mutability": "mutable",
                        "name": "returndata",
                        "nameLocation": "5589:10:16",
                        "nodeType": "VariableDeclaration",
                        "scope": 2414,
                        "src": "5576:23:16",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2396,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "5576:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5575:25:16"
                  },
                  "returnParameters": {
                    "id": 2399,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5614:0:16"
                  },
                  "scope": 2415,
                  "src": "5559:487:16",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 2416,
              "src": "233:5815:16",
              "usedErrors": [
                2165
              ],
              "usedEvents": []
            }
          ],
          "src": "101:5948:16"
        },
        "id": 16
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              2445
            ]
          },
          "id": 2446,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2417,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:17"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2418,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:17",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 2445,
              "linearizedBaseContracts": [
                2445
              ],
              "name": "Context",
              "nameLocation": "642:7:17",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2426,
                    "nodeType": "Block",
                    "src": "718:34:17",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2423,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:17",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 2422,
                        "id": 2425,
                        "nodeType": "Return",
                        "src": "728:17:17"
                      }
                    ]
                  },
                  "id": 2427,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:17"
                  },
                  "returnParameters": {
                    "id": 2422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2421,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2427,
                        "src": "709:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:17",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:17"
                  },
                  "scope": 2445,
                  "src": "656:96:17",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2435,
                    "nodeType": "Block",
                    "src": "825:32:17",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2432,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:17",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 2431,
                        "id": 2434,
                        "nodeType": "Return",
                        "src": "835:15:17"
                      }
                    ]
                  },
                  "id": 2436,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2428,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:17"
                  },
                  "returnParameters": {
                    "id": 2431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2430,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2436,
                        "src": "809:14:17",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2429,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:17"
                  },
                  "scope": 2445,
                  "src": "758:99:17",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2443,
                    "nodeType": "Block",
                    "src": "935:25:17",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 2440,
                        "id": 2442,
                        "nodeType": "Return",
                        "src": "945:8:17"
                      }
                    ]
                  },
                  "id": 2444,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:17",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2437,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:17"
                  },
                  "returnParameters": {
                    "id": 2440,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2439,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2444,
                        "src": "926:7:17",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2438,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:17"
                  },
                  "scope": 2445,
                  "src": "863:97:17",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 2446,
              "src": "624:338:17",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:17"
        },
        "id": 17
      },
      "@openzeppelin/contracts/utils/Errors.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
          "exportedSymbols": {
            "Errors": [
              2467
            ]
          },
          "id": 2468,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2447,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "100:24:18"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Errors",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2448,
                "nodeType": "StructuredDocumentation",
                "src": "126:284:18",
                "text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
              },
              "fullyImplemented": true,
              "id": 2467,
              "linearizedBaseContracts": [
                2467
              ],
              "name": "Errors",
              "nameLocation": "419:6:18",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 2449,
                    "nodeType": "StructuredDocumentation",
                    "src": "432:94:18",
                    "text": " @dev The ETH balance of the account is not enough to perform the operation."
                  },
                  "errorSelector": "cf479181",
                  "id": 2455,
                  "name": "InsufficientBalance",
                  "nameLocation": "537:19:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2451,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "565:7:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2455,
                        "src": "557:15:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2450,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "557:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2453,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "582:6:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 2455,
                        "src": "574:14:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2452,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "574:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "556:33:18"
                  },
                  "src": "531:59:18"
                },
                {
                  "documentation": {
                    "id": 2456,
                    "nodeType": "StructuredDocumentation",
                    "src": "596:89:18",
                    "text": " @dev A call to an address target failed. The target may have reverted."
                  },
                  "errorSelector": "d6bda275",
                  "id": 2458,
                  "name": "FailedCall",
                  "nameLocation": "696:10:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2457,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "706:2:18"
                  },
                  "src": "690:19:18"
                },
                {
                  "documentation": {
                    "id": 2459,
                    "nodeType": "StructuredDocumentation",
                    "src": "715:46:18",
                    "text": " @dev The deployment failed."
                  },
                  "errorSelector": "b06ebf3d",
                  "id": 2461,
                  "name": "FailedDeployment",
                  "nameLocation": "772:16:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2460,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "788:2:18"
                  },
                  "src": "766:25:18"
                },
                {
                  "documentation": {
                    "id": 2462,
                    "nodeType": "StructuredDocumentation",
                    "src": "797:58:18",
                    "text": " @dev A necessary precompile is missing."
                  },
                  "errorSelector": "42b01bce",
                  "id": 2466,
                  "name": "MissingPrecompile",
                  "nameLocation": "866:17:18",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 2465,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2464,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2466,
                        "src": "884:7:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2463,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "884:7:18",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "883:9:18"
                  },
                  "src": "860:33:18"
                }
              ],
              "scope": 2468,
              "src": "411:484:18",
              "usedErrors": [
                2455,
                2458,
                2461,
                2466
              ],
              "usedEvents": []
            }
          ],
          "src": "100:796:18"
        },
        "id": 18
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
          "exportedSymbols": {
            "StorageSlot": [
              2591
            ]
          },
          "id": 2592,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2469,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "193:24:19"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "StorageSlot",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2470,
                "nodeType": "StructuredDocumentation",
                "src": "219:1187:19",
                "text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
              },
              "fullyImplemented": true,
              "id": 2591,
              "linearizedBaseContracts": [
                2591
              ],
              "name": "StorageSlot",
              "nameLocation": "1415:11:19",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "StorageSlot.AddressSlot",
                  "id": 2473,
                  "members": [
                    {
                      "constant": false,
                      "id": 2472,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1470:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2473,
                      "src": "1462:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2471,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1462:7:19",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "AddressSlot",
                  "nameLocation": "1440:11:19",
                  "nodeType": "StructDefinition",
                  "scope": 2591,
                  "src": "1433:49:19",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.BooleanSlot",
                  "id": 2476,
                  "members": [
                    {
                      "constant": false,
                      "id": 2475,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1522:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2476,
                      "src": "1517:10:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2474,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1517:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BooleanSlot",
                  "nameLocation": "1495:11:19",
                  "nodeType": "StructDefinition",
                  "scope": 2591,
                  "src": "1488:46:19",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.Bytes32Slot",
                  "id": 2479,
                  "members": [
                    {
                      "constant": false,
                      "id": 2478,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1577:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2479,
                      "src": "1569:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2477,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1569:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Bytes32Slot",
                  "nameLocation": "1547:11:19",
                  "nodeType": "StructDefinition",
                  "scope": 2591,
                  "src": "1540:49:19",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.Uint256Slot",
                  "id": 2482,
                  "members": [
                    {
                      "constant": false,
                      "id": 2481,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1632:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2482,
                      "src": "1624:13:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2480,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1624:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Uint256Slot",
                  "nameLocation": "1602:11:19",
                  "nodeType": "StructDefinition",
                  "scope": 2591,
                  "src": "1595:49:19",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.Int256Slot",
                  "id": 2485,
                  "members": [
                    {
                      "constant": false,
                      "id": 2484,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1685:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2485,
                      "src": "1678:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 2483,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1678:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Int256Slot",
                  "nameLocation": "1657:10:19",
                  "nodeType": "StructDefinition",
                  "scope": 2591,
                  "src": "1650:47:19",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.StringSlot",
                  "id": 2488,
                  "members": [
                    {
                      "constant": false,
                      "id": 2487,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1738:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2488,
                      "src": "1731:12:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 2486,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1731:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "StringSlot",
                  "nameLocation": "1710:10:19",
                  "nodeType": "StructDefinition",
                  "scope": 2591,
                  "src": "1703:47:19",
                  "visibility": "public"
                },
                {
                  "canonicalName": "StorageSlot.BytesSlot",
                  "id": 2491,
                  "members": [
                    {
                      "constant": false,
                      "id": 2490,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1789:5:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 2491,
                      "src": "1783:11:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2489,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1783:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BytesSlot",
                  "nameLocation": "1763:9:19",
                  "nodeType": "StructDefinition",
                  "scope": 2591,
                  "src": "1756:45:19",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2501,
                    "nodeType": "Block",
                    "src": "1983:79:19",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2018:38:19",
                          "nodeType": "YulBlock",
                          "src": "2018:38:19",
                          "statements": [
                            {
                              "nativeSrc": "2032:14:19",
                              "nodeType": "YulAssignment",
                              "src": "2032:14:19",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "2042:4:19",
                                "nodeType": "YulIdentifier",
                                "src": "2042:4:19"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "2032:6:19",
                                  "nodeType": "YulIdentifier",
                                  "src": "2032:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 2498,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2032:6:19",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2494,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2042:4:19",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 2500,
                        "nodeType": "InlineAssembly",
                        "src": "1993:63:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2492,
                    "nodeType": "StructuredDocumentation",
                    "src": "1807:87:19",
                    "text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
                  },
                  "id": 2502,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAddressSlot",
                  "nameLocation": "1908:14:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2494,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "1931:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2502,
                        "src": "1923:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2493,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1923:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1922:14:19"
                  },
                  "returnParameters": {
                    "id": 2499,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2498,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1980:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2502,
                        "src": "1960:21:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSlot_$2473_storage_ptr",
                          "typeString": "struct StorageSlot.AddressSlot"
                        },
                        "typeName": {
                          "id": 2497,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2496,
                            "name": "AddressSlot",
                            "nameLocations": [
                              "1960:11:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2473,
                            "src": "1960:11:19"
                          },
                          "referencedDeclaration": 2473,
                          "src": "1960:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AddressSlot_$2473_storage_ptr",
                            "typeString": "struct StorageSlot.AddressSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1959:23:19"
                  },
                  "scope": 2591,
                  "src": "1899:163:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2512,
                    "nodeType": "Block",
                    "src": "2243:79:19",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2278:38:19",
                          "nodeType": "YulBlock",
                          "src": "2278:38:19",
                          "statements": [
                            {
                              "nativeSrc": "2292:14:19",
                              "nodeType": "YulAssignment",
                              "src": "2292:14:19",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "2302:4:19",
                                "nodeType": "YulIdentifier",
                                "src": "2302:4:19"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "2292:6:19",
                                  "nodeType": "YulIdentifier",
                                  "src": "2292:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 2509,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2292:6:19",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2505,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2302:4:19",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 2511,
                        "nodeType": "InlineAssembly",
                        "src": "2253:63:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2503,
                    "nodeType": "StructuredDocumentation",
                    "src": "2068:86:19",
                    "text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
                  },
                  "id": 2513,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBooleanSlot",
                  "nameLocation": "2168:14:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2506,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2505,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2191:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2513,
                        "src": "2183:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2504,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2183:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2182:14:19"
                  },
                  "returnParameters": {
                    "id": 2510,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2509,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2240:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2513,
                        "src": "2220:21:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BooleanSlot_$2476_storage_ptr",
                          "typeString": "struct StorageSlot.BooleanSlot"
                        },
                        "typeName": {
                          "id": 2508,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2507,
                            "name": "BooleanSlot",
                            "nameLocations": [
                              "2220:11:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2476,
                            "src": "2220:11:19"
                          },
                          "referencedDeclaration": 2476,
                          "src": "2220:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BooleanSlot_$2476_storage_ptr",
                            "typeString": "struct StorageSlot.BooleanSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2219:23:19"
                  },
                  "scope": 2591,
                  "src": "2159:163:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2523,
                    "nodeType": "Block",
                    "src": "2503:79:19",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2538:38:19",
                          "nodeType": "YulBlock",
                          "src": "2538:38:19",
                          "statements": [
                            {
                              "nativeSrc": "2552:14:19",
                              "nodeType": "YulAssignment",
                              "src": "2552:14:19",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "2562:4:19",
                                "nodeType": "YulIdentifier",
                                "src": "2562:4:19"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "2552:6:19",
                                  "nodeType": "YulIdentifier",
                                  "src": "2552:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 2520,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2552:6:19",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2516,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2562:4:19",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 2522,
                        "nodeType": "InlineAssembly",
                        "src": "2513:63:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2514,
                    "nodeType": "StructuredDocumentation",
                    "src": "2328:86:19",
                    "text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
                  },
                  "id": 2524,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBytes32Slot",
                  "nameLocation": "2428:14:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2516,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2451:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2524,
                        "src": "2443:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2515,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2443:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2442:14:19"
                  },
                  "returnParameters": {
                    "id": 2521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2520,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2500:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2524,
                        "src": "2480:21:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bytes32Slot_$2479_storage_ptr",
                          "typeString": "struct StorageSlot.Bytes32Slot"
                        },
                        "typeName": {
                          "id": 2519,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2518,
                            "name": "Bytes32Slot",
                            "nameLocations": [
                              "2480:11:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2479,
                            "src": "2480:11:19"
                          },
                          "referencedDeclaration": 2479,
                          "src": "2480:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bytes32Slot_$2479_storage_ptr",
                            "typeString": "struct StorageSlot.Bytes32Slot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2479:23:19"
                  },
                  "scope": 2591,
                  "src": "2419:163:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2534,
                    "nodeType": "Block",
                    "src": "2763:79:19",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "2798:38:19",
                          "nodeType": "YulBlock",
                          "src": "2798:38:19",
                          "statements": [
                            {
                              "nativeSrc": "2812:14:19",
                              "nodeType": "YulAssignment",
                              "src": "2812:14:19",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "2822:4:19",
                                "nodeType": "YulIdentifier",
                                "src": "2822:4:19"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "2812:6:19",
                                  "nodeType": "YulIdentifier",
                                  "src": "2812:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 2531,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "2812:6:19",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2527,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2822:4:19",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 2533,
                        "nodeType": "InlineAssembly",
                        "src": "2773:63:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2525,
                    "nodeType": "StructuredDocumentation",
                    "src": "2588:86:19",
                    "text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
                  },
                  "id": 2535,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUint256Slot",
                  "nameLocation": "2688:14:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2527,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2711:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2535,
                        "src": "2703:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2526,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2703:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2702:14:19"
                  },
                  "returnParameters": {
                    "id": 2532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2531,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2760:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2535,
                        "src": "2740:21:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Uint256Slot_$2482_storage_ptr",
                          "typeString": "struct StorageSlot.Uint256Slot"
                        },
                        "typeName": {
                          "id": 2530,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2529,
                            "name": "Uint256Slot",
                            "nameLocations": [
                              "2740:11:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2482,
                            "src": "2740:11:19"
                          },
                          "referencedDeclaration": 2482,
                          "src": "2740:11:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Uint256Slot_$2482_storage_ptr",
                            "typeString": "struct StorageSlot.Uint256Slot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2739:23:19"
                  },
                  "scope": 2591,
                  "src": "2679:163:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2545,
                    "nodeType": "Block",
                    "src": "3020:79:19",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "3055:38:19",
                          "nodeType": "YulBlock",
                          "src": "3055:38:19",
                          "statements": [
                            {
                              "nativeSrc": "3069:14:19",
                              "nodeType": "YulAssignment",
                              "src": "3069:14:19",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "3079:4:19",
                                "nodeType": "YulIdentifier",
                                "src": "3079:4:19"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "3069:6:19",
                                  "nodeType": "YulIdentifier",
                                  "src": "3069:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 2542,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3069:6:19",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2538,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3079:4:19",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 2544,
                        "nodeType": "InlineAssembly",
                        "src": "3030:63:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2536,
                    "nodeType": "StructuredDocumentation",
                    "src": "2848:85:19",
                    "text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
                  },
                  "id": 2546,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getInt256Slot",
                  "nameLocation": "2947:13:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2538,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "2969:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2546,
                        "src": "2961:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2537,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2961:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2960:14:19"
                  },
                  "returnParameters": {
                    "id": 2543,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2542,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3017:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2546,
                        "src": "2998:20:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Int256Slot_$2485_storage_ptr",
                          "typeString": "struct StorageSlot.Int256Slot"
                        },
                        "typeName": {
                          "id": 2541,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2540,
                            "name": "Int256Slot",
                            "nameLocations": [
                              "2998:10:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2485,
                            "src": "2998:10:19"
                          },
                          "referencedDeclaration": 2485,
                          "src": "2998:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Int256Slot_$2485_storage_ptr",
                            "typeString": "struct StorageSlot.Int256Slot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2997:22:19"
                  },
                  "scope": 2591,
                  "src": "2938:161:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2556,
                    "nodeType": "Block",
                    "src": "3277:79:19",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "3312:38:19",
                          "nodeType": "YulBlock",
                          "src": "3312:38:19",
                          "statements": [
                            {
                              "nativeSrc": "3326:14:19",
                              "nodeType": "YulAssignment",
                              "src": "3326:14:19",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "3336:4:19",
                                "nodeType": "YulIdentifier",
                                "src": "3336:4:19"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "3326:6:19",
                                  "nodeType": "YulIdentifier",
                                  "src": "3326:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 2553,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3326:6:19",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2549,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3336:4:19",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 2555,
                        "nodeType": "InlineAssembly",
                        "src": "3287:63:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2547,
                    "nodeType": "StructuredDocumentation",
                    "src": "3105:85:19",
                    "text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
                  },
                  "id": 2557,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStringSlot",
                  "nameLocation": "3204:13:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2550,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2549,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "3226:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2557,
                        "src": "3218:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2548,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3218:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3217:14:19"
                  },
                  "returnParameters": {
                    "id": 2554,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2553,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3274:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2557,
                        "src": "3255:20:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StringSlot_$2488_storage_ptr",
                          "typeString": "struct StorageSlot.StringSlot"
                        },
                        "typeName": {
                          "id": 2552,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2551,
                            "name": "StringSlot",
                            "nameLocations": [
                              "3255:10:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2488,
                            "src": "3255:10:19"
                          },
                          "referencedDeclaration": 2488,
                          "src": "3255:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StringSlot_$2488_storage_ptr",
                            "typeString": "struct StorageSlot.StringSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3254:22:19"
                  },
                  "scope": 2591,
                  "src": "3195:161:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2567,
                    "nodeType": "Block",
                    "src": "3558:85:19",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "3593:44:19",
                          "nodeType": "YulBlock",
                          "src": "3593:44:19",
                          "statements": [
                            {
                              "nativeSrc": "3607:20:19",
                              "nodeType": "YulAssignment",
                              "src": "3607:20:19",
                              "value": {
                                "name": "store.slot",
                                "nativeSrc": "3617:10:19",
                                "nodeType": "YulIdentifier",
                                "src": "3617:10:19"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "3607:6:19",
                                  "nodeType": "YulIdentifier",
                                  "src": "3607:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 2564,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3607:6:19",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2560,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3617:10:19",
                            "suffix": "slot",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 2566,
                        "nodeType": "InlineAssembly",
                        "src": "3568:69:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2558,
                    "nodeType": "StructuredDocumentation",
                    "src": "3362:101:19",
                    "text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
                  },
                  "id": 2568,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getStringSlot",
                  "nameLocation": "3477:13:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2560,
                        "mutability": "mutable",
                        "name": "store",
                        "nameLocation": "3506:5:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2568,
                        "src": "3491:20:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2559,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3491:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3490:22:19"
                  },
                  "returnParameters": {
                    "id": 2565,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2564,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3555:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2568,
                        "src": "3536:20:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StringSlot_$2488_storage_ptr",
                          "typeString": "struct StorageSlot.StringSlot"
                        },
                        "typeName": {
                          "id": 2563,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2562,
                            "name": "StringSlot",
                            "nameLocations": [
                              "3536:10:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2488,
                            "src": "3536:10:19"
                          },
                          "referencedDeclaration": 2488,
                          "src": "3536:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StringSlot_$2488_storage_ptr",
                            "typeString": "struct StorageSlot.StringSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3535:22:19"
                  },
                  "scope": 2591,
                  "src": "3468:175:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2578,
                    "nodeType": "Block",
                    "src": "3818:79:19",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "3853:38:19",
                          "nodeType": "YulBlock",
                          "src": "3853:38:19",
                          "statements": [
                            {
                              "nativeSrc": "3867:14:19",
                              "nodeType": "YulAssignment",
                              "src": "3867:14:19",
                              "value": {
                                "name": "slot",
                                "nativeSrc": "3877:4:19",
                                "nodeType": "YulIdentifier",
                                "src": "3877:4:19"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "3867:6:19",
                                  "nodeType": "YulIdentifier",
                                  "src": "3867:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 2575,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "3867:6:19",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2571,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "3877:4:19",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 2577,
                        "nodeType": "InlineAssembly",
                        "src": "3828:63:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2569,
                    "nodeType": "StructuredDocumentation",
                    "src": "3649:84:19",
                    "text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
                  },
                  "id": 2579,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBytesSlot",
                  "nameLocation": "3747:12:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2571,
                        "mutability": "mutable",
                        "name": "slot",
                        "nameLocation": "3768:4:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2579,
                        "src": "3760:12:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 2570,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:14:19"
                  },
                  "returnParameters": {
                    "id": 2576,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2575,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3815:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2579,
                        "src": "3797:19:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BytesSlot_$2491_storage_ptr",
                          "typeString": "struct StorageSlot.BytesSlot"
                        },
                        "typeName": {
                          "id": 2574,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2573,
                            "name": "BytesSlot",
                            "nameLocations": [
                              "3797:9:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2491,
                            "src": "3797:9:19"
                          },
                          "referencedDeclaration": 2491,
                          "src": "3797:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BytesSlot_$2491_storage_ptr",
                            "typeString": "struct StorageSlot.BytesSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3796:21:19"
                  },
                  "scope": 2591,
                  "src": "3738:159:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2589,
                    "nodeType": "Block",
                    "src": "4094:85:19",
                    "statements": [
                      {
                        "AST": {
                          "nativeSrc": "4129:44:19",
                          "nodeType": "YulBlock",
                          "src": "4129:44:19",
                          "statements": [
                            {
                              "nativeSrc": "4143:20:19",
                              "nodeType": "YulAssignment",
                              "src": "4143:20:19",
                              "value": {
                                "name": "store.slot",
                                "nativeSrc": "4153:10:19",
                                "nodeType": "YulIdentifier",
                                "src": "4153:10:19"
                              },
                              "variableNames": [
                                {
                                  "name": "r.slot",
                                  "nativeSrc": "4143:6:19",
                                  "nodeType": "YulIdentifier",
                                  "src": "4143:6:19"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 2586,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "4143:6:19",
                            "suffix": "slot",
                            "valueSize": 1
                          },
                          {
                            "declaration": 2582,
                            "isOffset": false,
                            "isSlot": true,
                            "src": "4153:10:19",
                            "suffix": "slot",
                            "valueSize": 1
                          }
                        ],
                        "flags": [
                          "memory-safe"
                        ],
                        "id": 2588,
                        "nodeType": "InlineAssembly",
                        "src": "4104:69:19"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2580,
                    "nodeType": "StructuredDocumentation",
                    "src": "3903:99:19",
                    "text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
                  },
                  "id": 2590,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBytesSlot",
                  "nameLocation": "4016:12:19",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2582,
                        "mutability": "mutable",
                        "name": "store",
                        "nameLocation": "4043:5:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2590,
                        "src": "4029:19:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 2581,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4029:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4028:21:19"
                  },
                  "returnParameters": {
                    "id": 2587,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2586,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "4091:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 2590,
                        "src": "4073:19:19",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BytesSlot_$2491_storage_ptr",
                          "typeString": "struct StorageSlot.BytesSlot"
                        },
                        "typeName": {
                          "id": 2585,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2584,
                            "name": "BytesSlot",
                            "nameLocations": [
                              "4073:9:19"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2491,
                            "src": "4073:9:19"
                          },
                          "referencedDeclaration": 2491,
                          "src": "4073:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BytesSlot_$2491_storage_ptr",
                            "typeString": "struct StorageSlot.BytesSlot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4072:21:19"
                  },
                  "scope": 2591,
                  "src": "4007:172:19",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2592,
              "src": "1407:2774:19",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "193:3989:19"
        },
        "id": 19
      },
      "contracts/DappToken.sol": {
        "ast": {
          "absolutePath": "contracts/DappToken.sol",
          "exportedSymbols": {
            "DappToken": [
              2630
            ],
            "ERC20": [
              2051
            ],
            "Ownable": [
              816
            ]
          },
          "id": 2631,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2593,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".22"
              ],
              "nodeType": "PragmaDirective",
              "src": "83:24:20"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 2595,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2631,
              "sourceUnit": 2052,
              "src": "111:68:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2594,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2051,
                    "src": "119:5:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2597,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2631,
              "sourceUnit": 817,
              "src": "181:67:20",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2596,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 816,
                    "src": "189:7:20",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2598,
                    "name": "ERC20",
                    "nameLocations": [
                      "274:5:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2051,
                    "src": "274:5:20"
                  },
                  "id": 2599,
                  "nodeType": "InheritanceSpecifier",
                  "src": "274:5:20"
                },
                {
                  "baseName": {
                    "id": 2600,
                    "name": "Ownable",
                    "nameLocations": [
                      "281:7:20"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 816,
                    "src": "281:7:20"
                  },
                  "id": 2601,
                  "nodeType": "InheritanceSpecifier",
                  "src": "281:7:20"
                }
              ],
              "canonicalName": "DappToken",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2630,
              "linearizedBaseContracts": [
                2630,
                816,
                2051,
                879,
                2155,
                2129,
                2445
              ],
              "name": "DappToken",
              "nameLocation": "261:9:20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2613,
                    "nodeType": "Block",
                    "src": "396:2:20",
                    "statements": []
                  },
                  "id": 2614,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4441707020546f6b656e",
                          "id": 2606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "352:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4bb1c77e58fe7915ae82d4848a9c7f3a9bd772743e283b0e9e22385825f37dce",
                            "typeString": "literal_string \"DApp Token\""
                          },
                          "value": "DApp Token"
                        },
                        {
                          "hexValue": "44415050",
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "366:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2f0440134a0794b969e8c19364bb3c2fbe91c99bfae2a18a4a19e46c2cead377",
                            "typeString": "literal_string \"DAPP\""
                          },
                          "value": "DAPP"
                        }
                      ],
                      "id": 2608,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2605,
                        "name": "ERC20",
                        "nameLocations": [
                          "346:5:20"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2051,
                        "src": "346:5:20"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "346:27:20"
                    },
                    {
                      "arguments": [
                        {
                          "id": 2610,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2603,
                          "src": "382:12:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2611,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2609,
                        "name": "Ownable",
                        "nameLocations": [
                          "374:7:20"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 816,
                        "src": "374:7:20"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "374:21:20"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2604,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2603,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "326:12:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2614,
                        "src": "318:20:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2602,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "318:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "307:38:20"
                  },
                  "returnParameters": {
                    "id": 2612,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "396:0:20"
                  },
                  "scope": 2630,
                  "src": "296:102:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2628,
                    "nodeType": "Block",
                    "src": "465:36:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2624,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2616,
                              "src": "482:2:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2625,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2618,
                              "src": "486:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2623,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1891,
                            "src": "476:5:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "476:17:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2627,
                        "nodeType": "ExpressionStatement",
                        "src": "476:17:20"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 2629,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2621,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2620,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "455:9:20"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 727,
                        "src": "455:9:20"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "455:9:20"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "415:4:20",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2619,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2616,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "428:2:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2629,
                        "src": "420:10:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2615,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:20",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2618,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "440:6:20",
                        "nodeType": "VariableDeclaration",
                        "scope": 2629,
                        "src": "432:14:20",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2617,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "432:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:28:20"
                  },
                  "returnParameters": {
                    "id": 2622,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "465:0:20"
                  },
                  "scope": 2630,
                  "src": "406:95:20",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2631,
              "src": "252:252:20",
              "usedErrors": [
                682,
                687,
                849,
                854,
                859,
                868,
                873,
                878
              ],
              "usedEvents": [
                693,
                2063,
                2072
              ]
            }
          ],
          "src": "83:421:20"
        },
        "id": 20
      },
      "contracts/LPToken.sol": {
        "ast": {
          "absolutePath": "contracts/LPToken.sol",
          "exportedSymbols": {
            "ERC20": [
              2051
            ],
            "LPToken": [
              2669
            ],
            "Ownable": [
              816
            ]
          },
          "id": 2670,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2632,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".22"
              ],
              "nodeType": "PragmaDirective",
              "src": "83:24:21"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 2634,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2670,
              "sourceUnit": 2052,
              "src": "111:68:21",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2633,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2051,
                    "src": "119:5:21",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 2636,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2670,
              "sourceUnit": 817,
              "src": "181:67:21",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2635,
                    "name": "Ownable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 816,
                    "src": "189:7:21",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2637,
                    "name": "ERC20",
                    "nameLocations": [
                      "272:5:21"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2051,
                    "src": "272:5:21"
                  },
                  "id": 2638,
                  "nodeType": "InheritanceSpecifier",
                  "src": "272:5:21"
                },
                {
                  "baseName": {
                    "id": 2639,
                    "name": "Ownable",
                    "nameLocations": [
                      "279:7:21"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 816,
                    "src": "279:7:21"
                  },
                  "id": 2640,
                  "nodeType": "InheritanceSpecifier",
                  "src": "279:7:21"
                }
              ],
              "canonicalName": "LPToken",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2669,
              "linearizedBaseContracts": [
                2669,
                816,
                2051,
                879,
                2155,
                2129,
                2445
              ],
              "name": "LPToken",
              "nameLocation": "261:7:21",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2652,
                    "nodeType": "Block",
                    "src": "391:2:21",
                    "statements": []
                  },
                  "id": 2653,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "4c5020546f6b656e",
                          "id": 2645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "350:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c285f7cfebd35a59cb5c0c032add67fdc80dcde2f8127cb94e4b49a72469ed02",
                            "typeString": "literal_string \"LP Token\""
                          },
                          "value": "LP Token"
                        },
                        {
                          "hexValue": "4c5054",
                          "id": 2646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "362:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_32e82afd8218e1d9053bf5b198b85ca1af3dff4739f28e3618abcbfacb818cfa",
                            "typeString": "literal_string \"LPT\""
                          },
                          "value": "LPT"
                        }
                      ],
                      "id": 2647,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2644,
                        "name": "ERC20",
                        "nameLocations": [
                          "344:5:21"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2051,
                        "src": "344:5:21"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "344:24:21"
                    },
                    {
                      "arguments": [
                        {
                          "id": 2649,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2642,
                          "src": "377:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2650,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2648,
                        "name": "Ownable",
                        "nameLocations": [
                          "369:7:21"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 816,
                        "src": "369:7:21"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "369:21:21"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2643,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2642,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "324:12:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2653,
                        "src": "316:20:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "316:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "305:38:21"
                  },
                  "returnParameters": {
                    "id": 2651,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:0:21"
                  },
                  "scope": 2669,
                  "src": "294:99:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2667,
                    "nodeType": "Block",
                    "src": "460:36:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2663,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2655,
                              "src": "477:2:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2664,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2657,
                              "src": "481:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2662,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1891,
                            "src": "471:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "471:17:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2666,
                        "nodeType": "ExpressionStatement",
                        "src": "471:17:21"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 2668,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2660,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2659,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "450:9:21"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 727,
                        "src": "450:9:21"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "450:9:21"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "410:4:21",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2658,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2655,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "423:2:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2668,
                        "src": "415:10:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2654,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "415:7:21",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2657,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "435:6:21",
                        "nodeType": "VariableDeclaration",
                        "scope": 2668,
                        "src": "427:14:21",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2656,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "414:28:21"
                  },
                  "returnParameters": {
                    "id": 2661,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "460:0:21"
                  },
                  "scope": 2669,
                  "src": "401:95:21",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2670,
              "src": "252:247:21",
              "usedErrors": [
                682,
                687,
                849,
                854,
                859,
                868,
                873,
                878
              ],
              "usedEvents": [
                693,
                2063,
                2072
              ]
            }
          ],
          "src": "83:416:21"
        },
        "id": 21
      },
      "contracts/Lock.sol": {
        "ast": {
          "absolutePath": "contracts/Lock.sol",
          "exportedSymbols": {
            "Lock": [
              2748
            ]
          },
          "id": 2749,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2671,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:22"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "Lock",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2748,
              "linearizedBaseContracts": [
                2748
              ],
              "name": "Lock",
              "nameLocation": "150:4:22",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "251c1aa3",
                  "id": 2673,
                  "mutability": "mutable",
                  "name": "unlockTime",
                  "nameLocation": "173:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2748,
                  "src": "161:22:22",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2672,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 2675,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "212:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 2748,
                  "src": "189:28:22",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 2674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "189:15:22",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "bf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b93",
                  "id": 2681,
                  "name": "Withdrawal",
                  "nameLocation": "230:10:22",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2680,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2677,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "246:6:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 2681,
                        "src": "241:11:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2676,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "241:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2679,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "when",
                        "nameLocation": "259:4:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 2681,
                        "src": "254:9:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2678,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "254:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "240:24:22"
                  },
                  "src": "224:41:22"
                },
                {
                  "body": {
                    "id": 2706,
                    "nodeType": "Block",
                    "src": "309:200:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2687,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "340:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2688,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "346:9:22",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "340:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 2689,
                                "name": "_unlockTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2683,
                                "src": "358:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "340:29:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "556e6c6f636b2074696d652073686f756c6420626520696e2074686520667574757265",
                              "id": 2691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "383:37:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413",
                                "typeString": "literal_string \"Unlock time should be in the future\""
                              },
                              "value": "Unlock time should be in the future"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413",
                                "typeString": "literal_string \"Unlock time should be in the future\""
                              }
                            ],
                            "id": 2686,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "319:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "319:111:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2693,
                        "nodeType": "ExpressionStatement",
                        "src": "319:111:22"
                      },
                      {
                        "expression": {
                          "id": 2696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2694,
                            "name": "unlockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2673,
                            "src": "441:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2695,
                            "name": "_unlockTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2683,
                            "src": "454:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "441:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2697,
                        "nodeType": "ExpressionStatement",
                        "src": "441:24:22"
                      },
                      {
                        "expression": {
                          "id": 2704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2698,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2675,
                            "src": "475:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 2701,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "491:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "495:6:22",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "491:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "483:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 2699,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "483:8:22",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2703,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "483:19:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "475:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 2705,
                        "nodeType": "ExpressionStatement",
                        "src": "475:27:22"
                      }
                    ]
                  },
                  "id": 2707,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2684,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2683,
                        "mutability": "mutable",
                        "name": "_unlockTime",
                        "nameLocation": "288:11:22",
                        "nodeType": "VariableDeclaration",
                        "scope": 2707,
                        "src": "283:16:22",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2682,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "283:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "282:18:22"
                  },
                  "returnParameters": {
                    "id": 2685,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "309:0:22"
                  },
                  "scope": 2748,
                  "src": "271:238:22",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2746,
                    "nodeType": "Block",
                    "src": "542:463:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2711,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "766:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "772:9:22",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "766:15:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 2713,
                                "name": "unlockTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2673,
                                "src": "785:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "766:29:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f752063616e277420776974686472617720796574",
                              "id": 2715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "797:24:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8",
                                "typeString": "literal_string \"You can't withdraw yet\""
                              },
                              "value": "You can't withdraw yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8",
                                "typeString": "literal_string \"You can't withdraw yet\""
                              }
                            ],
                            "id": 2710,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "758:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "758:64:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2717,
                        "nodeType": "ExpressionStatement",
                        "src": "758:64:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2719,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "840:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "844:6:22",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "840:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 2721,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2675,
                                "src": "854:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "840:19:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f75206172656e277420746865206f776e6572",
                              "id": 2723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "861:22:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a",
                                "typeString": "literal_string \"You aren't the owner\""
                              },
                              "value": "You aren't the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a",
                                "typeString": "literal_string \"You aren't the owner\""
                              }
                            ],
                            "id": 2718,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "832:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "832:52:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2725,
                        "nodeType": "ExpressionStatement",
                        "src": "832:52:22"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2729,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "919:4:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Lock_$2748",
                                      "typeString": "contract Lock"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Lock_$2748",
                                      "typeString": "contract Lock"
                                    }
                                  ],
                                  "id": 2728,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "911:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2727,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "911:7:22",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "911:13:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "925:7:22",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "911:21:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2732,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "934:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "940:9:22",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "934:15:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2726,
                            "name": "Withdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2681,
                            "src": "900:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 2734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "900:50:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2735,
                        "nodeType": "EmitStatement",
                        "src": "895:55:22"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2741,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "984:4:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Lock_$2748",
                                      "typeString": "contract Lock"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Lock_$2748",
                                      "typeString": "contract Lock"
                                    }
                                  ],
                                  "id": 2740,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "976:7:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2739,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "976:7:22",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2742,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "976:13:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 2743,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "990:7:22",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "976:21:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2736,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2675,
                              "src": "961:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 2738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "967:8:22",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "961:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "961:37:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2745,
                        "nodeType": "ExpressionStatement",
                        "src": "961:37:22"
                      }
                    ]
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 2747,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "524:8:22",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2708,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "532:2:22"
                  },
                  "returnParameters": {
                    "id": 2709,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "542:0:22"
                  },
                  "scope": 2748,
                  "src": "515:490:22",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2749,
              "src": "141:866:22",
              "usedErrors": [],
              "usedEvents": [
                2681
              ]
            }
          ],
          "src": "39:969:22"
        },
        "id": 22
      },
      "contracts/ProxyAdmin.sol": {
        "ast": {
          "absolutePath": "contracts/ProxyAdmin.sol",
          "exportedSymbols": {
            "ERC1967Proxy": [
              1012
            ],
            "ERC1967Utils": [
              1306
            ],
            "IERC1967": [
              837
            ],
            "ITransparentUpgradeableProxy": [
              1422
            ],
            "MyProxyAdmin": [
              2810
            ],
            "Ownable": [
              816
            ],
            "ProxyAdmin": [
              1400
            ],
            "TransparentUpgradeableProxy": [
              1536
            ]
          },
          "id": 2811,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2750,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".9"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:23"
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
              "file": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol",
              "id": 2751,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2811,
              "sourceUnit": 1401,
              "src": "60:66:23",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
              "file": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol",
              "id": 2752,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2811,
              "sourceUnit": 1537,
              "src": "128:83:23",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2753,
                    "name": "ProxyAdmin",
                    "nameLocations": [
                      "240:10:23"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1400,
                    "src": "240:10:23"
                  },
                  "id": 2754,
                  "nodeType": "InheritanceSpecifier",
                  "src": "240:10:23"
                }
              ],
              "canonicalName": "MyProxyAdmin",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2810,
              "linearizedBaseContracts": [
                2810,
                1400,
                816,
                2445
              ],
              "name": "MyProxyAdmin",
              "nameLocation": "224:12:23",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2762,
                    "nodeType": "Block",
                    "src": "317:2:23",
                    "statements": []
                  },
                  "id": 2763,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2759,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2756,
                          "src": "303:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 2760,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2758,
                        "name": "ProxyAdmin",
                        "nameLocations": [
                          "292:10:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1400,
                        "src": "292:10:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "292:24:23"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2757,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2756,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "278:12:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 2763,
                        "src": "270:20:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "270:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "269:22:23"
                  },
                  "returnParameters": {
                    "id": 2761,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "317:0:23"
                  },
                  "scope": 2810,
                  "src": "258:61:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2783,
                    "nodeType": "Block",
                    "src": "407:147:23",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2774,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2765,
                                  "src": "476:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2773,
                                "name": "ITransparentUpgradeableProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1422,
                                "src": "447:28:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$1422_$",
                                  "typeString": "type(contract ITransparentUpgradeableProxy)"
                                }
                              },
                              "id": 2775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "447:35:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$1422",
                                "typeString": "contract ITransparentUpgradeableProxy"
                              }
                            },
                            {
                              "id": 2776,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2767,
                              "src": "497:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "",
                                  "id": 2779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "532:2:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  },
                                  "value": ""
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                    "typeString": "literal_string \"\""
                                  }
                                ],
                                "id": 2778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "526:5:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 2777,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "526:5:23",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "526:9:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$1422",
                                "typeString": "contract ITransparentUpgradeableProxy"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2772,
                            "name": "upgradeAndCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1399,
                            "src": "418:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ITransparentUpgradeableProxy_$1422_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract ITransparentUpgradeableProxy,address,bytes memory)"
                            }
                          },
                          "id": 2781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "418:128:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2782,
                        "nodeType": "ExpressionStatement",
                        "src": "418:128:23"
                      }
                    ]
                  },
                  "functionSelector": "2af0b1f1",
                  "id": 2784,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2770,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2769,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "397:9:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 727,
                        "src": "397:9:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "397:9:23"
                    }
                  ],
                  "name": "upgradeProxy",
                  "nameLocation": "336:12:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2768,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2765,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "357:5:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 2784,
                        "src": "349:13:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "349:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2767,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "372:14:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 2784,
                        "src": "364:22:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2766,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "364:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "348:39:23"
                  },
                  "returnParameters": {
                    "id": 2771,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "407:0:23"
                  },
                  "scope": 2810,
                  "src": "327:227:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2808,
                    "nodeType": "Block",
                    "src": "655:214:23",
                    "statements": [
                      {
                        "assignments": [
                          2794
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2794,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "679:4:23",
                            "nodeType": "VariableDeclaration",
                            "scope": 2808,
                            "src": "666:17:23",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 2793,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "666:5:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2799,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "696e697469616c697a6556322829",
                              "id": 2797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "710:16:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5cd8a76b57f59ef0a354ea9738dbfe8b04a555b17ee5703c13e0040b8064c73d",
                                "typeString": "literal_string \"initializeV2()\""
                              },
                              "value": "initializeV2()"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_5cd8a76b57f59ef0a354ea9738dbfe8b04a555b17ee5703c13e0040b8064c73d",
                                "typeString": "literal_string \"initializeV2()\""
                              }
                            ],
                            "expression": {
                              "id": 2795,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "686:3:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 2796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "690:19:23",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "686:23:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 2798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "686:41:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "666:61:23"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2802,
                                  "name": "proxy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2786,
                                  "src": "796:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2801,
                                "name": "ITransparentUpgradeableProxy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1422,
                                "src": "767:28:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ITransparentUpgradeableProxy_$1422_$",
                                  "typeString": "type(contract ITransparentUpgradeableProxy)"
                                }
                              },
                              "id": 2803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "767:35:23",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$1422",
                                "typeString": "contract ITransparentUpgradeableProxy"
                              }
                            },
                            {
                              "id": 2804,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2788,
                              "src": "817:14:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2805,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2794,
                              "src": "846:4:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ITransparentUpgradeableProxy_$1422",
                                "typeString": "contract ITransparentUpgradeableProxy"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2800,
                            "name": "upgradeAndCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1399,
                            "src": "738:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ITransparentUpgradeableProxy_$1422_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract ITransparentUpgradeableProxy,address,bytes memory)"
                            }
                          },
                          "id": 2806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "738:123:23",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2807,
                        "nodeType": "ExpressionStatement",
                        "src": "738:123:23"
                      }
                    ]
                  },
                  "functionSelector": "c19421c8",
                  "id": 2809,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2791,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2790,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "645:9:23"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 727,
                        "src": "645:9:23"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "645:9:23"
                    }
                  ],
                  "name": "upgradeProxyAndInitialize",
                  "nameLocation": "571:25:23",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2786,
                        "mutability": "mutable",
                        "name": "proxy",
                        "nameLocation": "605:5:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 2809,
                        "src": "597:13:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2785,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "597:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2788,
                        "mutability": "mutable",
                        "name": "implementation",
                        "nameLocation": "620:14:23",
                        "nodeType": "VariableDeclaration",
                        "scope": 2809,
                        "src": "612:22:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2787,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "612:7:23",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "596:39:23"
                  },
                  "returnParameters": {
                    "id": 2792,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "655:0:23"
                  },
                  "scope": 2810,
                  "src": "562:307:23",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2811,
              "src": "215:657:23",
              "usedErrors": [
                682,
                687
              ],
              "usedEvents": [
                693
              ]
            }
          ],
          "src": "33:841:23"
        },
        "id": 23
      },
      "contracts/TokenFarm.sol": {
        "ast": {
          "absolutePath": "contracts/TokenFarm.sol",
          "exportedSymbols": {
            "ContextUpgradeable": [
              508
            ],
            "DappToken": [
              2630
            ],
            "ERC20": [
              2051
            ],
            "FarmState": [
              2821
            ],
            "IRewardStrategy": [
              2839
            ],
            "Initializable": [
              462
            ],
            "LPToken": [
              2669
            ],
            "Ownable": [
              816
            ],
            "OwnableUpgradeable": [
              194
            ],
            "PausableUpgradeable": [
              668
            ],
            "ProportionalVariableStrategy": [
              2905
            ],
            "SafeMath": [
              4445
            ],
            "TokenFarm": [
              4344
            ]
          },
          "id": 4446,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2812,
              "literals": [
                "solidity",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:24"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "id": 2813,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4446,
              "sourceUnit": 463,
              "src": "60:75:24",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
              "id": 2814,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4446,
              "sourceUnit": 195,
              "src": "137:75:24",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
              "file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
              "id": 2815,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4446,
              "sourceUnit": 669,
              "src": "214:75:24",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/DappToken.sol",
              "file": "./DappToken.sol",
              "id": 2816,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4446,
              "sourceUnit": 2631,
              "src": "291:25:24",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/LPToken.sol",
              "file": "./LPToken.sol",
              "id": 2817,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 4446,
              "sourceUnit": 2670,
              "src": "318:23:24",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "canonicalName": "FarmState",
              "id": 2821,
              "members": [
                {
                  "id": 2818,
                  "name": "ACTIVE",
                  "nameLocation": "362:6:24",
                  "nodeType": "EnumValue",
                  "src": "362:6:24"
                },
                {
                  "id": 2819,
                  "name": "PAUSED",
                  "nameLocation": "370:6:24",
                  "nodeType": "EnumValue",
                  "src": "370:6:24"
                },
                {
                  "id": 2820,
                  "name": "EMERGENCY_STOP",
                  "nameLocation": "378:14:24",
                  "nodeType": "EnumValue",
                  "src": "378:14:24"
                }
              ],
              "name": "FarmState",
              "nameLocation": "350:9:24",
              "nodeType": "EnumDefinition",
              "src": "345:49:24"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IRewardStrategy",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2839,
              "linearizedBaseContracts": [
                2839
              ],
              "name": "IRewardStrategy",
              "nameLocation": "408:15:24",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "a0acbec3",
                  "id": 2838,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateReward",
                  "nameLocation": "440:15:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2823,
                        "mutability": "mutable",
                        "name": "blocks",
                        "nameLocation": "474:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2838,
                        "src": "466:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2822,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "466:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2825,
                        "mutability": "mutable",
                        "name": "userBalance",
                        "nameLocation": "499:11:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2838,
                        "src": "491:19:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2824,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "491:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2827,
                        "mutability": "mutable",
                        "name": "totalBalance",
                        "nameLocation": "529:12:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2838,
                        "src": "521:20:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2826,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "521:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2829,
                        "mutability": "mutable",
                        "name": "minReward",
                        "nameLocation": "560:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2838,
                        "src": "552:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2828,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "552:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2831,
                        "mutability": "mutable",
                        "name": "maxReward",
                        "nameLocation": "588:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2838,
                        "src": "580:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2830,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "580:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2833,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "616:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2838,
                        "src": "608:12:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2832,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "608:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "455:172:24"
                  },
                  "returnParameters": {
                    "id": 2837,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2836,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2838,
                        "src": "651:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2835,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "651:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "650:9:24"
                  },
                  "scope": 2839,
                  "src": "431:229:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4446,
              "src": "398:265:24",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2840,
                    "name": "IRewardStrategy",
                    "nameLocations": [
                      "708:15:24"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2839,
                    "src": "708:15:24"
                  },
                  "id": 2841,
                  "nodeType": "InheritanceSpecifier",
                  "src": "708:15:24"
                }
              ],
              "canonicalName": "ProportionalVariableStrategy",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2905,
              "linearizedBaseContracts": [
                2905,
                2839
              ],
              "name": "ProportionalVariableStrategy",
              "nameLocation": "676:28:24",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    2838
                  ],
                  "body": {
                    "id": 2903,
                    "nodeType": "Block",
                    "src": "966:322:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2858,
                              "name": "totalBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2847,
                              "src": "981:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "997:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "981:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2861,
                              "name": "userBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2845,
                              "src": "1002:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1017:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "1002:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "981:37:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2867,
                        "nodeType": "IfStatement",
                        "src": "977:51:24",
                        "trueBody": {
                          "expression": {
                            "hexValue": "30",
                            "id": 2865,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1027:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 2857,
                          "id": 2866,
                          "nodeType": "Return",
                          "src": "1020:8:24"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2868,
                            "name": "blocks",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2843,
                            "src": "1053:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "316536",
                            "id": 2869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1062:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          },
                          "src": "1053:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2875,
                        "nodeType": "IfStatement",
                        "src": "1049:30:24",
                        "trueBody": {
                          "expression": {
                            "id": 2873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2871,
                              "name": "blocks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2843,
                              "src": "1067:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "316536",
                              "id": 2872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1076:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000_by_1",
                                "typeString": "int_const 1000000"
                              },
                              "value": "1e6"
                            },
                            "src": "1067:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2874,
                          "nodeType": "ExpressionStatement",
                          "src": "1067:12:24"
                        }
                      },
                      {
                        "assignments": [
                          2877
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2877,
                            "mutability": "mutable",
                            "name": "share",
                            "nameLocation": "1108:5:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 2903,
                            "src": "1100:13:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2876,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1100:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2884,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2878,
                                  "name": "userBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2845,
                                  "src": "1117:11:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 2879,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1131:4:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "1117:18:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2881,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1116:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 2882,
                            "name": "totalBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2847,
                            "src": "1139:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1116:35:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1100:51:24"
                      },
                      {
                        "assignments": [
                          2886
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2886,
                            "mutability": "mutable",
                            "name": "averageReward",
                            "nameLocation": "1170:13:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 2903,
                            "src": "1162:21:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2885,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1162:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2893,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2887,
                                  "name": "minReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2849,
                                  "src": "1187:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 2888,
                                  "name": "maxReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2851,
                                  "src": "1199:9:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1187:21:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2890,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1186:23:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 2891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1212:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "1186:27:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1162:51:24"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2896,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2894,
                                    "name": "averageReward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2886,
                                    "src": "1242:13:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2895,
                                    "name": "blocks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2843,
                                    "src": "1258:6:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1242:22:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 2897,
                                  "name": "share",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2877,
                                  "src": "1267:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1242:30:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2899,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "1241:32:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 2900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1276:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "1241:39:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2857,
                        "id": 2902,
                        "nodeType": "Return",
                        "src": "1234:46:24"
                      }
                    ]
                  },
                  "functionSelector": "a0acbec3",
                  "id": 2904,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateReward",
                  "nameLocation": "740:15:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2854,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2843,
                        "mutability": "mutable",
                        "name": "blocks",
                        "nameLocation": "774:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2904,
                        "src": "766:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2842,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "766:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2845,
                        "mutability": "mutable",
                        "name": "userBalance",
                        "nameLocation": "799:11:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2904,
                        "src": "791:19:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2844,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "791:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2847,
                        "mutability": "mutable",
                        "name": "totalBalance",
                        "nameLocation": "829:12:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2904,
                        "src": "821:20:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2846,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2849,
                        "mutability": "mutable",
                        "name": "minReward",
                        "nameLocation": "860:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2904,
                        "src": "852:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2848,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "852:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2851,
                        "mutability": "mutable",
                        "name": "maxReward",
                        "nameLocation": "888:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2904,
                        "src": "880:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2850,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "880:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2853,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2904,
                        "src": "908:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2852,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "908:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "755:178:24"
                  },
                  "returnParameters": {
                    "id": 2857,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2856,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2904,
                        "src": "957:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2855,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "957:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "956:9:24"
                  },
                  "scope": 2905,
                  "src": "731:557:24",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4446,
              "src": "667:624:24",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2907,
                    "name": "Initializable",
                    "nameLocations": [
                      "1459:13:24"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 462,
                    "src": "1459:13:24"
                  },
                  "id": 2908,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1459:13:24"
                },
                {
                  "baseName": {
                    "id": 2909,
                    "name": "OwnableUpgradeable",
                    "nameLocations": [
                      "1474:18:24"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 194,
                    "src": "1474:18:24"
                  },
                  "id": 2910,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1474:18:24"
                },
                {
                  "baseName": {
                    "id": 2911,
                    "name": "PausableUpgradeable",
                    "nameLocations": [
                      "1494:19:24"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 668,
                    "src": "1494:19:24"
                  },
                  "id": 2912,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1494:19:24"
                }
              ],
              "canonicalName": "TokenFarm",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2906,
                "nodeType": "StructuredDocumentation",
                "src": "1295:140:24",
                "text": " @title TokenFarm\n @dev Contrato de farming de tokens con sistema de recompensas configurable\n @author Mauricio R Ferreyra"
              },
              "fullyImplemented": true,
              "id": 4344,
              "linearizedBaseContracts": [
                4344,
                668,
                194,
                508,
                462
              ],
              "name": "TokenFarm",
              "nameLocation": "1446:9:24",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 2915,
                  "libraryName": {
                    "id": 2913,
                    "name": "SafeMath",
                    "nameLocations": [
                      "1527:8:24"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4445,
                    "src": "1527:8:24"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "1521:27:24",
                  "typeName": {
                    "id": 2914,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1540:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": true,
                  "functionSelector": "06fdde03",
                  "id": 2918,
                  "mutability": "constant",
                  "name": "name",
                  "nameLocation": "1583:4:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "1560:55:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2916,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1560:6:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "50726f706f7274696f6e616c20546f6b656e204661726d",
                    "id": 2917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1590:25:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_93b4f6902721e6343c7054d584054c0ca4566ed1ef7e24fdd31ed87270a9e438",
                      "typeString": "literal_string \"Proportional Token Farm\""
                    },
                    "value": "Proportional Token Farm"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ce2040c8",
                  "id": 2921,
                  "mutability": "mutable",
                  "name": "farmState",
                  "nameLocation": "1682:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "1665:26:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_FarmState_$2821",
                    "typeString": "enum FarmState"
                  },
                  "typeName": {
                    "id": 2920,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2919,
                      "name": "FarmState",
                      "nameLocations": [
                        "1665:9:24"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2821,
                      "src": "1665:9:24"
                    },
                    "referencedDeclaration": 2821,
                    "src": "1665:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_FarmState_$2821",
                      "typeString": "enum FarmState"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5eb186f8",
                  "id": 2924,
                  "mutability": "mutable",
                  "name": "dappToken",
                  "nameLocation": "1768:9:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "1751:26:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_DappToken_$2630",
                    "typeString": "contract DappToken"
                  },
                  "typeName": {
                    "id": 2923,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2922,
                      "name": "DappToken",
                      "nameLocations": [
                        "1751:9:24"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2630,
                      "src": "1751:9:24"
                    },
                    "referencedDeclaration": 2630,
                    "src": "1751:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_DappToken_$2630",
                      "typeString": "contract DappToken"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5fcbd285",
                  "id": 2927,
                  "mutability": "mutable",
                  "name": "lpToken",
                  "nameLocation": "1822:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "1807:22:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LPToken_$2669",
                    "typeString": "contract LPToken"
                  },
                  "typeName": {
                    "id": 2926,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2925,
                      "name": "LPToken",
                      "nameLocations": [
                        "1807:7:24"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2669,
                      "src": "1807:7:24"
                    },
                    "referencedDeclaration": 2669,
                    "src": "1807:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LPToken_$2669",
                      "typeString": "contract LPToken"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "44c4aea9",
                  "id": 2930,
                  "mutability": "mutable",
                  "name": "rewardStrategy",
                  "nameLocation": "1882:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "1859:37:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                    "typeString": "contract IRewardStrategy"
                  },
                  "typeName": {
                    "id": 2929,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2928,
                      "name": "IRewardStrategy",
                      "nameLocations": [
                        "1859:15:24"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2839,
                      "src": "1859:15:24"
                    },
                    "referencedDeclaration": 2839,
                    "src": "1859:15:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                      "typeString": "contract IRewardStrategy"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "TokenFarm.RewardConfig",
                  "id": 2939,
                  "members": [
                    {
                      "constant": false,
                      "id": 2932,
                      "mutability": "mutable",
                      "name": "minPerBlock",
                      "nameLocation": "1975:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2939,
                      "src": "1967:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2931,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1967:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2934,
                      "mutability": "mutable",
                      "name": "maxPerBlock",
                      "nameLocation": "2005:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2939,
                      "src": "1997:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2933,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1997:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2936,
                      "mutability": "mutable",
                      "name": "feePercent",
                      "nameLocation": "2035:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2939,
                      "src": "2027:18:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2935,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2027:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2938,
                      "mutability": "mutable",
                      "name": "lastUpdate",
                      "nameLocation": "2064:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2939,
                      "src": "2056:18:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2937,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2056:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RewardConfig",
                  "nameLocation": "1943:12:24",
                  "nodeType": "StructDefinition",
                  "scope": 4344,
                  "src": "1936:146:24",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "4e94c285",
                  "id": 2942,
                  "mutability": "mutable",
                  "name": "rewardConfig",
                  "nameLocation": "2114:12:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2094:32:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                    "typeString": "struct TokenFarm.RewardConfig"
                  },
                  "typeName": {
                    "id": 2941,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2940,
                      "name": "RewardConfig",
                      "nameLocations": [
                        "2094:12:24"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2939,
                      "src": "2094:12:24"
                    },
                    "referencedDeclaration": 2939,
                    "src": "2094:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardConfig_$2939_storage_ptr",
                      "typeString": "struct TokenFarm.RewardConfig"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e766c835",
                  "id": 2944,
                  "mutability": "mutable",
                  "name": "totalStakingBalance",
                  "nameLocation": "2148:19:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2133:34:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9003adfe",
                  "id": 2946,
                  "mutability": "mutable",
                  "name": "collectedFees",
                  "nameLocation": "2189:13:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2174:28:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2174:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ee172546",
                  "id": 2948,
                  "mutability": "mutable",
                  "name": "totalRewardsDistributed",
                  "nameLocation": "2224:23:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2209:38:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2209:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b507d70f",
                  "id": 2950,
                  "mutability": "mutable",
                  "name": "farmStartBlock",
                  "nameLocation": "2269:14:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2254:29:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2949,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "TokenFarm.Staker",
                  "id": 2965,
                  "members": [
                    {
                      "constant": false,
                      "id": 2952,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2349:7:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2965,
                      "src": "2341:15:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2951,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2341:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2954,
                      "mutability": "mutable",
                      "name": "checkpoint",
                      "nameLocation": "2375:10:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2965,
                      "src": "2367:18:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2953,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2367:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2956,
                      "mutability": "mutable",
                      "name": "pendingRewards",
                      "nameLocation": "2404:14:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2965,
                      "src": "2396:22:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2955,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2396:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2958,
                      "mutability": "mutable",
                      "name": "totalClaimed",
                      "nameLocation": "2437:12:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2965,
                      "src": "2429:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2957,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2429:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2960,
                      "mutability": "mutable",
                      "name": "depositTimestamp",
                      "nameLocation": "2468:16:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2965,
                      "src": "2460:24:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2959,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2460:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2962,
                      "mutability": "mutable",
                      "name": "hasStaked",
                      "nameLocation": "2500:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2965,
                      "src": "2495:14:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2961,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2495:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2964,
                      "mutability": "mutable",
                      "name": "isStaking",
                      "nameLocation": "2525:9:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 2965,
                      "src": "2520:14:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2963,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2520:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Staker",
                  "nameLocation": "2323:6:24",
                  "nodeType": "StructDefinition",
                  "scope": 4344,
                  "src": "2316:226:24",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fd5e6dd1",
                  "id": 2968,
                  "mutability": "mutable",
                  "name": "stakers",
                  "nameLocation": "2567:7:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2550:24:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2966,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2550:7:24",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2967,
                    "nodeType": "ArrayTypeName",
                    "src": "2550:9:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "acb422c5",
                  "id": 2973,
                  "mutability": "mutable",
                  "name": "stakersData",
                  "nameLocation": "2615:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2581:45:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                    "typeString": "mapping(address => struct TokenFarm.Staker)"
                  },
                  "typeName": {
                    "id": 2972,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2969,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2589:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2581:26:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                      "typeString": "mapping(address => struct TokenFarm.Staker)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2971,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2970,
                        "name": "Staker",
                        "nameLocations": [
                          "2600:6:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2965,
                        "src": "2600:6:24"
                      },
                      "referencedDeclaration": 2965,
                      "src": "2600:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                        "typeString": "struct TokenFarm.Staker"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "78d60a5b",
                  "id": 2977,
                  "mutability": "mutable",
                  "name": "stakerIndex",
                  "nameLocation": "2668:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2633:46:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 2976,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 2974,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2641:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2633:27:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 2975,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2652:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "910956aa",
                  "id": 2980,
                  "mutability": "constant",
                  "name": "MAX_STAKERS",
                  "nameLocation": "2743:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2719:43:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2978,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2719:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130303030",
                    "id": 2979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2757:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "e1e158a5",
                  "id": 2983,
                  "mutability": "constant",
                  "name": "MIN_DEPOSIT",
                  "nameLocation": "2793:11:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2769:42:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2769:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31653135",
                    "id": 2982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2807:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000_by_1",
                      "typeString": "int_const 1000000000000000"
                    },
                    "value": "1e15"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "67d81740",
                  "id": 2986,
                  "mutability": "constant",
                  "name": "MAX_FEE_PERCENT",
                  "nameLocation": "2842:15:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2818:44:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2818:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3530",
                    "id": 2985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2860:2:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50_by_1",
                      "typeString": "int_const 50"
                    },
                    "value": "50"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3fd8b02f",
                  "id": 2988,
                  "mutability": "mutable",
                  "name": "lockPeriod",
                  "nameLocation": "2884:10:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2869:25:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2869:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5747e69f",
                  "id": 2990,
                  "mutability": "mutable",
                  "name": "emergencyWithdrawEnabled",
                  "nameLocation": "2913:24:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 4344,
                  "src": "2901:36:24",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2989,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2901:4:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
                  "id": 2998,
                  "name": "Deposit",
                  "nameLocation": "2976:7:24",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2997,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2992,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3000:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2998,
                        "src": "2984:20:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2991,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2984:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2994,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3014:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2998,
                        "src": "3006:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2993,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3006:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2996,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "3030:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 2998,
                        "src": "3022:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2995,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3022:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2983:57:24"
                  },
                  "src": "2970:71:24"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
                  "id": 3006,
                  "name": "Withdraw",
                  "nameLocation": "3053:8:24",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3005,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3000,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3078:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3006,
                        "src": "3062:20:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2999,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3062:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3002,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3092:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3006,
                        "src": "3084:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3001,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3084:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3004,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "3108:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3006,
                        "src": "3100:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3003,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3100:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3061:57:24"
                  },
                  "src": "3047:72:24"
                },
                {
                  "anonymous": false,
                  "eventSelector": "dacbdde355ba930696a362ea6738feb9f8bd52dfb3d81947558fd3217e23e325",
                  "id": 3014,
                  "name": "RewardsClaimed",
                  "nameLocation": "3131:14:24",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3013,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3008,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "3162:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3014,
                        "src": "3146:20:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3007,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3146:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3010,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "netAmount",
                        "nameLocation": "3176:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3014,
                        "src": "3168:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3009,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3168:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3012,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "3195:3:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3014,
                        "src": "3187:11:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3011,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3187:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3145:54:24"
                  },
                  "src": "3125:75:24"
                },
                {
                  "anonymous": false,
                  "eventSelector": "6ae8ee960d83517f7fa993ad7a0e16e33d9655a23ff41eefc62bdb289c7a8e5f",
                  "id": 3022,
                  "name": "RewardsDistributed",
                  "nameLocation": "3212:18:24",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3021,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3016,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalUsers",
                        "nameLocation": "3239:10:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3022,
                        "src": "3231:18:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3015,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3231:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3018,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "totalAmount",
                        "nameLocation": "3259:11:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3022,
                        "src": "3251:19:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3017,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3251:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3020,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "3280:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3022,
                        "src": "3272:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3019,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3272:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3230:60:24"
                  },
                  "src": "3206:85:24"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d9787bf70d3926a4a81c52cba8799d18903ce0132aaa4b7de9e92dc893303a7f",
                  "id": 3028,
                  "name": "FeesWithdrawn",
                  "nameLocation": "3303:13:24",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3027,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3024,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3325:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3028,
                        "src": "3317:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3023,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3317:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3026,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "3341:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3028,
                        "src": "3333:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3025,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3316:35:24"
                  },
                  "src": "3297:55:24"
                },
                {
                  "anonymous": false,
                  "eventSelector": "81376037ed87033d6b5601a7c8806a8a7a2649525c23fe62315eb82c39c7e247",
                  "id": 3036,
                  "name": "RewardConfigUpdated",
                  "nameLocation": "3364:19:24",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3035,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3030,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "min",
                        "nameLocation": "3392:3:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3036,
                        "src": "3384:11:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3029,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3384:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3032,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "max",
                        "nameLocation": "3405:3:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3036,
                        "src": "3397:11:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3031,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3397:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3034,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "3418:3:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3036,
                        "src": "3410:11:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3033,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3410:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3383:39:24"
                  },
                  "src": "3358:65:24"
                },
                {
                  "anonymous": false,
                  "eventSelector": "e8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d8",
                  "id": 3044,
                  "name": "StateChanged",
                  "nameLocation": "3435:12:24",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3043,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3039,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldState",
                        "nameLocation": "3458:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3044,
                        "src": "3448:18:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_FarmState_$2821",
                          "typeString": "enum FarmState"
                        },
                        "typeName": {
                          "id": 3038,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3037,
                            "name": "FarmState",
                            "nameLocations": [
                              "3448:9:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2821,
                            "src": "3448:9:24"
                          },
                          "referencedDeclaration": 2821,
                          "src": "3448:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3042,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newState",
                        "nameLocation": "3478:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3044,
                        "src": "3468:18:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_FarmState_$2821",
                          "typeString": "enum FarmState"
                        },
                        "typeName": {
                          "id": 3041,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3040,
                            "name": "FarmState",
                            "nameLocations": [
                              "3468:9:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2821,
                            "src": "3468:9:24"
                          },
                          "referencedDeclaration": 2821,
                          "src": "3468:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3447:40:24"
                  },
                  "src": "3429:59:24"
                },
                {
                  "anonymous": false,
                  "eventSelector": "e4cec16b1a7e6b7979e923da619a8b1e5fd0f0fb6e5c1cf647f350430ee61ca9",
                  "id": 3050,
                  "name": "StrategyUpdated",
                  "nameLocation": "3500:15:24",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3049,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3046,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldStrategy",
                        "nameLocation": "3524:11:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3050,
                        "src": "3516:19:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3045,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3516:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3048,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newStrategy",
                        "nameLocation": "3545:11:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3050,
                        "src": "3537:19:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3047,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3537:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3515:42:24"
                  },
                  "src": "3494:64:24"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1e8ac57e9803840915f0284b77b570a882fb2db69108ac8eba578bb30fcaf152",
                  "id": 3054,
                  "name": "EmergencyStop",
                  "nameLocation": "3570:13:24",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3053,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3052,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "3592:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3054,
                        "src": "3584:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3051,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3584:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3583:19:24"
                  },
                  "src": "3564:39:24"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5dd7b309b7bc5010d9c96159ee535a428121d6803cb847792402fffccaf1569a",
                  "id": 3060,
                  "name": "LockPeriodUpdated",
                  "nameLocation": "3615:17:24",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 3059,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3056,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "oldPeriod",
                        "nameLocation": "3641:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3060,
                        "src": "3633:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3055,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3633:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3058,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newPeriod",
                        "nameLocation": "3660:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3060,
                        "src": "3652:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3057,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3652:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3632:38:24"
                  },
                  "src": "3609:62:24"
                },
                {
                  "errorSelector": "87ee466e",
                  "id": 3062,
                  "name": "TokenFarm__OnlyOwner",
                  "nameLocation": "3709:20:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3061,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3729:2:24"
                  },
                  "src": "3703:29:24"
                },
                {
                  "errorSelector": "27b95979",
                  "id": 3064,
                  "name": "TokenFarm__NotStaking",
                  "nameLocation": "3744:21:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3063,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3765:2:24"
                  },
                  "src": "3738:30:24"
                },
                {
                  "errorSelector": "acc93182",
                  "id": 3066,
                  "name": "TokenFarm__FarmStopped",
                  "nameLocation": "3780:22:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3065,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3802:2:24"
                  },
                  "src": "3774:31:24"
                },
                {
                  "errorSelector": "686b0ebe",
                  "id": 3068,
                  "name": "TokenFarm__EmergencyStop",
                  "nameLocation": "3817:24:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3067,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3841:2:24"
                  },
                  "src": "3811:33:24"
                },
                {
                  "errorSelector": "8339c1ad",
                  "id": 3070,
                  "name": "TokenFarm__InvalidAmount",
                  "nameLocation": "3856:24:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3069,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3880:2:24"
                  },
                  "src": "3850:33:24"
                },
                {
                  "errorSelector": "e6c72860",
                  "id": 3072,
                  "name": "TokenFarm__NoRewards",
                  "nameLocation": "3895:20:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3071,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3915:2:24"
                  },
                  "src": "3889:29:24"
                },
                {
                  "errorSelector": "79f01141",
                  "id": 3074,
                  "name": "TokenFarm__NoFees",
                  "nameLocation": "3930:17:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3073,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3947:2:24"
                  },
                  "src": "3924:26:24"
                },
                {
                  "errorSelector": "f45377a9",
                  "id": 3076,
                  "name": "TokenFarm__TransferFailed",
                  "nameLocation": "3962:25:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3075,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3987:2:24"
                  },
                  "src": "3956:34:24"
                },
                {
                  "errorSelector": "4f26e789",
                  "id": 3078,
                  "name": "TokenFarm__MaxStakersReached",
                  "nameLocation": "4002:28:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3077,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4030:2:24"
                  },
                  "src": "3996:37:24"
                },
                {
                  "errorSelector": "1958598b",
                  "id": 3080,
                  "name": "TokenFarm__StillLocked",
                  "nameLocation": "4045:22:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3079,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4067:2:24"
                  },
                  "src": "4039:31:24"
                },
                {
                  "errorSelector": "699c5904",
                  "id": 3082,
                  "name": "TokenFarm__InvalidConfiguration",
                  "nameLocation": "4082:31:24",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 3081,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4113:2:24"
                  },
                  "src": "4076:40:24"
                },
                {
                  "body": {
                    "id": 3089,
                    "nodeType": "Block",
                    "src": "4192:41:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3086,
                            "name": "_disableInitializers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "4203:20:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4203:22:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3088,
                        "nodeType": "ExpressionStatement",
                        "src": "4203:22:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3083,
                    "nodeType": "StructuredDocumentation",
                    "src": "4124:48:24",
                    "text": "@custom:oz-upgrades-unsafe-allow constructor"
                  },
                  "id": 3090,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3084,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4189:2:24"
                  },
                  "returnParameters": {
                    "id": 3085,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4192:0:24"
                  },
                  "scope": 4344,
                  "src": "4178:55:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3107,
                    "nodeType": "Block",
                    "src": "4309:109:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3098,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3092,
                              "src": "4335:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3097,
                            "name": "__Ownable_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54,
                            "src": "4320:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 3099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4320:22:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3100,
                        "nodeType": "ExpressionStatement",
                        "src": "4320:22:24"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3101,
                            "name": "__Pausable_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "4354:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4354:17:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3103,
                        "nodeType": "ExpressionStatement",
                        "src": "4354:17:24"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3104,
                            "name": "__TokenFarm_init_unchained",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3138,
                            "src": "4382:26:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 3105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4382:28:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3106,
                        "nodeType": "ExpressionStatement",
                        "src": "4382:28:24"
                      }
                    ]
                  },
                  "id": 3108,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3095,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3094,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "4292:16:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "4292:16:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4292:16:24"
                    }
                  ],
                  "name": "__TokenFarm_init",
                  "nameLocation": "4250:16:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3092,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "4275:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3108,
                        "src": "4267:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3091,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4267:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4266:16:24"
                  },
                  "returnParameters": {
                    "id": 3096,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4309:0:24"
                  },
                  "scope": 4344,
                  "src": "4241:177:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3137,
                    "nodeType": "Block",
                    "src": "4490:380:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 3116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3113,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "4557:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3114,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "4569:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4579:6:24",
                            "memberName": "ACTIVE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2818,
                            "src": "4569:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "4557:28:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          }
                        },
                        "id": 3117,
                        "nodeType": "ExpressionStatement",
                        "src": "4557:28:24"
                      },
                      {
                        "expression": {
                          "id": 3121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3118,
                            "name": "farmStartBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2950,
                            "src": "4596:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3119,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4613:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3120,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4619:6:24",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "4613:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4596:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3122,
                        "nodeType": "ExpressionStatement",
                        "src": "4596:29:24"
                      },
                      {
                        "expression": {
                          "id": 3125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3123,
                            "name": "emergencyWithdrawEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "4636:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4663:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4636:31:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3126,
                        "nodeType": "ExpressionStatement",
                        "src": "4636:31:24"
                      },
                      {
                        "expression": {
                          "id": 3135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3127,
                            "name": "rewardConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2942,
                            "src": "4688:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                              "typeString": "struct TokenFarm.RewardConfig storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "31653137",
                                "id": 3129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4744:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                },
                                "value": "1e17"
                              },
                              {
                                "hexValue": "31653138",
                                "id": 3130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4776:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              {
                                "hexValue": "32",
                                "id": 3131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4807:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              {
                                "expression": {
                                  "id": 3132,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "4835:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4841:9:24",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "4835:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 3128,
                              "name": "RewardConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2939,
                              "src": "4703:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_RewardConfig_$2939_storage_ptr_$",
                                "typeString": "type(struct TokenFarm.RewardConfig storage pointer)"
                              }
                            },
                            "id": 3134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "4731:11:24",
                              "4763:11:24",
                              "4795:10:24",
                              "4823:10:24"
                            ],
                            "names": [
                              "minPerBlock",
                              "maxPerBlock",
                              "feePercent",
                              "lastUpdate"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "4703:159:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardConfig_$2939_memory_ptr",
                              "typeString": "struct TokenFarm.RewardConfig memory"
                            }
                          },
                          "src": "4688:174:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                            "typeString": "struct TokenFarm.RewardConfig storage ref"
                          }
                        },
                        "id": 3136,
                        "nodeType": "ExpressionStatement",
                        "src": "4688:174:24"
                      }
                    ]
                  },
                  "id": 3138,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3111,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3110,
                        "name": "onlyInitializing",
                        "nameLocations": [
                          "4473:16:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 357,
                        "src": "4473:16:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4473:16:24"
                    }
                  ],
                  "name": "__TokenFarm_init_unchained",
                  "nameLocation": "4435:26:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3109,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4461:2:24"
                  },
                  "returnParameters": {
                    "id": 3112,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4490:0:24"
                  },
                  "scope": 4344,
                  "src": "4426:444:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3177,
                    "nodeType": "Block",
                    "src": "5118:291:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3152,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3146,
                              "src": "5146:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3151,
                            "name": "__TokenFarm_init",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3108,
                            "src": "5129:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 3153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5129:24:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3154,
                        "nodeType": "ExpressionStatement",
                        "src": "5129:24:24"
                      },
                      {
                        "expression": {
                          "id": 3159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3155,
                            "name": "dappToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2924,
                            "src": "5198:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DappToken_$2630",
                              "typeString": "contract DappToken"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3157,
                                "name": "_dappToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3140,
                                "src": "5220:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3156,
                              "name": "DappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2630,
                              "src": "5210:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_DappToken_$2630_$",
                                "typeString": "type(contract DappToken)"
                              }
                            },
                            "id": 3158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5210:21:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DappToken_$2630",
                              "typeString": "contract DappToken"
                            }
                          },
                          "src": "5198:33:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_DappToken_$2630",
                            "typeString": "contract DappToken"
                          }
                        },
                        "id": 3160,
                        "nodeType": "ExpressionStatement",
                        "src": "5198:33:24"
                      },
                      {
                        "expression": {
                          "id": 3165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3161,
                            "name": "lpToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2927,
                            "src": "5242:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPToken_$2669",
                              "typeString": "contract LPToken"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3163,
                                "name": "_lpToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3142,
                                "src": "5260:8:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3162,
                              "name": "LPToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2669,
                              "src": "5252:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_LPToken_$2669_$",
                                "typeString": "type(contract LPToken)"
                              }
                            },
                            "id": 3164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5252:17:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LPToken_$2669",
                              "typeString": "contract LPToken"
                            }
                          },
                          "src": "5242:27:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LPToken_$2669",
                            "typeString": "contract LPToken"
                          }
                        },
                        "id": 3166,
                        "nodeType": "ExpressionStatement",
                        "src": "5242:27:24"
                      },
                      {
                        "expression": {
                          "id": 3171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3167,
                            "name": "rewardStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2930,
                            "src": "5280:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                              "typeString": "contract IRewardStrategy"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 3169,
                                "name": "_strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3144,
                                "src": "5313:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 3168,
                              "name": "IRewardStrategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2839,
                              "src": "5297:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IRewardStrategy_$2839_$",
                                "typeString": "type(contract IRewardStrategy)"
                              }
                            },
                            "id": 3170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5297:26:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                              "typeString": "contract IRewardStrategy"
                            }
                          },
                          "src": "5280:43:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                            "typeString": "contract IRewardStrategy"
                          }
                        },
                        "id": 3172,
                        "nodeType": "ExpressionStatement",
                        "src": "5280:43:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3174,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3146,
                              "src": "5353:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3173,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 193,
                            "src": "5334:18:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 3175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5334:26:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3176,
                        "nodeType": "ExpressionStatement",
                        "src": "5334:26:24"
                      }
                    ]
                  },
                  "functionSelector": "f8c8765e",
                  "id": 3178,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3149,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3148,
                        "name": "initializer",
                        "nameLocations": [
                          "5106:11:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 302,
                        "src": "5106:11:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5106:11:24"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "4972:10:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3147,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3140,
                        "mutability": "mutable",
                        "name": "_dappToken",
                        "nameLocation": "5001:10:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3178,
                        "src": "4993:18:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3139,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4993:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3142,
                        "mutability": "mutable",
                        "name": "_lpToken",
                        "nameLocation": "5030:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3178,
                        "src": "5022:16:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3141,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5022:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3144,
                        "mutability": "mutable",
                        "name": "_strategy",
                        "nameLocation": "5057:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3178,
                        "src": "5049:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3143,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5049:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3146,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "5085:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3178,
                        "src": "5077:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5077:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4982:116:24"
                  },
                  "returnParameters": {
                    "id": 3150,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5118:0:24"
                  },
                  "scope": 4344,
                  "src": "4963:446:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3189,
                    "nodeType": "Block",
                    "src": "5471:97:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          },
                          "id": 3183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3180,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "5486:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 3181,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "5499:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5509:6:24",
                            "memberName": "ACTIVE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2818,
                            "src": "5499:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "5486:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3187,
                        "nodeType": "IfStatement",
                        "src": "5482:66:24",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3184,
                              "name": "TokenFarm__FarmStopped",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3066,
                              "src": "5524:22:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5524:24:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3186,
                          "nodeType": "RevertStatement",
                          "src": "5517:31:24"
                        }
                      },
                      {
                        "id": 3188,
                        "nodeType": "PlaceholderStatement",
                        "src": "5559:1:24"
                      }
                    ]
                  },
                  "id": 3190,
                  "name": "whenActive",
                  "nameLocation": "5458:10:24",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 3179,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5468:2:24"
                  },
                  "src": "5449:119:24",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3201,
                    "nodeType": "Block",
                    "src": "5604:107:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          },
                          "id": 3195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3192,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "5619:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3193,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "5632:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5642:14:24",
                            "memberName": "EMERGENCY_STOP",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2820,
                            "src": "5632:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "5619:37:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3199,
                        "nodeType": "IfStatement",
                        "src": "5615:76:24",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3196,
                              "name": "TokenFarm__EmergencyStop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3068,
                              "src": "5665:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5665:26:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3198,
                          "nodeType": "RevertStatement",
                          "src": "5658:33:24"
                        }
                      },
                      {
                        "id": 3200,
                        "nodeType": "PlaceholderStatement",
                        "src": "5702:1:24"
                      }
                    ]
                  },
                  "id": 3202,
                  "name": "whenNotEmergency",
                  "nameLocation": "5585:16:24",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 3191,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5601:2:24"
                  },
                  "src": "5576:135:24",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3224,
                    "nodeType": "Block",
                    "src": "5783:167:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "5798:34:24",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3204,
                                  "name": "stakersData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2973,
                                  "src": "5799:11:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                                    "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                                  }
                                },
                                "id": 3207,
                                "indexExpression": {
                                  "expression": {
                                    "id": 3205,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5811:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5815:6:24",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5811:10:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5799:23:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_storage",
                                  "typeString": "struct TokenFarm.Staker storage ref"
                                }
                              },
                              "id": 3208,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5823:9:24",
                              "memberName": "isStaking",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2964,
                              "src": "5799:33:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3210,
                                  "name": "stakersData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2973,
                                  "src": "5836:11:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                                    "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                                  }
                                },
                                "id": 3213,
                                "indexExpression": {
                                  "expression": {
                                    "id": 3211,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5848:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5852:6:24",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5848:10:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5836:23:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_storage",
                                  "typeString": "struct TokenFarm.Staker storage ref"
                                }
                              },
                              "id": 3214,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5860:7:24",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2952,
                              "src": "5836:31:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 3215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5871:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5836:36:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5798:74:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3222,
                        "nodeType": "IfStatement",
                        "src": "5794:137:24",
                        "trueBody": {
                          "id": 3221,
                          "nodeType": "Block",
                          "src": "5874:57:24",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3218,
                                  "name": "TokenFarm__NotStaking",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3064,
                                  "src": "5896:21:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 3219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5896:23:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 3220,
                              "nodeType": "RevertStatement",
                              "src": "5889:30:24"
                            }
                          ]
                        }
                      },
                      {
                        "id": 3223,
                        "nodeType": "PlaceholderStatement",
                        "src": "5941:1:24"
                      }
                    ]
                  },
                  "id": 3225,
                  "name": "onlyStaker",
                  "nameLocation": "5770:10:24",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 3203,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5780:2:24"
                  },
                  "src": "5761:189:24",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3232,
                    "nodeType": "Block",
                    "src": "6064:33:24",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "312e302e30",
                          "id": 3230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6082:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                            "typeString": "literal_string \"1.0.0\""
                          },
                          "value": "1.0.0"
                        },
                        "functionReturnParameters": 3229,
                        "id": 3231,
                        "nodeType": "Return",
                        "src": "6075:14:24"
                      }
                    ]
                  },
                  "functionSelector": "0d8e6e2c",
                  "id": 3233,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVersion",
                  "nameLocation": "6007:10:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3226,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6017:2:24"
                  },
                  "returnParameters": {
                    "id": 3229,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3228,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 3233,
                        "src": "6049:13:24",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 3227,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6049:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6048:15:24"
                  },
                  "scope": 4344,
                  "src": "5998:99:24",
                  "stateMutability": "pure",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 3285,
                    "nodeType": "Block",
                    "src": "6359:400:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3243,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3236,
                            "src": "6374:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 3244,
                            "name": "MIN_DEPOSIT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2983,
                            "src": "6384:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6374:21:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3250,
                        "nodeType": "IfStatement",
                        "src": "6370:87:24",
                        "trueBody": {
                          "id": 3249,
                          "nodeType": "Block",
                          "src": "6397:60:24",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3246,
                                  "name": "TokenFarm__InvalidAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3070,
                                  "src": "6419:24:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 3247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6419:26:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 3248,
                              "nodeType": "RevertStatement",
                              "src": "6412:33:24"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3251,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2968,
                                "src": "6471:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 3252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6479:6:24",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "6471:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 3253,
                              "name": "MAX_STAKERS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2980,
                              "src": "6489:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6471:29:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 3260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6504:34:24",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 3255,
                                  "name": "stakersData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2973,
                                  "src": "6505:11:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                                    "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                                  }
                                },
                                "id": 3258,
                                "indexExpression": {
                                  "expression": {
                                    "id": 3256,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6517:3:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 3257,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6521:6:24",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6517:10:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6505:23:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_storage",
                                  "typeString": "struct TokenFarm.Staker storage ref"
                                }
                              },
                              "id": 3259,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6529:9:24",
                              "memberName": "hasStaked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2962,
                              "src": "6505:33:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6471:67:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3266,
                        "nodeType": "IfStatement",
                        "src": "6467:137:24",
                        "trueBody": {
                          "id": 3265,
                          "nodeType": "Block",
                          "src": "6540:64:24",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3262,
                                  "name": "TokenFarm__MaxStakersReached",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3078,
                                  "src": "6562:28:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 3263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6562:30:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 3264,
                              "nodeType": "RevertStatement",
                              "src": "6555:37:24"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3268,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6639:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6643:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6639:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3270,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3236,
                              "src": "6651:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3267,
                            "name": "_beforeDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3309,
                            "src": "6624:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6624:35:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3272,
                        "nodeType": "ExpressionStatement",
                        "src": "6624:35:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3274,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6686:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6690:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6686:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3276,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3236,
                              "src": "6698:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3273,
                            "name": "_executeDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3369,
                            "src": "6670:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6670:36:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3278,
                        "nodeType": "ExpressionStatement",
                        "src": "6670:36:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3280,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6731:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6735:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6731:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3282,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3236,
                              "src": "6743:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3279,
                            "name": "_afterDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3384,
                            "src": "6717:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 3283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6717:34:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3284,
                        "nodeType": "ExpressionStatement",
                        "src": "6717:34:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3234,
                    "nodeType": "StructuredDocumentation",
                    "src": "6105:125:24",
                    "text": " @dev Deposita tokens LP para comenzar a farmear\n @param _amount Cantidad de tokens LP a depositar"
                  },
                  "functionSelector": "b6b55f25",
                  "id": 3286,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3239,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3238,
                        "name": "whenActive",
                        "nameLocations": [
                          "6316:10:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3190,
                        "src": "6316:10:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6316:10:24"
                    },
                    {
                      "id": 3241,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3240,
                        "name": "whenNotEmergency",
                        "nameLocations": [
                          "6337:16:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3202,
                        "src": "6337:16:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6337:16:24"
                    }
                  ],
                  "name": "deposit",
                  "nameLocation": "6245:7:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3236,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "6261:7:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3286,
                        "src": "6253:15:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3235,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6253:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6252:17:24"
                  },
                  "returnParameters": {
                    "id": 3242,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6359:0:24"
                  },
                  "scope": 4344,
                  "src": "6236:523:24",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3308,
                    "nodeType": "Block",
                    "src": "6838:169:24",
                    "statements": [
                      {
                        "condition": {
                          "id": 3302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6853:50:24",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 3295,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3288,
                                "src": "6875:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 3298,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "6889:4:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_TokenFarm_$4344",
                                      "typeString": "contract TokenFarm"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_TokenFarm_$4344",
                                      "typeString": "contract TokenFarm"
                                    }
                                  ],
                                  "id": 3297,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6881:7:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3296,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6881:7:24",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6881:13:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3300,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3290,
                                "src": "6896:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3293,
                                "name": "lpToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2927,
                                "src": "6854:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LPToken_$2669",
                                  "typeString": "contract LPToken"
                                }
                              },
                              "id": 3294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6862:12:24",
                              "memberName": "transferFrom",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1734,
                              "src": "6854:20:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,address,uint256) external returns (bool)"
                              }
                            },
                            "id": 3301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6854:49:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3307,
                        "nodeType": "IfStatement",
                        "src": "6849:117:24",
                        "trueBody": {
                          "id": 3306,
                          "nodeType": "Block",
                          "src": "6905:61:24",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3303,
                                  "name": "TokenFarm__TransferFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3076,
                                  "src": "6927:25:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 3304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6927:27:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 3305,
                              "nodeType": "RevertStatement",
                              "src": "6920:34:24"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 3309,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_beforeDeposit",
                  "nameLocation": "6776:14:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3291,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3288,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "6799:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3309,
                        "src": "6791:12:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3287,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6791:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3290,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6813:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3309,
                        "src": "6805:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3289,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6805:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6790:30:24"
                  },
                  "returnParameters": {
                    "id": 3292,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6838:0:24"
                  },
                  "scope": 4344,
                  "src": "6767:240:24",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3368,
                    "nodeType": "Block",
                    "src": "7078:538:24",
                    "statements": [
                      {
                        "assignments": [
                          3318
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3318,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "7104:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3368,
                            "src": "7089:21:24",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker"
                            },
                            "typeName": {
                              "id": 3317,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3316,
                                "name": "Staker",
                                "nameLocations": [
                                  "7089:6:24"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2965,
                                "src": "7089:6:24"
                              },
                              "referencedDeclaration": 2965,
                              "src": "7089:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3322,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3319,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "7113:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 3321,
                          "indexExpression": {
                            "id": 3320,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3311,
                            "src": "7125:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7113:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7089:41:24"
                      },
                      {
                        "condition": {
                          "id": 3325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "7155:17:24",
                          "subExpression": {
                            "expression": {
                              "id": 3323,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3318,
                              "src": "7156:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 3324,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7163:9:24",
                            "memberName": "hasStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2962,
                            "src": "7156:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3351,
                        "nodeType": "IfStatement",
                        "src": "7151:239:24",
                        "trueBody": {
                          "id": 3350,
                          "nodeType": "Block",
                          "src": "7174:216:24",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3327,
                                    "name": "user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3311,
                                    "src": "7200:4:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3326,
                                  "name": "_addStaker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3744,
                                  "src": "7189:10:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 3328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7189:16:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3329,
                              "nodeType": "ExpressionStatement",
                              "src": "7189:16:24"
                            },
                            {
                              "expression": {
                                "id": 3334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 3330,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3318,
                                    "src": "7220:6:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                      "typeString": "struct TokenFarm.Staker storage pointer"
                                    }
                                  },
                                  "id": 3332,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7227:9:24",
                                  "memberName": "hasStaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2962,
                                  "src": "7220:16:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 3333,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7239:4:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "7220:23:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3335,
                              "nodeType": "ExpressionStatement",
                              "src": "7220:23:24"
                            },
                            {
                              "expression": {
                                "id": 3341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 3336,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3318,
                                    "src": "7258:6:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                      "typeString": "struct TokenFarm.Staker storage pointer"
                                    }
                                  },
                                  "id": 3338,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7265:16:24",
                                  "memberName": "depositTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2960,
                                  "src": "7258:23:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 3339,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7284:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3340,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7290:9:24",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "7284:15:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7258:41:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3342,
                              "nodeType": "ExpressionStatement",
                              "src": "7258:41:24"
                            },
                            {
                              "expression": {
                                "id": 3348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 3343,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3318,
                                    "src": "7314:6:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                      "typeString": "struct TokenFarm.Staker storage pointer"
                                    }
                                  },
                                  "id": 3345,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "7321:10:24",
                                  "memberName": "checkpoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2954,
                                  "src": "7314:17:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 3346,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7334:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3347,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7340:6:24",
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "7334:12:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7314:32:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 3349,
                              "nodeType": "ExpressionStatement",
                              "src": "7314:32:24"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 3356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3352,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3318,
                              "src": "7402:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 3354,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7409:7:24",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2952,
                            "src": "7402:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3355,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3313,
                            "src": "7420:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7402:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3357,
                        "nodeType": "ExpressionStatement",
                        "src": "7402:24:24"
                      },
                      {
                        "expression": {
                          "id": 3362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3358,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3318,
                              "src": "7437:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 3360,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7444:9:24",
                            "memberName": "isStaking",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2964,
                            "src": "7437:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 3361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7456:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7437:23:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3363,
                        "nodeType": "ExpressionStatement",
                        "src": "7437:23:24"
                      },
                      {
                        "expression": {
                          "id": 3366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3364,
                            "name": "totalStakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2944,
                            "src": "7471:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3365,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3313,
                            "src": "7494:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7471:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3367,
                        "nodeType": "ExpressionStatement",
                        "src": "7471:29:24"
                      }
                    ]
                  },
                  "id": 3369,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_executeDeposit",
                  "nameLocation": "7024:15:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3311,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "7048:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3369,
                        "src": "7040:12:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3310,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7040:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3313,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7062:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3369,
                        "src": "7054:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3312,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7054:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7039:30:24"
                  },
                  "returnParameters": {
                    "id": 3315,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7078:0:24"
                  },
                  "scope": 4344,
                  "src": "7015:601:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3383,
                    "nodeType": "Block",
                    "src": "7694:62:24",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3377,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3371,
                              "src": "7718:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3378,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3373,
                              "src": "7724:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3379,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7732:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7738:9:24",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7732:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3376,
                            "name": "Deposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2998,
                            "src": "7710:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 3381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7710:38:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3382,
                        "nodeType": "EmitStatement",
                        "src": "7705:43:24"
                      }
                    ]
                  },
                  "id": 3384,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_afterDeposit",
                  "nameLocation": "7633:13:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3371,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "7655:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3384,
                        "src": "7647:12:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3370,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7647:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3373,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7669:6:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3384,
                        "src": "7661:14:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7661:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7646:30:24"
                  },
                  "returnParameters": {
                    "id": 3375,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7694:0:24"
                  },
                  "scope": 4344,
                  "src": "7624:132:24",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3491,
                    "nodeType": "Block",
                    "src": "7879:1167:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            },
                            "id": 3393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3390,
                              "name": "farmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "7965:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 3391,
                                "name": "FarmState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2821,
                                "src": "7978:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                  "typeString": "type(enum FarmState)"
                                }
                              },
                              "id": 3392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7988:14:24",
                              "memberName": "EMERGENCY_STOP",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2820,
                              "src": "7978:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "src": "7965:37:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 3395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "8006:25:24",
                            "subExpression": {
                              "id": 3394,
                              "name": "emergencyWithdrawEnabled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2990,
                              "src": "8007:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7965:66:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3401,
                        "nodeType": "IfStatement",
                        "src": "7961:132:24",
                        "trueBody": {
                          "id": 3400,
                          "nodeType": "Block",
                          "src": "8033:60:24",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3397,
                                  "name": "TokenFarm__EmergencyStop",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3068,
                                  "src": "8055:24:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 3398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8055:26:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 3399,
                              "nodeType": "RevertStatement",
                              "src": "8048:33:24"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3404
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3404,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "8128:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3491,
                            "src": "8113:21:24",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker"
                            },
                            "typeName": {
                              "id": 3403,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3402,
                                "name": "Staker",
                                "nameLocations": [
                                  "8113:6:24"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2965,
                                "src": "8113:6:24"
                              },
                              "referencedDeclaration": 2965,
                              "src": "8113:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3409,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3405,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "8137:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 3408,
                          "indexExpression": {
                            "expression": {
                              "id": 3406,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8149:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8153:6:24",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8149:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8137:23:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8113:47:24"
                      },
                      {
                        "assignments": [
                          3411
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3411,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "8179:7:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3491,
                            "src": "8171:15:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3410,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8171:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3414,
                        "initialValue": {
                          "expression": {
                            "id": 3412,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3404,
                            "src": "8189:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker storage pointer"
                            }
                          },
                          "id": 3413,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8196:7:24",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2952,
                          "src": "8189:14:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8171:32:24"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3415,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3411,
                            "src": "8220:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8231:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8220:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3421,
                        "nodeType": "IfStatement",
                        "src": "8216:51:24",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3418,
                              "name": "TokenFarm__InvalidAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3070,
                              "src": "8241:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8241:26:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3420,
                          "nodeType": "RevertStatement",
                          "src": "8234:33:24"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            },
                            "id": 3425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3422,
                              "name": "farmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "8358:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 3423,
                                "name": "FarmState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2821,
                                "src": "8371:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                  "typeString": "type(enum FarmState)"
                                }
                              },
                              "id": 3424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "8381:14:24",
                              "memberName": "EMERGENCY_STOP",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2820,
                              "src": "8371:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "src": "8358:37:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3426,
                              "name": "lockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2988,
                              "src": "8399:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 3427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8412:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8399:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8358:55:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3443,
                        "nodeType": "IfStatement",
                        "src": "8354:213:24",
                        "trueBody": {
                          "id": 3442,
                          "nodeType": "Block",
                          "src": "8415:152:24",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 3430,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8434:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 3431,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8440:9:24",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8434:15:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 3435,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 3432,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3404,
                                      "src": "8452:6:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                        "typeString": "struct TokenFarm.Staker storage pointer"
                                      }
                                    },
                                    "id": 3433,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8459:16:24",
                                    "memberName": "depositTimestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2960,
                                    "src": "8452:23:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 3434,
                                    "name": "lockPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2988,
                                    "src": "8478:10:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8452:36:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8434:54:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3441,
                              "nodeType": "IfStatement",
                              "src": "8430:126:24",
                              "trueBody": {
                                "id": 3440,
                                "nodeType": "Block",
                                "src": "8490:66:24",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 3437,
                                        "name": "TokenFarm__StillLocked",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3080,
                                        "src": "8516:22:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                          "typeString": "function () pure returns (error)"
                                        }
                                      },
                                      "id": 3438,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8516:24:24",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 3439,
                                    "nodeType": "RevertStatement",
                                    "src": "8509:31:24"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          },
                          "id": 3447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3444,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "8651:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 3445,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "8664:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "8674:14:24",
                            "memberName": "EMERGENCY_STOP",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2820,
                            "src": "8664:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "8651:37:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3454,
                        "nodeType": "IfStatement",
                        "src": "8647:96:24",
                        "trueBody": {
                          "id": 3453,
                          "nodeType": "Block",
                          "src": "8690:53:24",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 3449,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "8720:3:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 3450,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "8724:6:24",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "8720:10:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 3448,
                                  "name": "_updateRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3725,
                                  "src": "8705:14:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 3451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8705:26:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 3452,
                              "nodeType": "ExpressionStatement",
                              "src": "8705:26:24"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 3459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3455,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3404,
                              "src": "8755:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 3457,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8762:7:24",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2952,
                            "src": "8755:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 3458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8772:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8755:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3460,
                        "nodeType": "ExpressionStatement",
                        "src": "8755:18:24"
                      },
                      {
                        "expression": {
                          "id": 3465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3461,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3404,
                              "src": "8784:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 3463,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "8791:9:24",
                            "memberName": "isStaking",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2964,
                            "src": "8784:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 3464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8803:5:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "8784:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3466,
                        "nodeType": "ExpressionStatement",
                        "src": "8784:24:24"
                      },
                      {
                        "expression": {
                          "id": 3469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3467,
                            "name": "totalStakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2944,
                            "src": "8819:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 3468,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3411,
                            "src": "8842:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8819:30:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3470,
                        "nodeType": "ExpressionStatement",
                        "src": "8819:30:24"
                      },
                      {
                        "condition": {
                          "id": 3477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8866:38:24",
                          "subExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 3473,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "8884:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 3474,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8888:6:24",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "8884:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 3475,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3411,
                                "src": "8896:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 3471,
                                "name": "lpToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2927,
                                "src": "8867:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LPToken_$2669",
                                  "typeString": "contract LPToken"
                                }
                              },
                              "id": 3472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8875:8:24",
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1661,
                              "src": "8867:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 3476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8867:37:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3482,
                        "nodeType": "IfStatement",
                        "src": "8862:105:24",
                        "trueBody": {
                          "id": 3481,
                          "nodeType": "Block",
                          "src": "8906:61:24",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 3478,
                                  "name": "TokenFarm__TransferFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3076,
                                  "src": "8928:25:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 3479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8928:27:24",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 3480,
                              "nodeType": "RevertStatement",
                              "src": "8921:34:24"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3484,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9001:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9005:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9001:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3486,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3411,
                              "src": "9013:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3487,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9022:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3488,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9028:9:24",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9022:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3483,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3006,
                            "src": "8992:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 3489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8992:46:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3490,
                        "nodeType": "EmitStatement",
                        "src": "8987:51:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3385,
                    "nodeType": "StructuredDocumentation",
                    "src": "7764:61:24",
                    "text": " @dev Retira todos los tokens depositados"
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 3492,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3388,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3387,
                        "name": "onlyStaker",
                        "nameLocations": [
                          "7868:10:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3225,
                        "src": "7868:10:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7868:10:24"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "7840:8:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3386,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7848:2:24"
                  },
                  "returnParameters": {
                    "id": 3389,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7879:0:24"
                  },
                  "scope": 4344,
                  "src": "7831:1215:24",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3578,
                    "nodeType": "Block",
                    "src": "9233:593:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3503,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9259:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3504,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9263:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9259:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3502,
                            "name": "_updateRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3725,
                            "src": "9244:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 3505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9244:26:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3506,
                        "nodeType": "ExpressionStatement",
                        "src": "9244:26:24"
                      },
                      {
                        "assignments": [
                          3509
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3509,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "9296:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3578,
                            "src": "9281:21:24",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker"
                            },
                            "typeName": {
                              "id": 3508,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3507,
                                "name": "Staker",
                                "nameLocations": [
                                  "9281:6:24"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2965,
                                "src": "9281:6:24"
                              },
                              "referencedDeclaration": 2965,
                              "src": "9281:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3514,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3510,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "9305:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 3513,
                          "indexExpression": {
                            "expression": {
                              "id": 3511,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9317:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9321:6:24",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9317:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9305:23:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9281:47:24"
                      },
                      {
                        "assignments": [
                          3516
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3516,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "9347:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3578,
                            "src": "9339:14:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3515,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9339:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3519,
                        "initialValue": {
                          "expression": {
                            "id": 3517,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3509,
                            "src": "9356:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker storage pointer"
                            }
                          },
                          "id": 3518,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9363:14:24",
                          "memberName": "pendingRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2956,
                          "src": "9356:21:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9339:38:24"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3520,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3516,
                            "src": "9394:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9404:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9394:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3526,
                        "nodeType": "IfStatement",
                        "src": "9390:46:24",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3523,
                              "name": "TokenFarm__NoRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3072,
                              "src": "9414:20:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9414:22:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3525,
                          "nodeType": "RevertStatement",
                          "src": "9407:29:24"
                        }
                      },
                      {
                        "assignments": [
                          3528
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3528,
                            "mutability": "mutable",
                            "name": "fee",
                            "nameLocation": "9465:3:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3578,
                            "src": "9457:11:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3527,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9457:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3536,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 3532,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 3529,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3516,
                                  "src": "9472:6:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "expression": {
                                    "id": 3530,
                                    "name": "rewardConfig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2942,
                                    "src": "9481:12:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                      "typeString": "struct TokenFarm.RewardConfig storage ref"
                                    }
                                  },
                                  "id": 3531,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9494:10:24",
                                  "memberName": "feePercent",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2936,
                                  "src": "9481:23:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9472:32:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3533,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9471:34:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 3534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9508:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "9471:40:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9457:54:24"
                      },
                      {
                        "assignments": [
                          3538
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3538,
                            "mutability": "mutable",
                            "name": "netReward",
                            "nameLocation": "9530:9:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3578,
                            "src": "9522:17:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3537,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9522:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3542,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3539,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3516,
                            "src": "9542:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 3540,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3528,
                            "src": "9551:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9542:12:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9522:32:24"
                      },
                      {
                        "expression": {
                          "id": 3547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3543,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3509,
                              "src": "9567:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 3545,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9574:14:24",
                            "memberName": "pendingRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2956,
                            "src": "9567:21:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 3546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9591:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9567:25:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3548,
                        "nodeType": "ExpressionStatement",
                        "src": "9567:25:24"
                      },
                      {
                        "expression": {
                          "id": 3553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3549,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3509,
                              "src": "9603:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 3551,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "9610:12:24",
                            "memberName": "totalClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2958,
                            "src": "9603:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3552,
                            "name": "netReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3538,
                            "src": "9626:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9603:32:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3554,
                        "nodeType": "ExpressionStatement",
                        "src": "9603:32:24"
                      },
                      {
                        "expression": {
                          "id": 3557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3555,
                            "name": "collectedFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2946,
                            "src": "9646:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3556,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3528,
                            "src": "9663:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9646:20:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3558,
                        "nodeType": "ExpressionStatement",
                        "src": "9646:20:24"
                      },
                      {
                        "expression": {
                          "id": 3561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3559,
                            "name": "totalRewardsDistributed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2948,
                            "src": "9677:23:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3560,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3516,
                            "src": "9704:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9677:33:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3562,
                        "nodeType": "ExpressionStatement",
                        "src": "9677:33:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3566,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9738:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9742:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9738:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3568,
                              "name": "netReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3538,
                              "src": "9750:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3563,
                              "name": "dappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2924,
                              "src": "9723:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DappToken_$2630",
                                "typeString": "contract DappToken"
                              }
                            },
                            "id": 3565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9733:4:24",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2629,
                            "src": "9723:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 3569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9723:37:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3570,
                        "nodeType": "ExpressionStatement",
                        "src": "9723:37:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3572,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9791:3:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9795:6:24",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9791:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3574,
                              "name": "netReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3538,
                              "src": "9803:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3575,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3528,
                              "src": "9814:3:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3571,
                            "name": "RewardsClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3014,
                            "src": "9776:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 3576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9776:42:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3577,
                        "nodeType": "EmitStatement",
                        "src": "9771:47:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3493,
                    "nodeType": "StructuredDocumentation",
                    "src": "9054:60:24",
                    "text": " @dev Reclama las recompensas pendientes"
                  },
                  "functionSelector": "372500ab",
                  "id": 3579,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3496,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3495,
                        "name": "whenNotEmergency",
                        "nameLocations": [
                          "9171:16:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3202,
                        "src": "9171:16:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9171:16:24"
                    },
                    {
                      "id": 3498,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3497,
                        "name": "whenActive",
                        "nameLocations": [
                          "9197:10:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3190,
                        "src": "9197:10:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9197:10:24"
                    },
                    {
                      "id": 3500,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3499,
                        "name": "onlyStaker",
                        "nameLocations": [
                          "9217:10:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3225,
                        "src": "9217:10:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9217:10:24"
                    }
                  ],
                  "name": "claimRewards",
                  "nameLocation": "9129:12:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9141:2:24"
                  },
                  "returnParameters": {
                    "id": 3501,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9233:0:24"
                  },
                  "scope": 4344,
                  "src": "9120:706:24",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3657,
                    "nodeType": "Block",
                    "src": "9995:655:24",
                    "statements": [
                      {
                        "assignments": [
                          3590
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3590,
                            "mutability": "mutable",
                            "name": "stakersCount",
                            "nameLocation": "10014:12:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3657,
                            "src": "10006:20:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3589,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10006:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3592,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10029:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10006:24:24"
                      },
                      {
                        "assignments": [
                          3594
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3594,
                            "mutability": "mutable",
                            "name": "totalDistributed",
                            "nameLocation": "10049:16:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3657,
                            "src": "10041:24:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3593,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10041:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3596,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 3595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10068:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10041:28:24"
                      },
                      {
                        "body": {
                          "id": 3648,
                          "nodeType": "Block",
                          "src": "10135:415:24",
                          "statements": [
                            {
                              "assignments": [
                                3609
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 3609,
                                  "mutability": "mutable",
                                  "name": "userAddr",
                                  "nameLocation": "10158:8:24",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 3648,
                                  "src": "10150:16:24",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 3608,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10150:7:24",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 3613,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 3610,
                                  "name": "stakers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2968,
                                  "src": "10169:7:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 3612,
                                "indexExpression": {
                                  "id": 3611,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3598,
                                  "src": "10177:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10169:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10150:29:24"
                            },
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 3614,
                                    "name": "stakersData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2973,
                                    "src": "10198:11:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                                      "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                                    }
                                  },
                                  "id": 3616,
                                  "indexExpression": {
                                    "id": 3615,
                                    "name": "userAddr",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3609,
                                    "src": "10210:8:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10198:21:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Staker_$2965_storage",
                                    "typeString": "struct TokenFarm.Staker storage ref"
                                  }
                                },
                                "id": 3617,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10220:9:24",
                                "memberName": "isStaking",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2964,
                                "src": "10198:31:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 3647,
                              "nodeType": "IfStatement",
                              "src": "10194:345:24",
                              "trueBody": {
                                "id": 3646,
                                "nodeType": "Block",
                                "src": "10231:308:24",
                                "statements": [
                                  {
                                    "assignments": [
                                      3619
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3619,
                                        "mutability": "mutable",
                                        "name": "oldRewards",
                                        "nameLocation": "10258:10:24",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3646,
                                        "src": "10250:18:24",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 3618,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10250:7:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 3624,
                                    "initialValue": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 3620,
                                          "name": "stakersData",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2973,
                                          "src": "10271:11:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                                            "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                                          }
                                        },
                                        "id": 3622,
                                        "indexExpression": {
                                          "id": 3621,
                                          "name": "userAddr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3609,
                                          "src": "10283:8:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "10271:21:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Staker_$2965_storage",
                                          "typeString": "struct TokenFarm.Staker storage ref"
                                        }
                                      },
                                      "id": 3623,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10293:14:24",
                                      "memberName": "pendingRewards",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2956,
                                      "src": "10271:36:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "10250:57:24"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 3626,
                                          "name": "userAddr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3609,
                                          "src": "10341:8:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 3625,
                                        "name": "_updateRewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3725,
                                        "src": "10326:14:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function (address)"
                                        }
                                      },
                                      "id": 3627,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10326:24:24",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 3628,
                                    "nodeType": "ExpressionStatement",
                                    "src": "10326:24:24"
                                  },
                                  {
                                    "assignments": [
                                      3630
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 3630,
                                        "mutability": "mutable",
                                        "name": "newRewards",
                                        "nameLocation": "10377:10:24",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 3646,
                                        "src": "10369:18:24",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 3629,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10369:7:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 3635,
                                    "initialValue": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 3631,
                                          "name": "stakersData",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2973,
                                          "src": "10390:11:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                                            "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                                          }
                                        },
                                        "id": 3633,
                                        "indexExpression": {
                                          "id": 3632,
                                          "name": "userAddr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3609,
                                          "src": "10402:8:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "10390:21:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Staker_$2965_storage",
                                          "typeString": "struct TokenFarm.Staker storage ref"
                                        }
                                      },
                                      "id": 3634,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "10412:14:24",
                                      "memberName": "pendingRewards",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2956,
                                      "src": "10390:36:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "10369:57:24"
                                  },
                                  {
                                    "expression": {
                                      "id": 3641,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 3636,
                                        "name": "totalDistributed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3594,
                                        "src": "10445:16:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 3639,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 3637,
                                              "name": "newRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3630,
                                              "src": "10466:10:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "id": 3638,
                                              "name": "oldRewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 3619,
                                              "src": "10479:10:24",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "10466:23:24",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 3640,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "10465:25:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10445:45:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3642,
                                    "nodeType": "ExpressionStatement",
                                    "src": "10445:45:24"
                                  },
                                  {
                                    "expression": {
                                      "id": 3644,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "10509:14:24",
                                      "subExpression": {
                                        "id": 3643,
                                        "name": "stakersCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3590,
                                        "src": "10509:12:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 3645,
                                    "nodeType": "ExpressionStatement",
                                    "src": "10509:14:24"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3601,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3598,
                            "src": "10110:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 3602,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2968,
                              "src": "10114:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10122:6:24",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10114:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10110:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3649,
                        "initializationExpression": {
                          "assignments": [
                            3598
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 3598,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "10103:1:24",
                              "nodeType": "VariableDeclaration",
                              "scope": 3649,
                              "src": "10095:9:24",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 3597,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "10095:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 3600,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 3599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10107:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10095:13:24"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 3606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10130:3:24",
                            "subExpression": {
                              "id": 3605,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3598,
                              "src": "10130:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3607,
                          "nodeType": "ExpressionStatement",
                          "src": "10130:3:24"
                        },
                        "nodeType": "ForStatement",
                        "src": "10090:460:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3651,
                              "name": "stakersCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3590,
                              "src": "10594:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3652,
                              "name": "totalDistributed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3594,
                              "src": "10608:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3653,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "10626:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10632:9:24",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "10626:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3650,
                            "name": "RewardsDistributed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3022,
                            "src": "10575:18:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 3655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10575:67:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3656,
                        "nodeType": "EmitStatement",
                        "src": "10570:72:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3580,
                    "nodeType": "StructuredDocumentation",
                    "src": "9834:76:24",
                    "text": " @dev Distribuye recompensas a todos los stakers activos"
                  },
                  "functionSelector": "db03e227",
                  "id": 3658,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3583,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3582,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "9957:9:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "9957:9:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9957:9:24"
                    },
                    {
                      "id": 3585,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3584,
                        "name": "whenActive",
                        "nameLocations": [
                          "9967:10:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3190,
                        "src": "9967:10:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9967:10:24"
                    },
                    {
                      "id": 3587,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3586,
                        "name": "whenNotEmergency",
                        "nameLocations": [
                          "9978:16:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3202,
                        "src": "9978:16:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9978:16:24"
                    }
                  ],
                  "name": "distributeRewardsAll",
                  "nameLocation": "9925:20:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3581,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9945:2:24"
                  },
                  "returnParameters": {
                    "id": 3588,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9995:0:24"
                  },
                  "scope": 4344,
                  "src": "9916:734:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3724,
                    "nodeType": "Block",
                    "src": "10794:628:24",
                    "statements": [
                      {
                        "assignments": [
                          3666
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3666,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "10820:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3724,
                            "src": "10805:21:24",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker"
                            },
                            "typeName": {
                              "id": 3665,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3664,
                                "name": "Staker",
                                "nameLocations": [
                                  "10805:6:24"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2965,
                                "src": "10805:6:24"
                              },
                              "referencedDeclaration": 2965,
                              "src": "10805:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3670,
                        "initialValue": {
                          "baseExpression": {
                            "id": 3667,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "10829:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 3669,
                          "indexExpression": {
                            "id": 3668,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3661,
                            "src": "10841:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10829:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10805:48:24"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 3679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3675,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 3671,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "10878:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 3672,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10884:6:24",
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "10878:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 3673,
                                  "name": "staker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3666,
                                  "src": "10894:6:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                    "typeString": "struct TokenFarm.Staker storage pointer"
                                  }
                                },
                                "id": 3674,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10901:10:24",
                                "memberName": "checkpoint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2954,
                                "src": "10894:17:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10878:33:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 3678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3676,
                                "name": "totalStakingBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2944,
                                "src": "10915:19:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 3677,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10938:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "10915:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "10878:61:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 3683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 3680,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3666,
                                "src": "10943:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                  "typeString": "struct TokenFarm.Staker storage pointer"
                                }
                              },
                              "id": 3681,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10950:7:24",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2952,
                              "src": "10943:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 3682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10961:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "10943:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10878:84:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3687,
                        "nodeType": "IfStatement",
                        "src": "10874:123:24",
                        "trueBody": {
                          "id": 3686,
                          "nodeType": "Block",
                          "src": "10964:33:24",
                          "statements": [
                            {
                              "functionReturnParameters": 3663,
                              "id": 3685,
                              "nodeType": "Return",
                              "src": "10979:7:24"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          3689
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3689,
                            "mutability": "mutable",
                            "name": "blocksPassed",
                            "nameLocation": "11017:12:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3724,
                            "src": "11009:20:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3688,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11009:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3695,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3690,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11032:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11038:6:24",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "11032:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 3692,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3666,
                              "src": "11047:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 3693,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11054:10:24",
                            "memberName": "checkpoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2954,
                            "src": "11047:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11032:32:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11009:55:24"
                      },
                      {
                        "assignments": [
                          3697
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3697,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "11083:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3724,
                            "src": "11075:14:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3696,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11075:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3710,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3700,
                              "name": "blocksPassed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3689,
                              "src": "11137:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3701,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3666,
                                "src": "11164:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                  "typeString": "struct TokenFarm.Staker storage pointer"
                                }
                              },
                              "id": 3702,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11171:7:24",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2952,
                              "src": "11164:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3703,
                              "name": "totalStakingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2944,
                              "src": "11193:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3704,
                                "name": "rewardConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2942,
                                "src": "11227:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                  "typeString": "struct TokenFarm.RewardConfig storage ref"
                                }
                              },
                              "id": 3705,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11240:11:24",
                              "memberName": "minPerBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2932,
                              "src": "11227:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 3706,
                                "name": "rewardConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2942,
                                "src": "11266:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                  "typeString": "struct TokenFarm.RewardConfig storage ref"
                                }
                              },
                              "id": 3707,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11279:11:24",
                              "memberName": "maxPerBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2934,
                              "src": "11266:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3708,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3661,
                              "src": "11305:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3698,
                              "name": "rewardStrategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2930,
                              "src": "11092:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                                "typeString": "contract IRewardStrategy"
                              }
                            },
                            "id": 3699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11107:15:24",
                            "memberName": "calculateReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2838,
                            "src": "11092:30:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,uint256,uint256,address) view external returns (uint256)"
                            }
                          },
                          "id": 3709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11092:235:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11075:252:24"
                      },
                      {
                        "expression": {
                          "id": 3715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3711,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3666,
                              "src": "11340:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 3713,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11347:14:24",
                            "memberName": "pendingRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2956,
                            "src": "11340:21:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 3714,
                            "name": "reward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3697,
                            "src": "11365:6:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11340:31:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3716,
                        "nodeType": "ExpressionStatement",
                        "src": "11340:31:24"
                      },
                      {
                        "expression": {
                          "id": 3722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3717,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3666,
                              "src": "11382:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 3719,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "11389:10:24",
                            "memberName": "checkpoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2954,
                            "src": "11382:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3720,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11402:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11408:6:24",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "11402:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11382:32:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3723,
                        "nodeType": "ExpressionStatement",
                        "src": "11382:32:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3659,
                    "nodeType": "StructuredDocumentation",
                    "src": "10658:76:24",
                    "text": " @dev Actualiza las recompensas pendientes de un usuario"
                  },
                  "id": 3725,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_updateRewards",
                  "nameLocation": "10749:14:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3661,
                        "mutability": "mutable",
                        "name": "beneficiary",
                        "nameLocation": "10772:11:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3725,
                        "src": "10764:19:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10764:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10763:21:24"
                  },
                  "returnParameters": {
                    "id": 3663,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10794:0:24"
                  },
                  "scope": 4344,
                  "src": "10740:682:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 3743,
                    "nodeType": "Block",
                    "src": "11472:82:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 3735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 3730,
                              "name": "stakerIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2977,
                              "src": "11483:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 3732,
                            "indexExpression": {
                              "id": 3731,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3727,
                              "src": "11495:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "11483:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3733,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2968,
                              "src": "11503:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3734,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11511:6:24",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11503:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11483:34:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3736,
                        "nodeType": "ExpressionStatement",
                        "src": "11483:34:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3740,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3727,
                              "src": "11541:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 3737,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2968,
                              "src": "11528:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 3739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11536:4:24",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "11528:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 3741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11528:18:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3742,
                        "nodeType": "ExpressionStatement",
                        "src": "11528:18:24"
                      }
                    ]
                  },
                  "id": 3744,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addStaker",
                  "nameLocation": "11439:10:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3728,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3727,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "11458:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3744,
                        "src": "11450:12:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 3726,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11450:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11449:14:24"
                  },
                  "returnParameters": {
                    "id": 3729,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11472:0:24"
                  },
                  "scope": 4344,
                  "src": "11430:124:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 3771,
                    "nodeType": "Block",
                    "src": "11743:189:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          },
                          "id": 3753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3750,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "11758:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3751,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "11771:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11781:6:24",
                            "memberName": "PAUSED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2819,
                            "src": "11771:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "11758:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3755,
                        "nodeType": "IfStatement",
                        "src": "11754:42:24",
                        "trueBody": {
                          "functionReturnParameters": 3749,
                          "id": 3754,
                          "nodeType": "Return",
                          "src": "11789:7:24"
                        }
                      },
                      {
                        "assignments": [
                          3758
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3758,
                            "mutability": "mutable",
                            "name": "oldState",
                            "nameLocation": "11816:8:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3771,
                            "src": "11806:18:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            },
                            "typeName": {
                              "id": 3757,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3756,
                                "name": "FarmState",
                                "nameLocations": [
                                  "11806:9:24"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2821,
                                "src": "11806:9:24"
                              },
                              "referencedDeclaration": 2821,
                              "src": "11806:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3760,
                        "initialValue": {
                          "id": 3759,
                          "name": "farmState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2921,
                          "src": "11827:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11806:30:24"
                      },
                      {
                        "expression": {
                          "id": 3764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3761,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "11847:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3762,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "11859:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3763,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "11869:6:24",
                            "memberName": "PAUSED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2819,
                            "src": "11859:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "11847:28:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          }
                        },
                        "id": 3765,
                        "nodeType": "ExpressionStatement",
                        "src": "11847:28:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3767,
                              "name": "oldState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3758,
                              "src": "11904:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            {
                              "id": 3768,
                              "name": "farmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "11914:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              },
                              {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            ],
                            "id": 3766,
                            "name": "StateChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3044,
                            "src": "11891:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_FarmState_$2821_$_t_enum$_FarmState_$2821_$returns$__$",
                              "typeString": "function (enum FarmState,enum FarmState)"
                            }
                          },
                          "id": 3769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11891:33:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3770,
                        "nodeType": "EmitStatement",
                        "src": "11886:38:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3745,
                    "nodeType": "StructuredDocumentation",
                    "src": "11609:80:24",
                    "text": " @dev Pausa el farm (no permite nuevos depósitos ni claims)"
                  },
                  "functionSelector": "a113601b",
                  "id": 3772,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3748,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3747,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "11733:9:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "11733:9:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11733:9:24"
                    }
                  ],
                  "name": "pauseFarm",
                  "nameLocation": "11704:9:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3746,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11713:2:24"
                  },
                  "returnParameters": {
                    "id": 3749,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11743:0:24"
                  },
                  "scope": 4344,
                  "src": "11695:237:24",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3807,
                    "nodeType": "Block",
                    "src": "12036:286:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          },
                          "id": 3781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3778,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "12051:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3779,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "12064:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3780,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12074:6:24",
                            "memberName": "ACTIVE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2818,
                            "src": "12064:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "12051:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3783,
                        "nodeType": "IfStatement",
                        "src": "12047:42:24",
                        "trueBody": {
                          "functionReturnParameters": 3777,
                          "id": 3782,
                          "nodeType": "Return",
                          "src": "12082:7:24"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          },
                          "id": 3787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3784,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "12103:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3785,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "12116:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12126:14:24",
                            "memberName": "EMERGENCY_STOP",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2820,
                            "src": "12116:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "12103:37:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3791,
                        "nodeType": "IfStatement",
                        "src": "12099:76:24",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3788,
                              "name": "TokenFarm__EmergencyStop",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3068,
                              "src": "12149:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12149:26:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3790,
                          "nodeType": "RevertStatement",
                          "src": "12142:33:24"
                        }
                      },
                      {
                        "assignments": [
                          3794
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3794,
                            "mutability": "mutable",
                            "name": "oldState",
                            "nameLocation": "12206:8:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3807,
                            "src": "12196:18:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            },
                            "typeName": {
                              "id": 3793,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3792,
                                "name": "FarmState",
                                "nameLocations": [
                                  "12196:9:24"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2821,
                                "src": "12196:9:24"
                              },
                              "referencedDeclaration": 2821,
                              "src": "12196:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3796,
                        "initialValue": {
                          "id": 3795,
                          "name": "farmState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2921,
                          "src": "12217:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12196:30:24"
                      },
                      {
                        "expression": {
                          "id": 3800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3797,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "12237:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3798,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "12249:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12259:6:24",
                            "memberName": "ACTIVE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2818,
                            "src": "12249:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "12237:28:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          }
                        },
                        "id": 3801,
                        "nodeType": "ExpressionStatement",
                        "src": "12237:28:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3803,
                              "name": "oldState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3794,
                              "src": "12294:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            {
                              "id": 3804,
                              "name": "farmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "12304:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              },
                              {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            ],
                            "id": 3802,
                            "name": "StateChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3044,
                            "src": "12281:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_FarmState_$2821_$_t_enum$_FarmState_$2821_$returns$__$",
                              "typeString": "function (enum FarmState,enum FarmState)"
                            }
                          },
                          "id": 3805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12281:33:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3806,
                        "nodeType": "EmitStatement",
                        "src": "12276:38:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3773,
                    "nodeType": "StructuredDocumentation",
                    "src": "11940:41:24",
                    "text": " @dev Reanuda el farm"
                  },
                  "functionSelector": "6c7ecb78",
                  "id": 3808,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3776,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3775,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "12026:9:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "12026:9:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12026:9:24"
                    }
                  ],
                  "name": "resumeFarm",
                  "nameLocation": "11996:10:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3774,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12006:2:24"
                  },
                  "returnParameters": {
                    "id": 3777,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12036:0:24"
                  },
                  "scope": 4344,
                  "src": "11987:335:24",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3840,
                    "nodeType": "Block",
                    "src": "12442:261:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          },
                          "id": 3817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3814,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "12457:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3815,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "12470:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12480:14:24",
                            "memberName": "EMERGENCY_STOP",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2820,
                            "src": "12470:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "12457:37:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3819,
                        "nodeType": "IfStatement",
                        "src": "12453:50:24",
                        "trueBody": {
                          "functionReturnParameters": 3813,
                          "id": 3818,
                          "nodeType": "Return",
                          "src": "12496:7:24"
                        }
                      },
                      {
                        "assignments": [
                          3822
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3822,
                            "mutability": "mutable",
                            "name": "oldState",
                            "nameLocation": "12533:8:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3840,
                            "src": "12523:18:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            },
                            "typeName": {
                              "id": 3821,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 3820,
                                "name": "FarmState",
                                "nameLocations": [
                                  "12523:9:24"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2821,
                                "src": "12523:9:24"
                              },
                              "referencedDeclaration": 2821,
                              "src": "12523:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3824,
                        "initialValue": {
                          "id": 3823,
                          "name": "farmState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2921,
                          "src": "12544:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12523:30:24"
                      },
                      {
                        "expression": {
                          "id": 3828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3825,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "12564:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3826,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "12576:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 3827,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12586:14:24",
                            "memberName": "EMERGENCY_STOP",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2820,
                            "src": "12576:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "12564:36:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          }
                        },
                        "id": 3829,
                        "nodeType": "ExpressionStatement",
                        "src": "12564:36:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3831,
                              "name": "oldState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3822,
                              "src": "12629:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            {
                              "id": 3832,
                              "name": "farmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "12639:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              },
                              {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            ],
                            "id": 3830,
                            "name": "StateChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3044,
                            "src": "12616:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_enum$_FarmState_$2821_$_t_enum$_FarmState_$2821_$returns$__$",
                              "typeString": "function (enum FarmState,enum FarmState)"
                            }
                          },
                          "id": 3833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12616:33:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3834,
                        "nodeType": "EmitStatement",
                        "src": "12611:38:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 3836,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12679:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 3837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12685:9:24",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12679:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3835,
                            "name": "EmergencyStop",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3054,
                            "src": "12665:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12665:30:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3839,
                        "nodeType": "EmitStatement",
                        "src": "12660:35:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3809,
                    "nodeType": "StructuredDocumentation",
                    "src": "12330:54:24",
                    "text": " @dev Activa el modo de emergencia"
                  },
                  "functionSelector": "63a599a4",
                  "id": 3841,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3812,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3811,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "12432:9:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "12432:9:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12432:9:24"
                    }
                  ],
                  "name": "emergencyStop",
                  "nameLocation": "12399:13:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3810,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12412:2:24"
                  },
                  "returnParameters": {
                    "id": 3813,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12442:0:24"
                  },
                  "scope": 4344,
                  "src": "12390:313:24",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3882,
                    "nodeType": "Block",
                    "src": "12860:273:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 3852,
                                "name": "_newStrategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3845,
                                "src": "12883:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                                  "typeString": "contract IRewardStrategy"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                                  "typeString": "contract IRewardStrategy"
                                }
                              ],
                              "id": 3851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12875:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3850,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12875:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12875:21:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 3856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12908:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 3855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12900:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 3854,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12900:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 3857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12900:10:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12875:35:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3862,
                        "nodeType": "IfStatement",
                        "src": "12871:81:24",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3859,
                              "name": "TokenFarm__InvalidConfiguration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3082,
                              "src": "12919:31:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12919:33:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3861,
                          "nodeType": "RevertStatement",
                          "src": "12912:40:24"
                        }
                      },
                      {
                        "assignments": [
                          3864
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3864,
                            "mutability": "mutable",
                            "name": "oldStrategy",
                            "nameLocation": "12981:11:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3882,
                            "src": "12973:19:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3863,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12973:7:24",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3869,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 3867,
                              "name": "rewardStrategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2930,
                              "src": "13003:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                                "typeString": "contract IRewardStrategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                                "typeString": "contract IRewardStrategy"
                              }
                            ],
                            "id": 3866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12995:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3865,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12995:7:24",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12995:23:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12973:45:24"
                      },
                      {
                        "expression": {
                          "id": 3872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3870,
                            "name": "rewardStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2930,
                            "src": "13029:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                              "typeString": "contract IRewardStrategy"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3871,
                            "name": "_newStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3845,
                            "src": "13046:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                              "typeString": "contract IRewardStrategy"
                            }
                          },
                          "src": "13029:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                            "typeString": "contract IRewardStrategy"
                          }
                        },
                        "id": 3873,
                        "nodeType": "ExpressionStatement",
                        "src": "13029:29:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3875,
                              "name": "oldStrategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3864,
                              "src": "13090:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 3878,
                                  "name": "_newStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3845,
                                  "src": "13111:12:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                                    "typeString": "contract IRewardStrategy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                                    "typeString": "contract IRewardStrategy"
                                  }
                                ],
                                "id": 3877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13103:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3876,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13103:7:24",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13103:21:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3874,
                            "name": "StrategyUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3050,
                            "src": "13074:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 3880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13074:51:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3881,
                        "nodeType": "EmitStatement",
                        "src": "13069:56:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3842,
                    "nodeType": "StructuredDocumentation",
                    "src": "12711:64:24",
                    "text": " @dev Actualiza la estrategia de recompensas"
                  },
                  "functionSelector": "06309e4b",
                  "id": 3883,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3848,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3847,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "12850:9:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "12850:9:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12850:9:24"
                    }
                  ],
                  "name": "updateRewardStrategy",
                  "nameLocation": "12790:20:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3846,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3845,
                        "mutability": "mutable",
                        "name": "_newStrategy",
                        "nameLocation": "12827:12:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3883,
                        "src": "12811:28:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                          "typeString": "contract IRewardStrategy"
                        },
                        "typeName": {
                          "id": 3844,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 3843,
                            "name": "IRewardStrategy",
                            "nameLocations": [
                              "12811:15:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2839,
                            "src": "12811:15:24"
                          },
                          "referencedDeclaration": 2839,
                          "src": "12811:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                            "typeString": "contract IRewardStrategy"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12810:30:24"
                  },
                  "returnParameters": {
                    "id": 3849,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12860:0:24"
                  },
                  "scope": 4344,
                  "src": "12781:352:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3940,
                    "nodeType": "Block",
                    "src": "13345:426:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3895,
                            "name": "_min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3886,
                            "src": "13360:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3896,
                            "name": "_max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3888,
                            "src": "13367:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13360:11:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3901,
                        "nodeType": "IfStatement",
                        "src": "13356:57:24",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3898,
                              "name": "TokenFarm__InvalidConfiguration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3082,
                              "src": "13380:31:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13380:33:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3900,
                          "nodeType": "RevertStatement",
                          "src": "13373:40:24"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3902,
                            "name": "_feePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3890,
                            "src": "13428:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 3903,
                            "name": "MAX_FEE_PERCENT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2986,
                            "src": "13442:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13428:29:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3908,
                        "nodeType": "IfStatement",
                        "src": "13424:75:24",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3905,
                              "name": "TokenFarm__InvalidConfiguration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3082,
                              "src": "13466:31:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13466:33:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3907,
                          "nodeType": "RevertStatement",
                          "src": "13459:40:24"
                        }
                      },
                      {
                        "expression": {
                          "id": 3913,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3909,
                              "name": "rewardConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2942,
                              "src": "13520:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                "typeString": "struct TokenFarm.RewardConfig storage ref"
                              }
                            },
                            "id": 3911,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13533:11:24",
                            "memberName": "minPerBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2932,
                            "src": "13520:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3912,
                            "name": "_min",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3886,
                            "src": "13547:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13520:31:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3914,
                        "nodeType": "ExpressionStatement",
                        "src": "13520:31:24"
                      },
                      {
                        "expression": {
                          "id": 3919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3915,
                              "name": "rewardConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2942,
                              "src": "13562:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                "typeString": "struct TokenFarm.RewardConfig storage ref"
                              }
                            },
                            "id": 3917,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13575:11:24",
                            "memberName": "maxPerBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2934,
                            "src": "13562:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3918,
                            "name": "_max",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3888,
                            "src": "13589:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13562:31:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3920,
                        "nodeType": "ExpressionStatement",
                        "src": "13562:31:24"
                      },
                      {
                        "expression": {
                          "id": 3925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3921,
                              "name": "rewardConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2942,
                              "src": "13604:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                "typeString": "struct TokenFarm.RewardConfig storage ref"
                              }
                            },
                            "id": 3923,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13617:10:24",
                            "memberName": "feePercent",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2936,
                            "src": "13604:23:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3924,
                            "name": "_feePercent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3890,
                            "src": "13630:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13604:37:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3926,
                        "nodeType": "ExpressionStatement",
                        "src": "13604:37:24"
                      },
                      {
                        "expression": {
                          "id": 3932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 3927,
                              "name": "rewardConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2942,
                              "src": "13652:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                "typeString": "struct TokenFarm.RewardConfig storage ref"
                              }
                            },
                            "id": 3929,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "13665:10:24",
                            "memberName": "lastUpdate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2938,
                            "src": "13652:23:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3930,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "13678:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 3931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13684:9:24",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "13678:15:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13652:41:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3933,
                        "nodeType": "ExpressionStatement",
                        "src": "13652:41:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3935,
                              "name": "_min",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3886,
                              "src": "13739:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3936,
                              "name": "_max",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3888,
                              "src": "13745:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3937,
                              "name": "_feePercent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3890,
                              "src": "13751:11:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3934,
                            "name": "RewardConfigUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3036,
                            "src": "13719:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 3938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13719:44:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3939,
                        "nodeType": "EmitStatement",
                        "src": "13714:49:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3884,
                    "nodeType": "StructuredDocumentation",
                    "src": "13141:68:24",
                    "text": " @dev Actualiza la configuración de recompensas"
                  },
                  "functionSelector": "6f3ba889",
                  "id": 3941,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3893,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3892,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13335:9:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "13335:9:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13335:9:24"
                    }
                  ],
                  "name": "updateRewardConfig",
                  "nameLocation": "13224:18:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3891,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3886,
                        "mutability": "mutable",
                        "name": "_min",
                        "nameLocation": "13261:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3941,
                        "src": "13253:12:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13253:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3888,
                        "mutability": "mutable",
                        "name": "_max",
                        "nameLocation": "13284:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3941,
                        "src": "13276:12:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3887,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13276:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 3890,
                        "mutability": "mutable",
                        "name": "_feePercent",
                        "nameLocation": "13307:11:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3941,
                        "src": "13299:19:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3889,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13299:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13242:83:24"
                  },
                  "returnParameters": {
                    "id": 3894,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13345:0:24"
                  },
                  "scope": 4344,
                  "src": "13215:556:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3962,
                    "nodeType": "Block",
                    "src": "13908:139:24",
                    "statements": [
                      {
                        "assignments": [
                          3950
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3950,
                            "mutability": "mutable",
                            "name": "oldPeriod",
                            "nameLocation": "13927:9:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 3962,
                            "src": "13919:17:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3949,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13919:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3952,
                        "initialValue": {
                          "id": 3951,
                          "name": "lockPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2988,
                          "src": "13939:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13919:30:24"
                      },
                      {
                        "expression": {
                          "id": 3955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3953,
                            "name": "lockPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2988,
                            "src": "13960:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3954,
                            "name": "_newPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3944,
                            "src": "13973:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13960:23:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3956,
                        "nodeType": "ExpressionStatement",
                        "src": "13960:23:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 3958,
                              "name": "oldPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3950,
                              "src": "14017:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3959,
                              "name": "_newPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3944,
                              "src": "14028:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3957,
                            "name": "LockPeriodUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3060,
                            "src": "13999:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 3960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13999:40:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3961,
                        "nodeType": "EmitStatement",
                        "src": "13994:45:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3942,
                    "nodeType": "StructuredDocumentation",
                    "src": "13779:58:24",
                    "text": " @dev Actualiza el período de bloqueo"
                  },
                  "functionSelector": "91db7b0d",
                  "id": 3963,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3947,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3946,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "13898:9:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "13898:9:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13898:9:24"
                    }
                  ],
                  "name": "updateLockPeriod",
                  "nameLocation": "13852:16:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3945,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3944,
                        "mutability": "mutable",
                        "name": "_newPeriod",
                        "nameLocation": "13877:10:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3963,
                        "src": "13869:18:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 3943,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13869:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13868:20:24"
                  },
                  "returnParameters": {
                    "id": 3948,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13908:0:24"
                  },
                  "scope": 4344,
                  "src": "13843:204:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 3975,
                    "nodeType": "Block",
                    "src": "14200:54:24",
                    "statements": [
                      {
                        "expression": {
                          "id": 3973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3971,
                            "name": "emergencyWithdrawEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2990,
                            "src": "14211:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3972,
                            "name": "_enabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3966,
                            "src": "14238:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14211:35:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3974,
                        "nodeType": "ExpressionStatement",
                        "src": "14211:35:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3964,
                    "nodeType": "StructuredDocumentation",
                    "src": "14055:68:24",
                    "text": " @dev Habilita/deshabilita retiros de emergencia"
                  },
                  "functionSelector": "c74ad493",
                  "id": 3976,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3969,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3968,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "14190:9:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "14190:9:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14190:9:24"
                    }
                  ],
                  "name": "setEmergencyWithdrawEnabled",
                  "nameLocation": "14138:27:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3967,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 3966,
                        "mutability": "mutable",
                        "name": "_enabled",
                        "nameLocation": "14171:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 3976,
                        "src": "14166:13:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 3965,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "14166:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14165:15:24"
                  },
                  "returnParameters": {
                    "id": 3970,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14200:0:24"
                  },
                  "scope": 4344,
                  "src": "14129:125:24",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4023,
                    "nodeType": "Block",
                    "src": "14377:410:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 3984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3982,
                            "name": "collectedFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2946,
                            "src": "14392:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 3983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14409:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14392:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3988,
                        "nodeType": "IfStatement",
                        "src": "14388:50:24",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3985,
                              "name": "TokenFarm__NoFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3074,
                              "src": "14419:17:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 3986,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14419:19:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 3987,
                          "nodeType": "RevertStatement",
                          "src": "14412:26:24"
                        }
                      },
                      {
                        "assignments": [
                          3990
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3990,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "14467:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4023,
                            "src": "14459:14:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 3989,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "14459:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3992,
                        "initialValue": {
                          "id": 3991,
                          "name": "collectedFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2946,
                          "src": "14476:13:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14459:30:24"
                      },
                      {
                        "expression": {
                          "id": 3995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3993,
                            "name": "collectedFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2946,
                            "src": "14500:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 3994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14516:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14500:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3996,
                        "nodeType": "ExpressionStatement",
                        "src": "14500:17:24"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 3997,
                                "name": "dappToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2924,
                                "src": "14597:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_DappToken_$2630",
                                  "typeString": "contract DappToken"
                                }
                              },
                              "id": 3998,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14607:5:24",
                              "memberName": "owner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 736,
                              "src": "14597:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 3999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14597:17:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 4002,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "14626:4:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TokenFarm_$4344",
                                  "typeString": "contract TokenFarm"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TokenFarm_$4344",
                                  "typeString": "contract TokenFarm"
                                }
                              ],
                              "id": 4001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14618:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4000,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14618:7:24",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14618:13:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14597:34:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4008,
                        "nodeType": "IfStatement",
                        "src": "14593:80:24",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4005,
                              "name": "TokenFarm__InvalidConfiguration",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3082,
                              "src": "14640:31:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 4006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14640:33:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 4007,
                          "nodeType": "RevertStatement",
                          "src": "14633:40:24"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4012,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105,
                                "src": "14709:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14709:7:24",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4014,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3990,
                              "src": "14718:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4009,
                              "name": "dappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2924,
                              "src": "14694:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DappToken_$2630",
                                "typeString": "contract DappToken"
                              }
                            },
                            "id": 4011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14704:4:24",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2629,
                            "src": "14694:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 4015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14694:31:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4016,
                        "nodeType": "ExpressionStatement",
                        "src": "14694:31:24"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 4018,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3990,
                              "src": "14755:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4019,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "14763:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 4020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14769:9:24",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "14763:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4017,
                            "name": "FeesWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3028,
                            "src": "14741:13:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 4021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14741:38:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4022,
                        "nodeType": "EmitStatement",
                        "src": "14736:43:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 3977,
                    "nodeType": "StructuredDocumentation",
                    "src": "14262:58:24",
                    "text": " @dev Retira las comisiones acumuladas"
                  },
                  "functionSelector": "476343ee",
                  "id": 4024,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 3980,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 3979,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "14367:9:24"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "14367:9:24"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14367:9:24"
                    }
                  ],
                  "name": "withdrawFees",
                  "nameLocation": "14335:12:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 3978,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14347:2:24"
                  },
                  "returnParameters": {
                    "id": 3981,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14377:0:24"
                  },
                  "scope": 4344,
                  "src": "14326:461:24",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4037,
                    "nodeType": "Block",
                    "src": "14984:47:24",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 4033,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "15002:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 4035,
                          "indexExpression": {
                            "id": 4034,
                            "name": "userAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4027,
                            "src": "15014:8:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15002:21:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "functionReturnParameters": 4032,
                        "id": 4036,
                        "nodeType": "Return",
                        "src": "14995:28:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4025,
                    "nodeType": "StructuredDocumentation",
                    "src": "14832:69:24",
                    "text": " @dev Obtiene información completa de un usuario"
                  },
                  "functionSelector": "6386c1c7",
                  "id": 4038,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserInfo",
                  "nameLocation": "14916:11:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4028,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4027,
                        "mutability": "mutable",
                        "name": "userAddr",
                        "nameLocation": "14936:8:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4038,
                        "src": "14928:16:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4026,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14928:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14927:18:24"
                  },
                  "returnParameters": {
                    "id": 4032,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4031,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4038,
                        "src": "14969:13:24",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                          "typeString": "struct TokenFarm.Staker"
                        },
                        "typeName": {
                          "id": 4030,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4029,
                            "name": "Staker",
                            "nameLocations": [
                              "14969:6:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2965,
                            "src": "14969:6:24"
                          },
                          "referencedDeclaration": 2965,
                          "src": "14969:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                            "typeString": "struct TokenFarm.Staker"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14968:15:24"
                  },
                  "scope": 4344,
                  "src": "14907:124:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4092,
                    "nodeType": "Block",
                    "src": "15341:413:24",
                    "statements": [
                      {
                        "assignments": [
                          4056
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4056,
                            "mutability": "mutable",
                            "name": "active",
                            "nameLocation": "15360:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4092,
                            "src": "15352:14:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4055,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15352:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4058,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 4057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15369:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15352:18:24"
                      },
                      {
                        "body": {
                          "id": 4081,
                          "nodeType": "Block",
                          "src": "15426:108:24",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 4070,
                                    "name": "stakersData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2973,
                                    "src": "15445:11:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                                      "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                                    }
                                  },
                                  "id": 4074,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 4071,
                                      "name": "stakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2968,
                                      "src": "15457:7:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 4073,
                                    "indexExpression": {
                                      "id": 4072,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4060,
                                      "src": "15465:1:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "15457:10:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15445:23:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Staker_$2965_storage",
                                    "typeString": "struct TokenFarm.Staker storage ref"
                                  }
                                },
                                "id": 4075,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15469:9:24",
                                "memberName": "isStaking",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2964,
                                "src": "15445:33:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4080,
                              "nodeType": "IfStatement",
                              "src": "15441:82:24",
                              "trueBody": {
                                "id": 4079,
                                "nodeType": "Block",
                                "src": "15480:43:24",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 4077,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "15499:8:24",
                                      "subExpression": {
                                        "id": 4076,
                                        "name": "active",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4056,
                                        "src": "15499:6:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4078,
                                    "nodeType": "ExpressionStatement",
                                    "src": "15499:8:24"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4063,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4060,
                            "src": "15401:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 4064,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2968,
                              "src": "15405:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15413:6:24",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "15405:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15401:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4082,
                        "initializationExpression": {
                          "assignments": [
                            4060
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4060,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "15394:1:24",
                              "nodeType": "VariableDeclaration",
                              "scope": 4082,
                              "src": "15386:9:24",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4059,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "15386:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4062,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 4061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15398:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "15386:13:24"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 4068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "15421:3:24",
                            "subExpression": {
                              "id": 4067,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4060,
                              "src": "15421:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4069,
                          "nodeType": "ExpressionStatement",
                          "src": "15421:3:24"
                        },
                        "nodeType": "ForStatement",
                        "src": "15381:153:24"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 4083,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2968,
                                "src": "15576:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 4084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15584:6:24",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "15576:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4085,
                              "name": "totalStakingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2944,
                              "src": "15605:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4086,
                              "name": "collectedFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2946,
                              "src": "15639:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4087,
                              "name": "totalRewardsDistributed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2948,
                              "src": "15667:23:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4088,
                              "name": "farmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "15705:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            {
                              "id": 4089,
                              "name": "active",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4056,
                              "src": "15729:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4090,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "15561:185:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_FarmState_$2821_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256,uint256,enum FarmState,uint256)"
                          }
                        },
                        "functionReturnParameters": 4054,
                        "id": 4091,
                        "nodeType": "Return",
                        "src": "15554:192:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4039,
                    "nodeType": "StructuredDocumentation",
                    "src": "15039:60:24",
                    "text": " @dev Obtiene estadísticas del contrato"
                  },
                  "functionSelector": "dfe6b5d6",
                  "id": 4093,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getContractStats",
                  "nameLocation": "15114:16:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4040,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15130:2:24"
                  },
                  "returnParameters": {
                    "id": 4054,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4042,
                        "mutability": "mutable",
                        "name": "totalStakers",
                        "nameLocation": "15174:12:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "15166:20:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4041,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15166:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4044,
                        "mutability": "mutable",
                        "name": "totalStaked",
                        "nameLocation": "15205:11:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "15197:19:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4043,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15197:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4046,
                        "mutability": "mutable",
                        "name": "totalFees",
                        "nameLocation": "15235:9:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "15227:17:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4045,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15227:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4048,
                        "mutability": "mutable",
                        "name": "totalRewards",
                        "nameLocation": "15263:12:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "15255:20:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4047,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15255:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4051,
                        "mutability": "mutable",
                        "name": "state",
                        "nameLocation": "15296:5:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "15286:15:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_FarmState_$2821",
                          "typeString": "enum FarmState"
                        },
                        "typeName": {
                          "id": 4050,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 4049,
                            "name": "FarmState",
                            "nameLocations": [
                              "15286:9:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2821,
                            "src": "15286:9:24"
                          },
                          "referencedDeclaration": 2821,
                          "src": "15286:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4053,
                        "mutability": "mutable",
                        "name": "activeStakers",
                        "nameLocation": "15320:13:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4093,
                        "src": "15312:21:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4052,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15312:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15155:185:24"
                  },
                  "scope": 4344,
                  "src": "15105:649:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4152,
                    "nodeType": "Block",
                    "src": "15976:561:24",
                    "statements": [
                      {
                        "assignments": [
                          4105
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4105,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "16001:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4152,
                            "src": "15987:20:24",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                              "typeString": "struct TokenFarm.Staker"
                            },
                            "typeName": {
                              "id": 4104,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4103,
                                "name": "Staker",
                                "nameLocations": [
                                  "15987:6:24"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2965,
                                "src": "15987:6:24"
                              },
                              "referencedDeclaration": 2965,
                              "src": "15987:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4109,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4106,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "16010:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 4108,
                          "indexExpression": {
                            "id": 4107,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4096,
                            "src": "16022:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16010:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15987:40:24"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "16042:17:24",
                            "subExpression": {
                              "expression": {
                                "id": 4110,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4105,
                                "src": "16043:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                                  "typeString": "struct TokenFarm.Staker memory"
                                }
                              },
                              "id": 4111,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16050:9:24",
                              "memberName": "isStaking",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2964,
                              "src": "16043:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4115,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4113,
                              "name": "totalStakingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2944,
                              "src": "16063:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 4114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16086:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "16063:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "16042:45:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4123,
                        "nodeType": "IfStatement",
                        "src": "16038:111:24",
                        "trueBody": {
                          "id": 4122,
                          "nodeType": "Block",
                          "src": "16089:60:24",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "expression": {
                                      "id": 4117,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4105,
                                      "src": "16112:6:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                                        "typeString": "struct TokenFarm.Staker memory"
                                      }
                                    },
                                    "id": 4118,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "16119:14:24",
                                    "memberName": "pendingRewards",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2956,
                                    "src": "16112:21:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 4119,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "16135:1:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 4120,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "16111:26:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(uint256,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 4102,
                              "id": 4121,
                              "nodeType": "Return",
                              "src": "16104:33:24"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4125
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4125,
                            "mutability": "mutable",
                            "name": "blocksPassed",
                            "nameLocation": "16169:12:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4152,
                            "src": "16161:20:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4124,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16161:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4131,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4126,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "16184:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 4127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16190:6:24",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "16184:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 4128,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4105,
                              "src": "16199:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                                "typeString": "struct TokenFarm.Staker memory"
                              }
                            },
                            "id": 4129,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16206:10:24",
                            "memberName": "checkpoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2954,
                            "src": "16199:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16184:32:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16161:55:24"
                      },
                      {
                        "assignments": [
                          4133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4133,
                            "mutability": "mutable",
                            "name": "projected",
                            "nameLocation": "16235:9:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4152,
                            "src": "16227:17:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4132,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16227:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4146,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 4136,
                              "name": "blocksPassed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4125,
                              "src": "16292:12:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4137,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4105,
                                "src": "16319:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                                  "typeString": "struct TokenFarm.Staker memory"
                                }
                              },
                              "id": 4138,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16326:7:24",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2952,
                              "src": "16319:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4139,
                              "name": "totalStakingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2944,
                              "src": "16348:19:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4140,
                                "name": "rewardConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2942,
                                "src": "16382:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                  "typeString": "struct TokenFarm.RewardConfig storage ref"
                                }
                              },
                              "id": 4141,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16395:11:24",
                              "memberName": "minPerBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2932,
                              "src": "16382:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 4142,
                                "name": "rewardConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2942,
                                "src": "16421:12:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                  "typeString": "struct TokenFarm.RewardConfig storage ref"
                                }
                              },
                              "id": 4143,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16434:11:24",
                              "memberName": "maxPerBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2934,
                              "src": "16421:24:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4144,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4096,
                              "src": "16460:4:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4134,
                              "name": "rewardStrategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2930,
                              "src": "16247:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IRewardStrategy_$2839",
                                "typeString": "contract IRewardStrategy"
                              }
                            },
                            "id": 4135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16262:15:24",
                            "memberName": "calculateReward",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2838,
                            "src": "16247:30:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,uint256,uint256,uint256,address) view external returns (uint256)"
                            }
                          },
                          "id": 4145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16247:228:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16227:248:24"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "expression": {
                                "id": 4147,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4105,
                                "src": "16496:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                                  "typeString": "struct TokenFarm.Staker memory"
                                }
                              },
                              "id": 4148,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16503:14:24",
                              "memberName": "pendingRewards",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2956,
                              "src": "16496:21:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4149,
                              "name": "projected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4133,
                              "src": "16519:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4150,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16495:34:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 4102,
                        "id": 4151,
                        "nodeType": "Return",
                        "src": "16488:41:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4094,
                    "nodeType": "StructuredDocumentation",
                    "src": "15762:71:24",
                    "text": " @dev Simula las recompensas actuales y proyectadas"
                  },
                  "functionSelector": "7bbfffa5",
                  "id": 4153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "simulateRewards",
                  "nameLocation": "15848:15:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4097,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4096,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "15872:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4153,
                        "src": "15864:12:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4095,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15864:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15863:14:24"
                  },
                  "returnParameters": {
                    "id": 4102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4099,
                        "mutability": "mutable",
                        "name": "pendingRewards",
                        "nameLocation": "15919:14:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4153,
                        "src": "15911:22:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4098,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15911:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4101,
                        "mutability": "mutable",
                        "name": "projectedRewards",
                        "nameLocation": "15952:16:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4153,
                        "src": "15944:24:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4100,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15944:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15900:75:24"
                  },
                  "scope": 4344,
                  "src": "15839:698:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4195,
                    "nodeType": "Block",
                    "src": "16694:458:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4159,
                            "name": "totalStakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2944,
                            "src": "16709:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16732:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "16709:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4164,
                        "nodeType": "IfStatement",
                        "src": "16705:38:24",
                        "trueBody": {
                          "expression": {
                            "hexValue": "30",
                            "id": 4162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16742:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 4158,
                          "id": 4163,
                          "nodeType": "Return",
                          "src": "16735:8:24"
                        }
                      },
                      {
                        "assignments": [
                          4166
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4166,
                            "mutability": "mutable",
                            "name": "avgRewardPerBlock",
                            "nameLocation": "16829:17:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4195,
                            "src": "16821:25:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4165,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16821:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4175,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4167,
                                    "name": "rewardConfig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2942,
                                    "src": "16850:12:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                      "typeString": "struct TokenFarm.RewardConfig storage ref"
                                    }
                                  },
                                  "id": 4168,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16863:11:24",
                                  "memberName": "minPerBlock",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2932,
                                  "src": "16850:24:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "id": 4169,
                                    "name": "rewardConfig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2942,
                                    "src": "16877:12:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardConfig_$2939_storage",
                                      "typeString": "struct TokenFarm.RewardConfig storage ref"
                                    }
                                  },
                                  "id": 4170,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "16890:11:24",
                                  "memberName": "maxPerBlock",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2934,
                                  "src": "16877:24:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16850:51:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4172,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "16849:53:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 4173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16905:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "16849:57:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16821:85:24"
                      },
                      {
                        "assignments": [
                          4177
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4177,
                            "mutability": "mutable",
                            "name": "dailyRewards",
                            "nameLocation": "16925:12:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4195,
                            "src": "16917:20:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4176,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16917:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4181,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4178,
                            "name": "avgRewardPerBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4166,
                            "src": "16940:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "36303030",
                            "id": 4179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16960:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6000_by_1",
                              "typeString": "int_const 6000"
                            },
                            "value": "6000"
                          },
                          "src": "16940:24:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16917:47:24"
                      },
                      {
                        "assignments": [
                          4183
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4183,
                            "mutability": "mutable",
                            "name": "yearlyRewards",
                            "nameLocation": "16983:13:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4195,
                            "src": "16975:21:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4182,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "16975:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4187,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4184,
                            "name": "dailyRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4177,
                            "src": "16999:12:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "333635",
                            "id": 4185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17014:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_365_by_1",
                              "typeString": "int_const 365"
                            },
                            "value": "365"
                          },
                          "src": "16999:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16975:42:24"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4188,
                                  "name": "yearlyRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4183,
                                  "src": "17102:13:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 4189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17118:3:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "17102:19:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4191,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "17101:21:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 4192,
                            "name": "totalStakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2944,
                            "src": "17125:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17101:43:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4158,
                        "id": 4194,
                        "nodeType": "Return",
                        "src": "17094:50:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4154,
                    "nodeType": "StructuredDocumentation",
                    "src": "16545:84:24",
                    "text": " @dev Calcula la APY estimada basada en la configuración actual"
                  },
                  "functionSelector": "ccaad55d",
                  "id": 4196,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getEstimatedAPY",
                  "nameLocation": "16644:15:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4155,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16659:2:24"
                  },
                  "returnParameters": {
                    "id": 4158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4157,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4196,
                        "src": "16685:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "16685:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16684:9:24"
                  },
                  "scope": 4344,
                  "src": "16635:517:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4260,
                    "nodeType": "Block",
                    "src": "17327:533:24",
                    "statements": [
                      {
                        "assignments": [
                          4208
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4208,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "17352:6:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4260,
                            "src": "17338:20:24",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                              "typeString": "struct TokenFarm.Staker"
                            },
                            "typeName": {
                              "id": 4207,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4206,
                                "name": "Staker",
                                "nameLocations": [
                                  "17338:6:24"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2965,
                                "src": "17338:6:24"
                              },
                              "referencedDeclaration": 2965,
                              "src": "17338:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4212,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4209,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "17361:11:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 4211,
                          "indexExpression": {
                            "id": 4210,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4199,
                            "src": "17373:4:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17361:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17338:40:24"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "17403:17:24",
                            "subExpression": {
                              "expression": {
                                "id": 4213,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4208,
                                "src": "17404:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                                  "typeString": "struct TokenFarm.Staker memory"
                                }
                              },
                              "id": 4214,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17411:9:24",
                              "memberName": "isStaking",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2964,
                              "src": "17404:16:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 4216,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4208,
                                "src": "17424:6:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                                  "typeString": "struct TokenFarm.Staker memory"
                                }
                              },
                              "id": 4217,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17431:7:24",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2952,
                              "src": "17424:14:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 4218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17442:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "17424:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "17403:40:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4226,
                        "nodeType": "IfStatement",
                        "src": "17399:90:24",
                        "trueBody": {
                          "id": 4225,
                          "nodeType": "Block",
                          "src": "17445:44:24",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 4221,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17468:5:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 4222,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17475:1:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 4223,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "17467:10:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 4205,
                              "id": 4224,
                              "nodeType": "Return",
                              "src": "17460:17:24"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          },
                          "id": 4230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4227,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "17513:9:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 4228,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "17526:9:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 4229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "17536:14:24",
                            "memberName": "EMERGENCY_STOP",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2820,
                            "src": "17526:24:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "17513:37:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4236,
                        "nodeType": "IfStatement",
                        "src": "17509:106:24",
                        "trueBody": {
                          "id": 4235,
                          "nodeType": "Block",
                          "src": "17552:63:24",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "id": 4231,
                                    "name": "emergencyWithdrawEnabled",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2990,
                                    "src": "17575:24:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 4232,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17601:1:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 4233,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "17574:29:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 4205,
                              "id": 4234,
                              "nodeType": "Return",
                              "src": "17567:36:24"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4237,
                            "name": "lockPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2988,
                            "src": "17639:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17653:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "17639:15:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4245,
                        "nodeType": "IfStatement",
                        "src": "17635:64:24",
                        "trueBody": {
                          "id": 4244,
                          "nodeType": "Block",
                          "src": "17656:43:24",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 4240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17679:4:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 4241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "17685:1:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 4242,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "17678:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 4205,
                              "id": 4243,
                              "nodeType": "Return",
                              "src": "17671:16:24"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4247
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4247,
                            "mutability": "mutable",
                            "name": "unlockTimestamp",
                            "nameLocation": "17727:15:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4260,
                            "src": "17719:23:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4246,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17719:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4252,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 4248,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4208,
                              "src": "17745:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_memory_ptr",
                                "typeString": "struct TokenFarm.Staker memory"
                              }
                            },
                            "id": 4249,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17752:16:24",
                            "memberName": "depositTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2960,
                            "src": "17745:23:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 4250,
                            "name": "lockPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2988,
                            "src": "17771:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17745:36:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17719:62:24"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 4253,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "17800:5:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 4254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "17806:9:24",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "17800:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 4255,
                                "name": "unlockTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4247,
                                "src": "17819:15:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17800:34:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 4257,
                              "name": "unlockTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4247,
                              "src": "17836:15:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 4258,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17799:53:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                            "typeString": "tuple(bool,uint256)"
                          }
                        },
                        "functionReturnParameters": 4205,
                        "id": 4259,
                        "nodeType": "Return",
                        "src": "17792:60:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4197,
                    "nodeType": "StructuredDocumentation",
                    "src": "17160:62:24",
                    "text": " @dev Verifica si un usuario puede retirar"
                  },
                  "functionSelector": "19262d30",
                  "id": 4261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "canWithdraw",
                  "nameLocation": "17237:11:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4199,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "17257:4:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4261,
                        "src": "17249:12:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4198,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17249:7:24",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17248:14:24"
                  },
                  "returnParameters": {
                    "id": 4205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4202,
                        "mutability": "mutable",
                        "name": "canWithdrawNow",
                        "nameLocation": "17291:14:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4261,
                        "src": "17286:19:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 4201,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "17286:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4204,
                        "mutability": "mutable",
                        "name": "unlockTime",
                        "nameLocation": "17315:10:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4261,
                        "src": "17307:18:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17307:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17285:41:24"
                  },
                  "scope": 4344,
                  "src": "17228:632:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 4342,
                    "nodeType": "Block",
                    "src": "18032:666:24",
                    "statements": [
                      {
                        "assignments": [
                          4269
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4269,
                            "mutability": "mutable",
                            "name": "activeCount",
                            "nameLocation": "18051:11:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4342,
                            "src": "18043:19:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4268,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18043:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4271,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 4270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18065:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18043:23:24"
                      },
                      {
                        "body": {
                          "id": 4294,
                          "nodeType": "Block",
                          "src": "18167:113:24",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 4283,
                                    "name": "stakersData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2973,
                                    "src": "18186:11:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                                      "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                                    }
                                  },
                                  "id": 4287,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 4284,
                                      "name": "stakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2968,
                                      "src": "18198:7:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 4286,
                                    "indexExpression": {
                                      "id": 4285,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4273,
                                      "src": "18206:1:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18198:10:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18186:23:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Staker_$2965_storage",
                                    "typeString": "struct TokenFarm.Staker storage ref"
                                  }
                                },
                                "id": 4288,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "18210:9:24",
                                "memberName": "isStaking",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2964,
                                "src": "18186:33:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4293,
                              "nodeType": "IfStatement",
                              "src": "18182:87:24",
                              "trueBody": {
                                "id": 4292,
                                "nodeType": "Block",
                                "src": "18221:48:24",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 4290,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "18240:13:24",
                                      "subExpression": {
                                        "id": 4289,
                                        "name": "activeCount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4269,
                                        "src": "18240:11:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4291,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18240:13:24"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4276,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4273,
                            "src": "18142:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 4277,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2968,
                              "src": "18146:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18154:6:24",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "18146:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18142:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4295,
                        "initializationExpression": {
                          "assignments": [
                            4273
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4273,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18135:1:24",
                              "nodeType": "VariableDeclaration",
                              "scope": 4295,
                              "src": "18127:9:24",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4272,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18127:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4275,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 4274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18139:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18127:13:24"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 4281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "18162:3:24",
                            "subExpression": {
                              "id": 4280,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4273,
                              "src": "18162:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4282,
                          "nodeType": "ExpressionStatement",
                          "src": "18162:3:24"
                        },
                        "nodeType": "ForStatement",
                        "src": "18122:158:24"
                      },
                      {
                        "expression": {
                          "id": 4302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4296,
                            "name": "activeStakersList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4266,
                            "src": "18343:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 4300,
                                "name": "activeCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4269,
                                "src": "18377:11:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "18363:13:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (address[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 4297,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "18367:7:24",
                                  "stateMutability": "nonpayable",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 4298,
                                "nodeType": "ArrayTypeName",
                                "src": "18367:9:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                  "typeString": "address[]"
                                }
                              }
                            },
                            "id": 4301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18363:26:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "18343:46:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 4303,
                        "nodeType": "ExpressionStatement",
                        "src": "18343:46:24"
                      },
                      {
                        "assignments": [
                          4305
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4305,
                            "mutability": "mutable",
                            "name": "index",
                            "nameLocation": "18408:5:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4342,
                            "src": "18400:13:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4304,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18400:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4307,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 4306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18416:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18400:17:24"
                      },
                      {
                        "body": {
                          "id": 4338,
                          "nodeType": "Block",
                          "src": "18483:163:24",
                          "statements": [
                            {
                              "condition": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 4319,
                                    "name": "stakersData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2973,
                                    "src": "18502:11:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                                      "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                                    }
                                  },
                                  "id": 4323,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 4320,
                                      "name": "stakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2968,
                                      "src": "18514:7:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 4322,
                                    "indexExpression": {
                                      "id": 4321,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4309,
                                      "src": "18522:1:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "18514:10:24",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "18502:23:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Staker_$2965_storage",
                                    "typeString": "struct TokenFarm.Staker storage ref"
                                  }
                                },
                                "id": 4324,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "18526:9:24",
                                "memberName": "isStaking",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2964,
                                "src": "18502:33:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4337,
                              "nodeType": "IfStatement",
                              "src": "18498:137:24",
                              "trueBody": {
                                "id": 4336,
                                "nodeType": "Block",
                                "src": "18537:98:24",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 4331,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 4325,
                                          "name": "activeStakersList",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4266,
                                          "src": "18556:17:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                            "typeString": "address[] memory"
                                          }
                                        },
                                        "id": 4327,
                                        "indexExpression": {
                                          "id": 4326,
                                          "name": "index",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4305,
                                          "src": "18574:5:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "18556:24:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 4328,
                                          "name": "stakers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2968,
                                          "src": "18583:7:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 4330,
                                        "indexExpression": {
                                          "id": 4329,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4309,
                                          "src": "18591:1:24",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "18583:10:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "18556:37:24",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 4332,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18556:37:24"
                                  },
                                  {
                                    "expression": {
                                      "id": 4334,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "18612:7:24",
                                      "subExpression": {
                                        "id": 4333,
                                        "name": "index",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4305,
                                        "src": "18612:5:24",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4335,
                                    "nodeType": "ExpressionStatement",
                                    "src": "18612:7:24"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4312,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4309,
                            "src": "18458:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 4313,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2968,
                              "src": "18462:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 4314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18470:6:24",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "18462:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18458:18:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4339,
                        "initializationExpression": {
                          "assignments": [
                            4309
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 4309,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "18451:1:24",
                              "nodeType": "VariableDeclaration",
                              "scope": 4339,
                              "src": "18443:9:24",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 4308,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "18443:7:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 4311,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 4310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18455:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "18443:13:24"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 4317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "18478:3:24",
                            "subExpression": {
                              "id": 4316,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4309,
                              "src": "18478:1:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4318,
                          "nodeType": "ExpressionStatement",
                          "src": "18478:3:24"
                        },
                        "nodeType": "ForStatement",
                        "src": "18438:208:24"
                      },
                      {
                        "expression": {
                          "id": 4340,
                          "name": "activeStakersList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4266,
                          "src": "18673:17:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "functionReturnParameters": 4267,
                        "id": 4341,
                        "nodeType": "Return",
                        "src": "18666:24:24"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4262,
                    "nodeType": "StructuredDocumentation",
                    "src": "17868:71:24",
                    "text": " @dev Obtiene la lista de todos los stakers activos"
                  },
                  "functionSelector": "9fb82db9",
                  "id": 4343,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getActiveStakers",
                  "nameLocation": "17954:16:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17970:2:24"
                  },
                  "returnParameters": {
                    "id": 4267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4266,
                        "mutability": "mutable",
                        "name": "activeStakersList",
                        "nameLocation": "18013:17:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4343,
                        "src": "17996:34:24",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 4264,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17996:7:24",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 4265,
                          "nodeType": "ArrayTypeName",
                          "src": "17996:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17995:36:24"
                  },
                  "scope": 4344,
                  "src": "17945:753:24",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 4446,
              "src": "1437:17264:24",
              "usedErrors": [
                30,
                35,
                211,
                214,
                547,
                550,
                3062,
                3064,
                3066,
                3068,
                3070,
                3072,
                3074,
                3076,
                3078,
                3080,
                3082
              ],
              "usedEvents": [
                41,
                219,
                539,
                544,
                2998,
                3006,
                3014,
                3022,
                3028,
                3036,
                3044,
                3050,
                3054,
                3060
              ]
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SafeMath",
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 4445,
              "linearizedBaseContracts": [
                4445
              ],
              "name": "SafeMath",
              "nameLocation": "18747:8:24",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 4368,
                    "nodeType": "Block",
                    "src": "18830:112:24",
                    "statements": [
                      {
                        "assignments": [
                          4354
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4354,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "18849:1:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4368,
                            "src": "18841:9:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4353,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18841:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4358,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4355,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4346,
                            "src": "18853:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 4356,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4348,
                            "src": "18857:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18853:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18841:17:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4360,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4354,
                                "src": "18877:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 4361,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4346,
                                "src": "18882:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "18877:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                              "id": 4363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18885:29:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              },
                              "value": "SafeMath: addition overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              }
                            ],
                            "id": 4359,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "18869:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18869:46:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4365,
                        "nodeType": "ExpressionStatement",
                        "src": "18869:46:24"
                      },
                      {
                        "expression": {
                          "id": 4366,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4354,
                          "src": "18933:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4352,
                        "id": 4367,
                        "nodeType": "Return",
                        "src": "18926:8:24"
                      }
                    ]
                  },
                  "id": 4369,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nameLocation": "18772:3:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4346,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "18784:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4369,
                        "src": "18776:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4345,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18776:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4348,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "18795:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4369,
                        "src": "18787:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18787:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18775:22:24"
                  },
                  "returnParameters": {
                    "id": 4352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4369,
                        "src": "18821:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4350,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18821:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18820:9:24"
                  },
                  "scope": 4445,
                  "src": "18763:179:24",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4389,
                    "nodeType": "Block",
                    "src": "19017:91:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4379,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4373,
                                "src": "19036:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 4380,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4371,
                                "src": "19041:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19036:6:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                              "id": 4382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19044:32:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              },
                              "value": "SafeMath: subtraction overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              }
                            ],
                            "id": 4378,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19028:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19028:49:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4384,
                        "nodeType": "ExpressionStatement",
                        "src": "19028:49:24"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4385,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4371,
                            "src": "19095:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 4386,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4373,
                            "src": "19099:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19095:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4377,
                        "id": 4388,
                        "nodeType": "Return",
                        "src": "19088:12:24"
                      }
                    ]
                  },
                  "id": 4390,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "18959:3:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4371,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "18971:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4390,
                        "src": "18963:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18963:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4373,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "18982:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4390,
                        "src": "18974:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18974:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18962:22:24"
                  },
                  "returnParameters": {
                    "id": 4377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4376,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4390,
                        "src": "19008:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4375,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19008:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19007:9:24"
                  },
                  "scope": 4445,
                  "src": "18950:158:24",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4422,
                    "nodeType": "Block",
                    "src": "19183:153:24",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4399,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4392,
                            "src": "19198:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19203:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "19198:6:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4404,
                        "nodeType": "IfStatement",
                        "src": "19194:20:24",
                        "trueBody": {
                          "expression": {
                            "hexValue": "30",
                            "id": 4402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "19213:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "functionReturnParameters": 4398,
                          "id": 4403,
                          "nodeType": "Return",
                          "src": "19206:8:24"
                        }
                      },
                      {
                        "assignments": [
                          4406
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4406,
                            "mutability": "mutable",
                            "name": "c",
                            "nameLocation": "19233:1:24",
                            "nodeType": "VariableDeclaration",
                            "scope": 4422,
                            "src": "19225:9:24",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4405,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "19225:7:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4410,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4407,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4392,
                            "src": "19237:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 4408,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4394,
                            "src": "19241:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19237:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "19225:17:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4414,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4412,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4406,
                                  "src": "19261:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 4413,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4392,
                                  "src": "19265:1:24",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "19261:5:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 4415,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4394,
                                "src": "19270:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "19261:10:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                              "id": 4417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19273:35:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              },
                              "value": "SafeMath: multiplication overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              }
                            ],
                            "id": 4411,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19253:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19253:56:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4419,
                        "nodeType": "ExpressionStatement",
                        "src": "19253:56:24"
                      },
                      {
                        "expression": {
                          "id": 4420,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4406,
                          "src": "19327:1:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4398,
                        "id": 4421,
                        "nodeType": "Return",
                        "src": "19320:8:24"
                      }
                    ]
                  },
                  "id": 4423,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "19125:3:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4395,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4392,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "19137:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4423,
                        "src": "19129:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4391,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19129:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4394,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "19148:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4423,
                        "src": "19140:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4393,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19140:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19128:22:24"
                  },
                  "returnParameters": {
                    "id": 4398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4397,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4423,
                        "src": "19174:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19174:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19173:9:24"
                  },
                  "scope": 4445,
                  "src": "19116:220:24",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4443,
                    "nodeType": "Block",
                    "src": "19411:86:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4433,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4427,
                                "src": "19430:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 4434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19434:1:24",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "19430:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                              "id": 4436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19437:28:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              },
                              "value": "SafeMath: division by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              }
                            ],
                            "id": 4432,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19422:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19422:44:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4438,
                        "nodeType": "ExpressionStatement",
                        "src": "19422:44:24"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4439,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4425,
                            "src": "19484:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 4440,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4427,
                            "src": "19488:1:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "19484:5:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4431,
                        "id": 4442,
                        "nodeType": "Return",
                        "src": "19477:12:24"
                      }
                    ]
                  },
                  "id": 4444,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "19353:3:24",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4425,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "19365:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4444,
                        "src": "19357:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4424,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19357:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4427,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "19376:1:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 4444,
                        "src": "19368:9:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4426,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19368:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19356:22:24"
                  },
                  "returnParameters": {
                    "id": 4431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4430,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4444,
                        "src": "19402:7:24",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4429,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19402:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19401:9:24"
                  },
                  "scope": 4445,
                  "src": "19344:153:24",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 4446,
              "src": "18739:761:24",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "33:19467:24"
        },
        "id": 24
      },
      "contracts/TokenFarmV2.sol": {
        "ast": {
          "absolutePath": "contracts/TokenFarmV2.sol",
          "exportedSymbols": {
            "AlreadyInitialized": [
              4459
            ],
            "ContextUpgradeable": [
              508
            ],
            "DappToken": [
              2630
            ],
            "ERC20": [
              2051
            ],
            "FarmState": [
              2821
            ],
            "FundsLocked": [
              4457
            ],
            "IRewardStrategy": [
              2839
            ],
            "ITokenFarm": [
              4465
            ],
            "Initializable": [
              462
            ],
            "InvalidAddress": [
              4455
            ],
            "InvalidFeeValue": [
              4451
            ],
            "LPToken": [
              2669
            ],
            "Ownable": [
              816
            ],
            "OwnableUpgradeable": [
              194
            ],
            "PausableUpgradeable": [
              668
            ],
            "ProportionalVariableStrategy": [
              2905
            ],
            "SafeMath": [
              4445
            ],
            "TokenFarm": [
              4344
            ],
            "TokenFarmV2": [
              5282
            ],
            "Unauthorized": [
              4453
            ]
          },
          "id": 5283,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 4447,
              "literals": [
                "solidity",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:25"
            },
            {
              "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
              "id": 4448,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 5283,
              "sourceUnit": 463,
              "src": "60:75:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/TokenFarm.sol",
              "file": "./TokenFarm.sol",
              "id": 4449,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 5283,
              "sourceUnit": 4446,
              "src": "137:25:25",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "errorSelector": "ac98d7e1",
              "id": 4451,
              "name": "InvalidFeeValue",
              "nameLocation": "190:15:25",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 4450,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "205:2:25"
              },
              "src": "184:24:25"
            },
            {
              "errorSelector": "82b42900",
              "id": 4453,
              "name": "Unauthorized",
              "nameLocation": "216:12:25",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 4452,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "228:2:25"
              },
              "src": "210:21:25"
            },
            {
              "errorSelector": "e6c4247b",
              "id": 4455,
              "name": "InvalidAddress",
              "nameLocation": "239:14:25",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 4454,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "253:2:25"
              },
              "src": "233:23:25"
            },
            {
              "errorSelector": "437b0392",
              "id": 4457,
              "name": "FundsLocked",
              "nameLocation": "264:11:25",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 4456,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "275:2:25"
              },
              "src": "258:20:25"
            },
            {
              "errorSelector": "0dc149f0",
              "id": 4459,
              "name": "AlreadyInitialized",
              "nameLocation": "286:18:25",
              "nodeType": "ErrorDefinition",
              "parameters": {
                "id": 4458,
                "nodeType": "ParameterList",
                "parameters": [],
                "src": "304:2:25"
              },
              "src": "280:27:25"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ITokenFarm",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 4465,
              "linearizedBaseContracts": [
                4465
              ],
              "name": "ITokenFarm",
              "nameLocation": "321:10:25",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "b6b55f25",
                  "id": 4464,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "348:7:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4462,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4461,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "364:7:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4464,
                        "src": "356:15:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4460,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "356:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "355:17:25"
                  },
                  "returnParameters": {
                    "id": 4463,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "381:0:25"
                  },
                  "scope": 4465,
                  "src": "339:43:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 5283,
              "src": "311:74:25",
              "usedErrors": [],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 4466,
                    "name": "TokenFarm",
                    "nameLocations": [
                      "413:9:25"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 4344,
                    "src": "413:9:25"
                  },
                  "id": 4467,
                  "nodeType": "InheritanceSpecifier",
                  "src": "413:9:25"
                }
              ],
              "canonicalName": "TokenFarmV2",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 5282,
              "linearizedBaseContracts": [
                5282,
                4344,
                668,
                194,
                508,
                462
              ],
              "name": "TokenFarmV2",
              "nameLocation": "398:11:25",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "e941fa78",
                  "id": 4469,
                  "mutability": "mutable",
                  "name": "withdrawFee",
                  "nameLocation": "516:11:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "501:26:25",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "99d32fc4",
                  "id": 4471,
                  "mutability": "mutable",
                  "name": "claimFee",
                  "nameLocation": "549:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "534:23:25",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "534:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c415b95c",
                  "id": 4473,
                  "mutability": "mutable",
                  "name": "feeCollector",
                  "nameLocation": "579:12:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "564:27:25",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4472,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "564:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1568b169",
                  "id": 4475,
                  "mutability": "mutable",
                  "name": "collectedLpFees",
                  "nameLocation": "613:15:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "598:30:25",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "26712743",
                  "id": 4477,
                  "mutability": "mutable",
                  "name": "collectedDappFees",
                  "nameLocation": "684:17:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "669:32:25",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "669:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8ae39cac",
                  "id": 4479,
                  "mutability": "mutable",
                  "name": "rewardPerBlock",
                  "nameLocation": "746:14:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "731:29:25",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d4b0de2f",
                  "id": 4482,
                  "mutability": "constant",
                  "name": "MAX_WITHDRAW_FEE",
                  "nameLocation": "837:16:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "813:47:25",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31303030",
                    "id": 4481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "856:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "46800f75",
                  "id": 4485,
                  "mutability": "constant",
                  "name": "MAX_CLAIM_FEE",
                  "nameLocation": "901:13:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "877:44:25",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31303030",
                    "id": 4484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "917:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000_by_1",
                      "typeString": "int_const 1000"
                    },
                    "value": "1000"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "e1f1c4a7",
                  "id": 4488,
                  "mutability": "constant",
                  "name": "BASIS_POINTS",
                  "nameLocation": "965:12:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 5282,
                  "src": "941:44:25",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "3130303030",
                    "id": 4487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "980:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000_by_1",
                      "typeString": "int_const 10000"
                    },
                    "value": "10000"
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "eb6ddaf71011472a18676020a53f58d8146f6997849d9b61afe146fe79ab0bd9",
                  "id": 4496,
                  "name": "RewardsClaimedV2",
                  "nameLocation": "1029:16:25",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4495,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4490,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1062:4:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4496,
                        "src": "1046:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4489,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1046:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4492,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1076:6:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4496,
                        "src": "1068:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4491,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1068:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4494,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "1092:3:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4496,
                        "src": "1084:11:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4493,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1084:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1045:51:25"
                  },
                  "src": "1023:74:25"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1d1349746d782d6dfc3ee165ba93babd914b7585e3d3e5497614f9fe0eb3fc1c",
                  "id": 4502,
                  "name": "FeesWithdrawnV2",
                  "nameLocation": "1109:15:25",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4498,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1133:6:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4502,
                        "src": "1125:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4497,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1125:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4500,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "collector",
                        "nameLocation": "1157:9:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4502,
                        "src": "1141:25:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4499,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1141:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1124:43:25"
                  },
                  "src": "1103:65:25"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1e2e6257ac7187b1133b17d3e1e24c28bc4f84273e03229e9fac633c1705dc5f",
                  "id": 4508,
                  "name": "LpFeesWithdrawn",
                  "nameLocation": "1180:15:25",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4507,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4504,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1204:6:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4508,
                        "src": "1196:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4503,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1196:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4506,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "collector",
                        "nameLocation": "1228:9:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4508,
                        "src": "1212:25:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4505,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1212:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1195:43:25"
                  },
                  "src": "1174:65:25"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1",
                  "id": 4514,
                  "name": "FeesUpdated",
                  "nameLocation": "1251:11:25",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4510,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newWithdrawFee",
                        "nameLocation": "1271:14:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4514,
                        "src": "1263:22:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4509,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1263:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4512,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newClaimFee",
                        "nameLocation": "1295:11:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4514,
                        "src": "1287:19:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1287:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1262:45:25"
                  },
                  "src": "1245:63:25"
                },
                {
                  "anonymous": false,
                  "eventSelector": "e5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f",
                  "id": 4518,
                  "name": "FeeCollectorUpdated",
                  "nameLocation": "1320:19:25",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4516,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newCollector",
                        "nameLocation": "1348:12:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4518,
                        "src": "1340:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4515,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1340:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1339:22:25"
                  },
                  "src": "1314:48:25"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5ed0ffa545a9eae0edd36b74378d16454cf385281383c7632ad5b2ebf3ab2b92",
                  "id": 4522,
                  "name": "RewardPerBlockUpdated",
                  "nameLocation": "1374:21:25",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4520,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newReward",
                        "nameLocation": "1404:9:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4522,
                        "src": "1396:17:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4519,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1396:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1395:19:25"
                  },
                  "src": "1368:47:25"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8249ec545e68f6f1e1230133ca48c704d831a7f8e635ded80f3dd9e99b09bb2f",
                  "id": 4526,
                  "name": "LockPeriodUpdated",
                  "nameLocation": "1427:17:25",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4524,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newLockPeriod",
                        "nameLocation": "1453:13:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4526,
                        "src": "1445:21:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4523,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1445:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1444:23:25"
                  },
                  "src": "1421:47:25"
                },
                {
                  "body": {
                    "id": 4533,
                    "nodeType": "Block",
                    "src": "1546:41:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4530,
                            "name": "_disableInitializers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "1557:20:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 4531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1557:22:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4532,
                        "nodeType": "ExpressionStatement",
                        "src": "1557:22:25"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4527,
                    "nodeType": "StructuredDocumentation",
                    "src": "1478:48:25",
                    "text": "@custom:oz-upgrades-unsafe-allow constructor"
                  },
                  "id": 4534,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4528,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1543:2:25"
                  },
                  "returnParameters": {
                    "id": 4529,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1546:0:25"
                  },
                  "scope": 5282,
                  "src": "1532:55:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 4583,
                    "nodeType": "Block",
                    "src": "1792:370:25",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4547,
                            "name": "_withdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4537,
                            "src": "1855:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 4548,
                            "name": "MAX_WITHDRAW_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4482,
                            "src": "1870:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1855:31:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4553,
                        "nodeType": "IfStatement",
                        "src": "1851:61:25",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4550,
                              "name": "InvalidFeeValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4451,
                              "src": "1895:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 4551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1895:17:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 4552,
                          "nodeType": "RevertStatement",
                          "src": "1888:24:25"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4554,
                            "name": "_claimFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4539,
                            "src": "1927:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 4555,
                            "name": "MAX_CLAIM_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4485,
                            "src": "1939:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1927:25:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4560,
                        "nodeType": "IfStatement",
                        "src": "1923:55:25",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4557,
                              "name": "InvalidFeeValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4451,
                              "src": "1961:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 4558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1961:17:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 4559,
                          "nodeType": "RevertStatement",
                          "src": "1954:24:25"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 4566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4561,
                            "name": "_feeCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4541,
                            "src": "1993:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 4564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2018:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 4563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2010:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 4562,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2010:7:25",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2010:10:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1993:27:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4570,
                        "nodeType": "IfStatement",
                        "src": "1989:56:25",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4567,
                              "name": "InvalidAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4455,
                              "src": "2029:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 4568,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2029:16:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 4569,
                          "nodeType": "RevertStatement",
                          "src": "2022:23:25"
                        }
                      },
                      {
                        "expression": {
                          "id": 4573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4571,
                            "name": "withdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "2058:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4572,
                            "name": "_withdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4537,
                            "src": "2072:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2058:26:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4574,
                        "nodeType": "ExpressionStatement",
                        "src": "2058:26:25"
                      },
                      {
                        "expression": {
                          "id": 4577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4575,
                            "name": "claimFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4471,
                            "src": "2095:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4576,
                            "name": "_claimFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4539,
                            "src": "2106:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2095:20:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4578,
                        "nodeType": "ExpressionStatement",
                        "src": "2095:20:25"
                      },
                      {
                        "expression": {
                          "id": 4581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4579,
                            "name": "feeCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4473,
                            "src": "2126:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4580,
                            "name": "_feeCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4541,
                            "src": "2141:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2126:28:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 4582,
                        "nodeType": "ExpressionStatement",
                        "src": "2126:28:25"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 4535,
                    "nodeType": "StructuredDocumentation",
                    "src": "1595:47:25",
                    "text": "@custom:oz-upgrades-validate-as-initializer"
                  },
                  "functionSelector": "1f51bf0c",
                  "id": 4584,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 4544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1789:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "id": 4545,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4543,
                        "name": "reinitializer",
                        "nameLocations": [
                          "1775:13:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 349,
                        "src": "1775:13:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1775:16:25"
                    }
                  ],
                  "name": "initializeV2",
                  "nameLocation": "1657:12:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4542,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4537,
                        "mutability": "mutable",
                        "name": "_withdrawFee",
                        "nameLocation": "1688:12:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4584,
                        "src": "1680:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4536,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1680:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4539,
                        "mutability": "mutable",
                        "name": "_claimFee",
                        "nameLocation": "1719:9:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4584,
                        "src": "1711:17:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4538,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1711:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4541,
                        "mutability": "mutable",
                        "name": "_feeCollector",
                        "nameLocation": "1747:13:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4584,
                        "src": "1739:21:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4540,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1739:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1669:98:25"
                  },
                  "returnParameters": {
                    "id": 4546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1792:0:25"
                  },
                  "scope": 5282,
                  "src": "1648:514:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3233
                  ],
                  "body": {
                    "id": 4592,
                    "nodeType": "Block",
                    "src": "2237:33:25",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "322e302e30",
                          "id": 4590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2255:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b4bcb154e38601c389396fa918314da42d4626f13ef6d0ceb07e5f5d26b2fbc3",
                            "typeString": "literal_string \"2.0.0\""
                          },
                          "value": "2.0.0"
                        },
                        "functionReturnParameters": 4589,
                        "id": 4591,
                        "nodeType": "Return",
                        "src": "2248:14:25"
                      }
                    ]
                  },
                  "functionSelector": "0d8e6e2c",
                  "id": 4593,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVersion",
                  "nameLocation": "2179:10:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4586,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2204:8:25"
                  },
                  "parameters": {
                    "id": 4585,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2189:2:25"
                  },
                  "returnParameters": {
                    "id": 4589,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4588,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 4593,
                        "src": "2222:13:25",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 4587,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2222:6:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2221:15:25"
                  },
                  "scope": 5282,
                  "src": "2170:100:25",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 4650,
                    "nodeType": "Block",
                    "src": "2376:475:25",
                    "statements": [
                      {
                        "assignments": [
                          4600
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4600,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "2402:6:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 4650,
                            "src": "2387:21:25",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker"
                            },
                            "typeName": {
                              "id": 4599,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4598,
                                "name": "Staker",
                                "nameLocations": [
                                  "2387:6:25"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2965,
                                "src": "2387:6:25"
                              },
                              "referencedDeclaration": 2965,
                              "src": "2387:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4604,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4601,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "2411:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 4603,
                          "indexExpression": {
                            "id": 4602,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4595,
                            "src": "2423:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2411:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2387:41:25"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 4605,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2443:5:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 4606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2449:6:25",
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "2443:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "expression": {
                                "id": 4607,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4600,
                                "src": "2458:6:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                  "typeString": "struct TokenFarm.Staker storage pointer"
                                }
                              },
                              "id": 4608,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2465:10:25",
                              "memberName": "checkpoint",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2954,
                              "src": "2458:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2443:32:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 4610,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4600,
                                "src": "2479:6:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                  "typeString": "struct TokenFarm.Staker storage pointer"
                                }
                              },
                              "id": 4611,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2486:7:25",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2952,
                              "src": "2479:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 4612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2496:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "2479:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2443:54:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4649,
                        "nodeType": "IfStatement",
                        "src": "2439:405:25",
                        "trueBody": {
                          "id": 4648,
                          "nodeType": "Block",
                          "src": "2499:345:25",
                          "statements": [
                            {
                              "assignments": [
                                4616
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4616,
                                  "mutability": "mutable",
                                  "name": "blocksPassed",
                                  "nameLocation": "2522:12:25",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4648,
                                  "src": "2514:20:25",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4615,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2514:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4622,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4617,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2537:5:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 4618,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2543:6:25",
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "2537:12:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 4619,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4600,
                                    "src": "2552:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                      "typeString": "struct TokenFarm.Staker storage pointer"
                                    }
                                  },
                                  "id": 4620,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2559:10:25",
                                  "memberName": "checkpoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2954,
                                  "src": "2552:17:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2537:32:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2514:55:25"
                            },
                            {
                              "assignments": [
                                4624
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 4624,
                                  "mutability": "mutable",
                                  "name": "reward",
                                  "nameLocation": "2646:6:25",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 4648,
                                  "src": "2638:14:25",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 4623,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2638:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 4634,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4630,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 4627,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 4625,
                                          "name": "blocksPassed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4616,
                                          "src": "2656:12:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 4626,
                                          "name": "rewardPerBlock",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4479,
                                          "src": "2671:14:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2656:29:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 4628,
                                          "name": "staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4600,
                                          "src": "2688:6:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                            "typeString": "struct TokenFarm.Staker storage pointer"
                                          }
                                        },
                                        "id": 4629,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2695:7:25",
                                        "memberName": "balance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2952,
                                        "src": "2688:14:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2656:46:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 4631,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2655:48:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 4632,
                                  "name": "totalStakingBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2944,
                                  "src": "2706:19:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2655:70:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2638:87:25"
                            },
                            {
                              "expression": {
                                "id": 4639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 4635,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4600,
                                    "src": "2754:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                      "typeString": "struct TokenFarm.Staker storage pointer"
                                    }
                                  },
                                  "id": 4637,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2761:14:25",
                                  "memberName": "pendingRewards",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2956,
                                  "src": "2754:21:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 4638,
                                  "name": "reward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4624,
                                  "src": "2779:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2754:31:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4640,
                              "nodeType": "ExpressionStatement",
                              "src": "2754:31:25"
                            },
                            {
                              "expression": {
                                "id": 4646,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 4641,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4600,
                                    "src": "2800:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                      "typeString": "struct TokenFarm.Staker storage pointer"
                                    }
                                  },
                                  "id": 4643,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "2807:10:25",
                                  "memberName": "checkpoint",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2954,
                                  "src": "2800:17:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 4644,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "2820:5:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 4645,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2826:6:25",
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "2820:12:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2800:32:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4647,
                              "nodeType": "ExpressionStatement",
                              "src": "2800:32:25"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 4651,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_updateUserRewards",
                  "nameLocation": "2334:18:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4595,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "2361:4:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4651,
                        "src": "2353:12:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4594,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2353:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2352:14:25"
                  },
                  "returnParameters": {
                    "id": 4597,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2376:0:25"
                  },
                  "scope": 5282,
                  "src": "2325:526:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 4662,
                    "nodeType": "Block",
                    "src": "2930:51:25",
                    "statements": [
                      {
                        "expression": {
                          "id": 4660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4658,
                            "name": "rewardPerBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4479,
                            "src": "2941:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4659,
                            "name": "_rewardPerBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4653,
                            "src": "2958:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2941:32:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4661,
                        "nodeType": "ExpressionStatement",
                        "src": "2941:32:25"
                      }
                    ]
                  },
                  "functionSelector": "bb872b4a",
                  "id": 4663,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4656,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4655,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2920:9:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "2920:9:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2920:9:25"
                    }
                  ],
                  "name": "setRewardPerBlock",
                  "nameLocation": "2868:17:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4653,
                        "mutability": "mutable",
                        "name": "_rewardPerBlock",
                        "nameLocation": "2894:15:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4663,
                        "src": "2886:23:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4652,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2886:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2885:25:25"
                  },
                  "returnParameters": {
                    "id": 4657,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2930:0:25"
                  },
                  "scope": 5282,
                  "src": "2859:122:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    3286
                  ],
                  "body": {
                    "id": 4765,
                    "nodeType": "Block",
                    "src": "3038:926:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4670,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3068:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3072:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3068:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4669,
                            "name": "_updateUserRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4651,
                            "src": "3049:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 4672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3049:30:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4673,
                        "nodeType": "ExpressionStatement",
                        "src": "3049:30:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4675,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4665,
                                "src": "3162:6:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 4676,
                                "name": "MIN_DEPOSIT",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2983,
                                "src": "3172:11:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3162:21:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420616d6f756e74",
                              "id": 4678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3185:16:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              },
                              "value": "Invalid amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                                "typeString": "literal_string \"Invalid amount\""
                              }
                            ],
                            "id": 4674,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3154:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3154:48:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4680,
                        "nodeType": "ExpressionStatement",
                        "src": "3154:48:25"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 4681,
                                "name": "stakers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2968,
                                "src": "3217:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 4682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3225:6:25",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "3217:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 4683,
                              "name": "MAX_STAKERS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2980,
                              "src": "3235:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3217:29:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 4690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "3250:34:25",
                            "subExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 4685,
                                  "name": "stakersData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2973,
                                  "src": "3251:11:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                                    "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                                  }
                                },
                                "id": 4688,
                                "indexExpression": {
                                  "expression": {
                                    "id": 4686,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3263:3:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 4687,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3267:6:25",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3263:10:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3251:23:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Staker_$2965_storage",
                                  "typeString": "struct TokenFarm.Staker storage ref"
                                }
                              },
                              "id": 4689,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3275:9:25",
                              "memberName": "hasStaked",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2962,
                              "src": "3251:33:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3217:67:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4696,
                        "nodeType": "IfStatement",
                        "src": "3213:137:25",
                        "trueBody": {
                          "id": 4695,
                          "nodeType": "Block",
                          "src": "3286:64:25",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4692,
                                  "name": "TokenFarm__MaxStakersReached",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3078,
                                  "src": "3308:28:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 4693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3308:30:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 4694,
                              "nodeType": "RevertStatement",
                              "src": "3301:37:25"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4698,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3385:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3389:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3385:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4700,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4665,
                              "src": "3397:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4697,
                            "name": "_beforeDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4782
                            ],
                            "referencedDeclaration": 4782,
                            "src": "3370:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3370:34:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4702,
                        "nodeType": "ExpressionStatement",
                        "src": "3370:34:25"
                      },
                      {
                        "assignments": [
                          4705
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4705,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "3486:6:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 4765,
                            "src": "3471:21:25",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker"
                            },
                            "typeName": {
                              "id": 4704,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4703,
                                "name": "Staker",
                                "nameLocations": [
                                  "3471:6:25"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2965,
                                "src": "3471:6:25"
                              },
                              "referencedDeclaration": 2965,
                              "src": "3471:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4710,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4706,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "3495:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 4709,
                          "indexExpression": {
                            "expression": {
                              "id": 4707,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3507:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3511:6:25",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3507:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3495:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3471:47:25"
                      },
                      {
                        "condition": {
                          "id": 4713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3533:17:25",
                          "subExpression": {
                            "expression": {
                              "id": 4711,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4705,
                              "src": "3534:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 4712,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3541:9:25",
                            "memberName": "hasStaked",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2962,
                            "src": "3534:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4735,
                        "nodeType": "IfStatement",
                        "src": "3529:168:25",
                        "trueBody": {
                          "id": 4734,
                          "nodeType": "Block",
                          "src": "3552:145:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 4717,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3580:3:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4718,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3584:6:25",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3580:10:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 4714,
                                    "name": "stakers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2968,
                                    "src": "3567:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 4716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3575:4:25",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "3567:12:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 4719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3567:24:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4720,
                              "nodeType": "ExpressionStatement",
                              "src": "3567:24:25"
                            },
                            {
                              "expression": {
                                "id": 4725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 4721,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4705,
                                    "src": "3606:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                      "typeString": "struct TokenFarm.Staker storage pointer"
                                    }
                                  },
                                  "id": 4723,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "3613:9:25",
                                  "memberName": "hasStaked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2962,
                                  "src": "3606:16:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 4724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3625:4:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "3606:23:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4726,
                              "nodeType": "ExpressionStatement",
                              "src": "3606:23:25"
                            },
                            {
                              "expression": {
                                "id": 4732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 4727,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4705,
                                    "src": "3644:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                      "typeString": "struct TokenFarm.Staker storage pointer"
                                    }
                                  },
                                  "id": 4729,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "3651:16:25",
                                  "memberName": "depositTimestamp",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2960,
                                  "src": "3644:23:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 4730,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3670:5:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 4731,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3676:9:25",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3670:15:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3644:41:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 4733,
                              "nodeType": "ExpressionStatement",
                              "src": "3644:41:25"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 4740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4736,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4705,
                              "src": "3717:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 4738,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3724:7:25",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2952,
                            "src": "3717:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4739,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4665,
                            "src": "3735:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3717:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4741,
                        "nodeType": "ExpressionStatement",
                        "src": "3717:24:25"
                      },
                      {
                        "expression": {
                          "id": 4746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4742,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4705,
                              "src": "3752:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 4744,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3759:9:25",
                            "memberName": "isStaking",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2964,
                            "src": "3752:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 4745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3771:4:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3752:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4747,
                        "nodeType": "ExpressionStatement",
                        "src": "3752:23:25"
                      },
                      {
                        "expression": {
                          "id": 4750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4748,
                            "name": "totalStakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2944,
                            "src": "3786:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4749,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4665,
                            "src": "3809:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3786:29:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4751,
                        "nodeType": "ExpressionStatement",
                        "src": "3786:29:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4753,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3850:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3854:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3850:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4755,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4665,
                              "src": "3862:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4752,
                            "name": "_afterDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3384,
                            "src": "3836:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3836:33:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4757,
                        "nodeType": "ExpressionStatement",
                        "src": "3836:33:25"
                      },
                      {
                        "expression": {
                          "id": 4763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4758,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4705,
                              "src": "3924:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 4760,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "3931:10:25",
                            "memberName": "checkpoint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2954,
                            "src": "3924:17:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4761,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3944:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 4762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3950:6:25",
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "3944:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3924:32:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4764,
                        "nodeType": "ExpressionStatement",
                        "src": "3924:32:25"
                      }
                    ]
                  },
                  "functionSelector": "b6b55f25",
                  "id": 4766,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "deposit",
                  "nameLocation": "2998:7:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4667,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3029:8:25"
                  },
                  "parameters": {
                    "id": 4666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4665,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3014:6:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4766,
                        "src": "3006:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4664,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3006:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3005:16:25"
                  },
                  "returnParameters": {
                    "id": 4668,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3038:0:25"
                  },
                  "scope": 5282,
                  "src": "2989:975:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3309
                  ],
                  "body": {
                    "id": 4781,
                    "nodeType": "Block",
                    "src": "4116:87:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4777,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4768,
                              "src": "4148:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4778,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4770,
                              "src": "4154:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4774,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "4127:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_TokenFarmV2_$5282_$",
                                "typeString": "type(contract super TokenFarmV2)"
                              }
                            },
                            "id": 4776,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4133:14:25",
                            "memberName": "_beforeDeposit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3309,
                            "src": "4127:20:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4127:34:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4780,
                        "nodeType": "ExpressionStatement",
                        "src": "4127:34:25"
                      }
                    ]
                  },
                  "id": 4782,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_beforeDeposit",
                  "nameLocation": "4053:14:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4772,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4107:8:25"
                  },
                  "parameters": {
                    "id": 4771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4768,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "4076:4:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4782,
                        "src": "4068:12:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4767,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4068:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 4770,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4090:6:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 4782,
                        "src": "4082:14:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 4769,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4082:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4067:30:25"
                  },
                  "returnParameters": {
                    "id": 4773,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4116:0:25"
                  },
                  "scope": 5282,
                  "src": "4044:159:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    3579
                  ],
                  "body": {
                    "id": 4886,
                    "nodeType": "Block",
                    "src": "4262:867:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4789,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4292:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4296:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4292:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4788,
                            "name": "_updateUserRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4651,
                            "src": "4273:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 4791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4273:30:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4792,
                        "nodeType": "ExpressionStatement",
                        "src": "4273:30:25"
                      },
                      {
                        "assignments": [
                          4795
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4795,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "4331:6:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 4886,
                            "src": "4316:21:25",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker"
                            },
                            "typeName": {
                              "id": 4794,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4793,
                                "name": "Staker",
                                "nameLocations": [
                                  "4316:6:25"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2965,
                                "src": "4316:6:25"
                              },
                              "referencedDeclaration": 2965,
                              "src": "4316:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4800,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4796,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "4340:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 4799,
                          "indexExpression": {
                            "expression": {
                              "id": 4797,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4352:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4356:6:25",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4352:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4340:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4316:47:25"
                      },
                      {
                        "assignments": [
                          4802
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4802,
                            "mutability": "mutable",
                            "name": "rewards",
                            "nameLocation": "4382:7:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 4886,
                            "src": "4374:15:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4801,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4374:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4805,
                        "initialValue": {
                          "expression": {
                            "id": 4803,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4795,
                            "src": "4392:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker storage pointer"
                            }
                          },
                          "id": 4804,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4399:14:25",
                          "memberName": "pendingRewards",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2956,
                          "src": "4392:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4374:39:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4807,
                                "name": "rewards",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4802,
                                "src": "4432:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 4808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4442:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4432:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2072657761726473",
                              "id": 4810,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4445:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e",
                                "typeString": "literal_string \"No rewards\""
                              },
                              "value": "No rewards"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f0ddad077e381124092afc917d98f5954c9a695d738c1e1b1eab03140ab9b17e",
                                "typeString": "literal_string \"No rewards\""
                              }
                            ],
                            "id": 4806,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4424:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4424:34:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4812,
                        "nodeType": "ExpressionStatement",
                        "src": "4424:34:25"
                      },
                      {
                        "assignments": [
                          4814
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4814,
                            "mutability": "mutable",
                            "name": "fee",
                            "nameLocation": "4479:3:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 4886,
                            "src": "4471:11:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4813,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4471:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4821,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4817,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 4815,
                                  "name": "rewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4802,
                                  "src": "4486:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 4816,
                                  "name": "claimFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4471,
                                  "src": "4496:8:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4486:18:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4818,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4485:20:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 4819,
                            "name": "BASIS_POINTS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4488,
                            "src": "4508:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4485:35:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4471:49:25"
                      },
                      {
                        "assignments": [
                          4823
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4823,
                            "mutability": "mutable",
                            "name": "claimAmount",
                            "nameLocation": "4539:11:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 4886,
                            "src": "4531:19:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4822,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4531:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4827,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4824,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4802,
                            "src": "4553:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 4825,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4814,
                            "src": "4563:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4553:13:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4531:35:25"
                      },
                      {
                        "assignments": [
                          4829
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4829,
                            "mutability": "mutable",
                            "name": "availableBalance",
                            "nameLocation": "4636:16:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 4886,
                            "src": "4628:24:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4828,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4628:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4837,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4834,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4683:4:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenFarmV2_$5282",
                                    "typeString": "contract TokenFarmV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenFarmV2_$5282",
                                    "typeString": "contract TokenFarmV2"
                                  }
                                ],
                                "id": 4833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4675:7:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4832,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4675:7:25",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4675:13:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 4830,
                              "name": "dappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2924,
                              "src": "4655:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DappToken_$2630",
                                "typeString": "contract DappToken"
                              }
                            },
                            "id": 4831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4665:9:25",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1637,
                            "src": "4655:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 4836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4655:34:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4628:61:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4839,
                                "name": "availableBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4829,
                                "src": "4708:16:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 4840,
                                "name": "claimAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4823,
                                "src": "4728:11:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4708:31:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
                              "id": 4842,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4741:31:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                                "typeString": "literal_string \"Insufficient contract balance\""
                              },
                              "value": "Insufficient contract balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
                                "typeString": "literal_string \"Insufficient contract balance\""
                              }
                            ],
                            "id": 4838,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4700:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4700:73:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4844,
                        "nodeType": "ExpressionStatement",
                        "src": "4700:73:25"
                      },
                      {
                        "expression": {
                          "id": 4849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4845,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4795,
                              "src": "4786:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 4847,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4793:14:25",
                            "memberName": "pendingRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2956,
                            "src": "4786:21:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 4848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4810:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4786:25:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4850,
                        "nodeType": "ExpressionStatement",
                        "src": "4786:25:25"
                      },
                      {
                        "expression": {
                          "id": 4855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 4851,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4795,
                              "src": "4822:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 4853,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4829:12:25",
                            "memberName": "totalClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2958,
                            "src": "4822:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4854,
                            "name": "claimAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4823,
                            "src": "4845:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4822:34:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4856,
                        "nodeType": "ExpressionStatement",
                        "src": "4822:34:25"
                      },
                      {
                        "expression": {
                          "id": 4859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4857,
                            "name": "collectedDappFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4477,
                            "src": "4867:17:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4858,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4814,
                            "src": "4888:3:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4867:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4860,
                        "nodeType": "ExpressionStatement",
                        "src": "4867:24:25"
                      },
                      {
                        "expression": {
                          "id": 4863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4861,
                            "name": "totalRewardsDistributed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2948,
                            "src": "4902:23:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 4862,
                            "name": "rewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4802,
                            "src": "4929:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4902:34:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4864,
                        "nodeType": "ExpressionStatement",
                        "src": "4902:34:25"
                      },
                      {
                        "assignments": [
                          4866
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4866,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "4954:7:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 4886,
                            "src": "4949:12:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 4865,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4949:4:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4873,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4869,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4983:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4987:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4983:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4871,
                              "name": "claimAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4823,
                              "src": "4995:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4867,
                              "name": "dappToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2924,
                              "src": "4964:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_DappToken_$2630",
                                "typeString": "contract DappToken"
                              }
                            },
                            "id": 4868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4974:8:25",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1661,
                            "src": "4964:18:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 4872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4964:43:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4949:58:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 4875,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4866,
                              "src": "5026:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73666572206661696c6564",
                              "id": 4876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5035:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              },
                              "value": "Transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              }
                            ],
                            "id": 4874,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5018:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5018:35:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4878,
                        "nodeType": "ExpressionStatement",
                        "src": "5018:35:25"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 4880,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5092:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 4881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5096:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5092:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4882,
                              "name": "claimAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4823,
                              "src": "5104:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 4883,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4814,
                              "src": "5117:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4879,
                            "name": "RewardsClaimedV2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4496,
                            "src": "5075:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 4884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5075:46:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4885,
                        "nodeType": "EmitStatement",
                        "src": "5070:51:25"
                      }
                    ]
                  },
                  "functionSelector": "372500ab",
                  "id": 4887,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4786,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4785,
                        "name": "whenActive",
                        "nameLocations": [
                          "4251:10:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3190,
                        "src": "4251:10:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4251:10:25"
                    }
                  ],
                  "name": "claimRewards",
                  "nameLocation": "4220:12:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4784,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4242:8:25"
                  },
                  "parameters": {
                    "id": 4783,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4232:2:25"
                  },
                  "returnParameters": {
                    "id": 4787,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4262:0:25"
                  },
                  "scope": 5282,
                  "src": "4211:918:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    3492
                  ],
                  "body": {
                    "id": 5092,
                    "nodeType": "Block",
                    "src": "5184:1912:25",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            },
                            "id": 4896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4893,
                              "name": "farmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "5199:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 4894,
                                "name": "FarmState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2821,
                                "src": "5212:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                  "typeString": "type(enum FarmState)"
                                }
                              },
                              "id": 4895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5222:14:25",
                              "memberName": "EMERGENCY_STOP",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2820,
                              "src": "5212:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "src": "5199:37:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 4898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "5240:25:25",
                            "subExpression": {
                              "id": 4897,
                              "name": "emergencyWithdrawEnabled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2990,
                              "src": "5241:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5199:66:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4904,
                        "nodeType": "IfStatement",
                        "src": "5195:132:25",
                        "trueBody": {
                          "id": 4903,
                          "nodeType": "Block",
                          "src": "5267:60:25",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4900,
                                  "name": "TokenFarm__EmergencyStop",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3068,
                                  "src": "5289:24:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 4901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5289:26:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 4902,
                              "nodeType": "RevertStatement",
                              "src": "5282:33:25"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          4907
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4907,
                            "mutability": "mutable",
                            "name": "staker",
                            "nameLocation": "5354:6:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 5092,
                            "src": "5339:21:25",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker"
                            },
                            "typeName": {
                              "id": 4906,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 4905,
                                "name": "Staker",
                                "nameLocations": [
                                  "5339:6:25"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2965,
                                "src": "5339:6:25"
                              },
                              "referencedDeclaration": 2965,
                              "src": "5339:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4912,
                        "initialValue": {
                          "baseExpression": {
                            "id": 4908,
                            "name": "stakersData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2973,
                            "src": "5363:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$2965_storage_$",
                              "typeString": "mapping(address => struct TokenFarm.Staker storage ref)"
                            }
                          },
                          "id": 4911,
                          "indexExpression": {
                            "expression": {
                              "id": 4909,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5375:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5379:6:25",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5375:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5363:23:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Staker_$2965_storage",
                            "typeString": "struct TokenFarm.Staker storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5339:47:25"
                      },
                      {
                        "assignments": [
                          4914
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4914,
                            "mutability": "mutable",
                            "name": "balance",
                            "nameLocation": "5405:7:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 5092,
                            "src": "5397:15:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4913,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5397:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4917,
                        "initialValue": {
                          "expression": {
                            "id": 4915,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4907,
                            "src": "5415:6:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                              "typeString": "struct TokenFarm.Staker storage pointer"
                            }
                          },
                          "id": 4916,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5422:7:25",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2952,
                          "src": "5415:14:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5397:32:25"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4918,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4914,
                            "src": "5444:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5455:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5444:12:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4924,
                        "nodeType": "IfStatement",
                        "src": "5440:51:25",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4921,
                              "name": "TokenFarm__InvalidAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3070,
                              "src": "5465:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 4922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:26:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 4923,
                          "nodeType": "RevertStatement",
                          "src": "5458:33:25"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            },
                            "id": 4928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4925,
                              "name": "farmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "5508:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 4926,
                                "name": "FarmState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2821,
                                "src": "5521:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                  "typeString": "type(enum FarmState)"
                                }
                              },
                              "id": 4927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5531:14:25",
                              "memberName": "EMERGENCY_STOP",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2820,
                              "src": "5521:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "src": "5508:37:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4929,
                              "name": "lockPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2988,
                              "src": "5549:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 4930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5562:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5549:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5508:55:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4946,
                        "nodeType": "IfStatement",
                        "src": "5504:213:25",
                        "trueBody": {
                          "id": 4945,
                          "nodeType": "Block",
                          "src": "5565:152:25",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4939,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4933,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5584:5:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 4934,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5590:9:25",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5584:15:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4938,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 4935,
                                      "name": "staker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4907,
                                      "src": "5602:6:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                        "typeString": "struct TokenFarm.Staker storage pointer"
                                      }
                                    },
                                    "id": 4936,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5609:16:25",
                                    "memberName": "depositTimestamp",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2960,
                                    "src": "5602:23:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 4937,
                                    "name": "lockPeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2988,
                                    "src": "5628:10:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5602:36:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5584:54:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 4944,
                              "nodeType": "IfStatement",
                              "src": "5580:126:25",
                              "trueBody": {
                                "id": 4943,
                                "nodeType": "Block",
                                "src": "5640:66:25",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 4940,
                                        "name": "TokenFarm__StillLocked",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 3080,
                                        "src": "5666:22:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                          "typeString": "function () pure returns (error)"
                                        }
                                      },
                                      "id": 4941,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5666:24:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 4942,
                                    "nodeType": "RevertStatement",
                                    "src": "5659:31:25"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_FarmState_$2821",
                            "typeString": "enum FarmState"
                          },
                          "id": 4950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4947,
                            "name": "farmState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2921,
                            "src": "5733:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 4948,
                              "name": "FarmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2821,
                              "src": "5746:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                "typeString": "type(enum FarmState)"
                              }
                            },
                            "id": 4949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5756:14:25",
                            "memberName": "EMERGENCY_STOP",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2820,
                            "src": "5746:24:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            }
                          },
                          "src": "5733:37:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5020,
                        "nodeType": "IfStatement",
                        "src": "5729:803:25",
                        "trueBody": {
                          "id": 5019,
                          "nodeType": "Block",
                          "src": "5772:760:25",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 4952,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5806:3:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 4953,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5810:6:25",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5806:10:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 4951,
                                  "name": "_updateUserRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4651,
                                  "src": "5787:18:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 4954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5787:30:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 4955,
                              "nodeType": "ExpressionStatement",
                              "src": "5787:30:25"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 4959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4956,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4907,
                                    "src": "5836:6:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                      "typeString": "struct TokenFarm.Staker storage pointer"
                                    }
                                  },
                                  "id": 4957,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5843:14:25",
                                  "memberName": "pendingRewards",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2956,
                                  "src": "5836:21:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 4958,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5860:1:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5836:25:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 5018,
                              "nodeType": "IfStatement",
                              "src": "5832:689:25",
                              "trueBody": {
                                "id": 5017,
                                "nodeType": "Block",
                                "src": "5863:658:25",
                                "statements": [
                                  {
                                    "assignments": [
                                      4961
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 4961,
                                        "mutability": "mutable",
                                        "name": "rewards",
                                        "nameLocation": "5890:7:25",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 5017,
                                        "src": "5882:15:25",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 4960,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5882:7:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 4964,
                                    "initialValue": {
                                      "expression": {
                                        "id": 4962,
                                        "name": "staker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4907,
                                        "src": "5900:6:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                          "typeString": "struct TokenFarm.Staker storage pointer"
                                        }
                                      },
                                      "id": 4963,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5907:14:25",
                                      "memberName": "pendingRewards",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2956,
                                      "src": "5900:21:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5882:39:25"
                                  },
                                  {
                                    "assignments": [
                                      4966
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 4966,
                                        "mutability": "mutable",
                                        "name": "claimFeeAmount",
                                        "nameLocation": "5948:14:25",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 5017,
                                        "src": "5940:22:25",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 4965,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "5940:7:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 4973,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4972,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 4969,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 4967,
                                              "name": "rewards",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4961,
                                              "src": "5966:7:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 4968,
                                              "name": "claimFee",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4471,
                                              "src": "5976:8:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "5966:18:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 4970,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "5965:20:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 4971,
                                        "name": "BASIS_POINTS",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4488,
                                        "src": "5988:12:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "5965:35:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "5940:60:25"
                                  },
                                  {
                                    "assignments": [
                                      4975
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 4975,
                                        "mutability": "mutable",
                                        "name": "claimAmount",
                                        "nameLocation": "6027:11:25",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 5017,
                                        "src": "6019:19:25",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 4974,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "6019:7:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 4979,
                                    "initialValue": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4978,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 4976,
                                        "name": "rewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4961,
                                        "src": "6041:7:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 4977,
                                        "name": "claimFeeAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4966,
                                        "src": "6051:14:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6041:24:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "6019:46:25"
                                  },
                                  {
                                    "expression": {
                                      "id": 4984,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 4980,
                                          "name": "staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4907,
                                          "src": "6086:6:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                            "typeString": "struct TokenFarm.Staker storage pointer"
                                          }
                                        },
                                        "id": 4982,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "6093:14:25",
                                        "memberName": "pendingRewards",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2956,
                                        "src": "6086:21:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 4983,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6110:1:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "6086:25:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4985,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6086:25:25"
                                  },
                                  {
                                    "expression": {
                                      "id": 4990,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "id": 4986,
                                          "name": "staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4907,
                                          "src": "6130:6:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                            "typeString": "struct TokenFarm.Staker storage pointer"
                                          }
                                        },
                                        "id": 4988,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberLocation": "6137:12:25",
                                        "memberName": "totalClaimed",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2958,
                                        "src": "6130:19:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "id": 4989,
                                        "name": "claimAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4975,
                                        "src": "6153:11:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6130:34:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4991,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6130:34:25"
                                  },
                                  {
                                    "expression": {
                                      "id": 4994,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 4992,
                                        "name": "collectedDappFees",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4477,
                                        "src": "6183:17:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "id": 4993,
                                        "name": "claimFeeAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4966,
                                        "src": "6204:14:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6183:35:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4995,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6183:35:25"
                                  },
                                  {
                                    "expression": {
                                      "id": 4998,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 4996,
                                        "name": "totalRewardsDistributed",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2948,
                                        "src": "6237:23:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "+=",
                                      "rightHandSide": {
                                        "id": 4997,
                                        "name": "rewards",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4961,
                                        "src": "6264:7:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6237:34:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4999,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6237:34:25"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 5003,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "6380:3:25",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 5004,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberLocation": "6384:6:25",
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "6380:10:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 5005,
                                              "name": "claimAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4975,
                                              "src": "6392:11:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "id": 5001,
                                              "name": "dappToken",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 2924,
                                              "src": "6361:9:25",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_DappToken_$2630",
                                                "typeString": "contract DappToken"
                                              }
                                            },
                                            "id": 5002,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "6371:8:25",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1661,
                                            "src": "6361:18:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 5006,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "6361:43:25",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "hexValue": "5472616e73666572206661696c6564",
                                          "id": 5007,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6406:17:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                            "typeString": "literal_string \"Transfer failed\""
                                          },
                                          "value": "Transfer failed"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                            "typeString": "literal_string \"Transfer failed\""
                                          }
                                        ],
                                        "id": 5000,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "6353:7:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 5008,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6353:71:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 5009,
                                    "nodeType": "ExpressionStatement",
                                    "src": "6353:71:25"
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 5011,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "6465:3:25",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 5012,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6469:6:25",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "6465:10:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 5013,
                                          "name": "claimAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4975,
                                          "src": "6477:11:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 5014,
                                          "name": "claimFeeAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4966,
                                          "src": "6490:14:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 5010,
                                        "name": "RewardsClaimedV2",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4496,
                                        "src": "6448:16:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256)"
                                        }
                                      },
                                      "id": 5015,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6448:57:25",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 5016,
                                    "nodeType": "EmitStatement",
                                    "src": "6443:62:25"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 5025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 5021,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4907,
                              "src": "6544:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 5023,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6551:7:25",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2952,
                            "src": "6544:14:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 5024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6561:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "6544:18:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5026,
                        "nodeType": "ExpressionStatement",
                        "src": "6544:18:25"
                      },
                      {
                        "expression": {
                          "id": 5031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 5027,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4907,
                              "src": "6573:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Staker_$2965_storage_ptr",
                                "typeString": "struct TokenFarm.Staker storage pointer"
                              }
                            },
                            "id": 5029,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6580:9:25",
                            "memberName": "isStaking",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2964,
                            "src": "6573:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 5030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6592:5:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "6573:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5032,
                        "nodeType": "ExpressionStatement",
                        "src": "6573:24:25"
                      },
                      {
                        "expression": {
                          "id": 5035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5033,
                            "name": "totalStakingBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2944,
                            "src": "6608:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 5034,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4914,
                            "src": "6631:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6608:30:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5036,
                        "nodeType": "ExpressionStatement",
                        "src": "6608:30:25"
                      },
                      {
                        "assignments": [
                          5038
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5038,
                            "mutability": "mutable",
                            "name": "fee",
                            "nameLocation": "6659:3:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 5092,
                            "src": "6651:11:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5037,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6651:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5040,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 5039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6665:1:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6651:15:25"
                      },
                      {
                        "assignments": [
                          5042
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5042,
                            "mutability": "mutable",
                            "name": "withdrawAmount",
                            "nameLocation": "6685:14:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 5092,
                            "src": "6677:22:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5041,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6677:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5044,
                        "initialValue": {
                          "id": 5043,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4914,
                          "src": "6702:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6677:32:25"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 5052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_FarmState_$2821",
                              "typeString": "enum FarmState"
                            },
                            "id": 5048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5045,
                              "name": "farmState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2921,
                              "src": "6724:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 5046,
                                "name": "FarmState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2821,
                                "src": "6737:9:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_FarmState_$2821_$",
                                  "typeString": "type(enum FarmState)"
                                }
                              },
                              "id": 5047,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6747:14:25",
                              "memberName": "EMERGENCY_STOP",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2820,
                              "src": "6737:24:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_FarmState_$2821",
                                "typeString": "enum FarmState"
                              }
                            },
                            "src": "6724:37:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 5049,
                              "name": "withdrawFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4469,
                              "src": "6765:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 5050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6779:1:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6765:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6724:56:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5073,
                        "nodeType": "IfStatement",
                        "src": "6720:215:25",
                        "trueBody": {
                          "id": 5072,
                          "nodeType": "Block",
                          "src": "6782:153:25",
                          "statements": [
                            {
                              "expression": {
                                "id": 5060,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 5053,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5038,
                                  "src": "6797:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5059,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 5056,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 5054,
                                          "name": "balance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4914,
                                          "src": "6804:7:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                          "id": 5055,
                                          "name": "withdrawFee",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4469,
                                          "src": "6814:11:25",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "6804:21:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 5057,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "6803:23:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 5058,
                                    "name": "BASIS_POINTS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4488,
                                    "src": "6829:12:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6803:38:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6797:44:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5061,
                              "nodeType": "ExpressionStatement",
                              "src": "6797:44:25"
                            },
                            {
                              "expression": {
                                "id": 5066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 5062,
                                  "name": "withdrawAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5042,
                                  "src": "6856:14:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 5065,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 5063,
                                    "name": "balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4914,
                                    "src": "6873:7:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 5064,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 5038,
                                    "src": "6883:3:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6873:13:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6856:30:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5067,
                              "nodeType": "ExpressionStatement",
                              "src": "6856:30:25"
                            },
                            {
                              "expression": {
                                "id": 5070,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 5068,
                                  "name": "collectedLpFees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4475,
                                  "src": "6901:15:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 5069,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5038,
                                  "src": "6920:3:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6901:22:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 5071,
                              "nodeType": "ExpressionStatement",
                              "src": "6901:22:25"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 5077,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6972:3:25",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 5078,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6976:6:25",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6972:10:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 5079,
                                  "name": "withdrawAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5042,
                                  "src": "6984:14:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 5075,
                                  "name": "lpToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2927,
                                  "src": "6955:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LPToken_$2669",
                                    "typeString": "contract LPToken"
                                  }
                                },
                                "id": 5076,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6963:8:25",
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1661,
                                "src": "6955:16:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 5080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6955:44:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73666572206661696c6564",
                              "id": 5081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7001:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              },
                              "value": "Transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              }
                            ],
                            "id": 5074,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6947:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6947:72:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5083,
                        "nodeType": "ExpressionStatement",
                        "src": "6947:72:25"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 5085,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7044:3:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7048:6:25",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7044:10:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 5087,
                              "name": "withdrawAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5042,
                              "src": "7056:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 5088,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7072:5:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 5089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7078:9:25",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7072:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5084,
                            "name": "Withdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3006,
                            "src": "7035:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 5090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7035:53:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5091,
                        "nodeType": "EmitStatement",
                        "src": "7030:58:25"
                      }
                    ]
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 5093,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 4891,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 4890,
                        "name": "onlyStaker",
                        "nameLocations": [
                          "5173:10:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3225,
                        "src": "5173:10:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5173:10:25"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "5146:8:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 4889,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5164:8:25"
                  },
                  "parameters": {
                    "id": 4888,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5154:2:25"
                  },
                  "returnParameters": {
                    "id": 4892,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5184:0:25"
                  },
                  "scope": 5282,
                  "src": "5137:1959:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    4024
                  ],
                  "body": {
                    "id": 5128,
                    "nodeType": "Block",
                    "src": "7156:319:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5102,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5100,
                                "name": "collectedDappFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4477,
                                "src": "7175:17:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 5101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7195:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7175:21:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2066656573",
                              "id": 5103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7198:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e8de74ff8c709eb592eb6c756abcc692885d69695e8007d0498a2bd77cddf65",
                                "typeString": "literal_string \"No fees\""
                              },
                              "value": "No fees"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e8de74ff8c709eb592eb6c756abcc692885d69695e8007d0498a2bd77cddf65",
                                "typeString": "literal_string \"No fees\""
                              }
                            ],
                            "id": 5099,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7167:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7167:41:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5105,
                        "nodeType": "ExpressionStatement",
                        "src": "7167:41:25"
                      },
                      {
                        "assignments": [
                          5107
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5107,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "7227:6:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 5128,
                            "src": "7219:14:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5106,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7219:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5109,
                        "initialValue": {
                          "id": 5108,
                          "name": "collectedDappFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4477,
                          "src": "7236:17:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7219:34:25"
                      },
                      {
                        "expression": {
                          "id": 5112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5110,
                            "name": "collectedDappFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4477,
                            "src": "7264:17:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 5111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7284:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7264:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5113,
                        "nodeType": "ExpressionStatement",
                        "src": "7264:21:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5117,
                                  "name": "feeCollector",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4473,
                                  "src": "7373:12:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 5118,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5107,
                                  "src": "7387:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 5115,
                                  "name": "dappToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2924,
                                  "src": "7354:9:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_DappToken_$2630",
                                    "typeString": "contract DappToken"
                                  }
                                },
                                "id": 5116,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7364:8:25",
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1661,
                                "src": "7354:18:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 5119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7354:40:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73666572206661696c6564",
                              "id": 5120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7396:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              },
                              "value": "Transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              }
                            ],
                            "id": 5114,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7346:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7346:68:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5122,
                        "nodeType": "ExpressionStatement",
                        "src": "7346:68:25"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 5124,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5107,
                              "src": "7446:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5125,
                              "name": "feeCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4473,
                              "src": "7454:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5123,
                            "name": "FeesWithdrawnV2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4502,
                            "src": "7430:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 5126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7430:37:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5127,
                        "nodeType": "EmitStatement",
                        "src": "7425:42:25"
                      }
                    ]
                  },
                  "functionSelector": "476343ee",
                  "id": 5129,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 5097,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 5096,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7146:9:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "7146:9:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7146:9:25"
                    }
                  ],
                  "name": "withdrawFees",
                  "nameLocation": "7113:12:25",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 5095,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "7137:8:25"
                  },
                  "parameters": {
                    "id": 5094,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7125:2:25"
                  },
                  "returnParameters": {
                    "id": 5098,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7156:0:25"
                  },
                  "scope": 5282,
                  "src": "7104:371:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 5163,
                    "nodeType": "Block",
                    "src": "7528:261:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5135,
                                "name": "collectedLpFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4475,
                                "src": "7547:15:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 5136,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7565:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7547:19:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f2066656573",
                              "id": 5138,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7568:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5e8de74ff8c709eb592eb6c756abcc692885d69695e8007d0498a2bd77cddf65",
                                "typeString": "literal_string \"No fees\""
                              },
                              "value": "No fees"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5e8de74ff8c709eb592eb6c756abcc692885d69695e8007d0498a2bd77cddf65",
                                "typeString": "literal_string \"No fees\""
                              }
                            ],
                            "id": 5134,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7539:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7539:39:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5140,
                        "nodeType": "ExpressionStatement",
                        "src": "7539:39:25"
                      },
                      {
                        "assignments": [
                          5142
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5142,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "7597:6:25",
                            "nodeType": "VariableDeclaration",
                            "scope": 5163,
                            "src": "7589:14:25",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 5141,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7589:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5144,
                        "initialValue": {
                          "id": 5143,
                          "name": "collectedLpFees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4475,
                          "src": "7606:15:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7589:32:25"
                      },
                      {
                        "expression": {
                          "id": 5147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5145,
                            "name": "collectedLpFees",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4475,
                            "src": "7632:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 5146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7650:1:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7632:19:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5148,
                        "nodeType": "ExpressionStatement",
                        "src": "7632:19:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5152,
                                  "name": "feeCollector",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4473,
                                  "src": "7687:12:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 5153,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5142,
                                  "src": "7701:6:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 5150,
                                  "name": "lpToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2927,
                                  "src": "7670:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LPToken_$2669",
                                    "typeString": "contract LPToken"
                                  }
                                },
                                "id": 5151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7678:8:25",
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1661,
                                "src": "7670:16:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 5154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7670:38:25",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73666572206661696c6564",
                              "id": 5155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7710:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              },
                              "value": "Transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                                "typeString": "literal_string \"Transfer failed\""
                              }
                            ],
                            "id": 5149,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7662:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 5156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7662:66:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5157,
                        "nodeType": "ExpressionStatement",
                        "src": "7662:66:25"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 5159,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5142,
                              "src": "7760:6:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5160,
                              "name": "feeCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4473,
                              "src": "7768:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5158,
                            "name": "LpFeesWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4508,
                            "src": "7744:15:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 5161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7744:37:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5162,
                        "nodeType": "EmitStatement",
                        "src": "7739:42:25"
                      }
                    ]
                  },
                  "functionSelector": "25b500eb",
                  "id": 5164,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 5132,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 5131,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "7518:9:25"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 89,
                        "src": "7518:9:25"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7518:9:25"
                    }
                  ],
                  "name": "withdrawLpFees",
                  "nameLocation": "7492:14:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5130,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7506:2:25"
                  },
                  "returnParameters": {
                    "id": 5133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7528:0:25"
                  },
                  "scope": 5282,
                  "src": "7483:306:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 5196,
                    "nodeType": "Block",
                    "src": "7856:220:25",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5169,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7871:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7875:6:25",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7871:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5171,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "7885:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7885:7:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7871:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5177,
                        "nodeType": "IfStatement",
                        "src": "7867:48:25",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5174,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4453,
                              "src": "7901:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 5175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7901:14:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 5176,
                          "nodeType": "RevertStatement",
                          "src": "7894:21:25"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5178,
                            "name": "newCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5166,
                            "src": "7930:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 5181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7954:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 5180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7946:7:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5179,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7946:7:25",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7946:10:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7930:26:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5187,
                        "nodeType": "IfStatement",
                        "src": "7926:55:25",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5184,
                              "name": "InvalidAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4455,
                              "src": "7965:14:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 5185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7965:16:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 5186,
                          "nodeType": "RevertStatement",
                          "src": "7958:23:25"
                        }
                      },
                      {
                        "expression": {
                          "id": 5190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5188,
                            "name": "feeCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4473,
                            "src": "7992:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5189,
                            "name": "newCollector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5166,
                            "src": "8007:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7992:27:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 5191,
                        "nodeType": "ExpressionStatement",
                        "src": "7992:27:25"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 5193,
                              "name": "newCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5166,
                              "src": "8055:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5192,
                            "name": "FeeCollectorUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4518,
                            "src": "8035:19:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 5194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8035:33:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5195,
                        "nodeType": "EmitStatement",
                        "src": "8030:38:25"
                      }
                    ]
                  },
                  "functionSelector": "d2c35ce8",
                  "id": 5197,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFeeCollector",
                  "nameLocation": "7806:18:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5166,
                        "mutability": "mutable",
                        "name": "newCollector",
                        "nameLocation": "7833:12:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 5197,
                        "src": "7825:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 5165,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7825:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7824:22:25"
                  },
                  "returnParameters": {
                    "id": 5168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7856:0:25"
                  },
                  "scope": 5282,
                  "src": "7797:279:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 5240,
                    "nodeType": "Block",
                    "src": "8179:329:25",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5204,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8194:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8198:6:25",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8194:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5206,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "8208:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8208:7:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8194:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5212,
                        "nodeType": "IfStatement",
                        "src": "8190:48:25",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5209,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4453,
                              "src": "8224:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 5210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8224:14:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 5211,
                          "nodeType": "RevertStatement",
                          "src": "8217:21:25"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5213,
                            "name": "_withdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5199,
                            "src": "8253:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 5214,
                            "name": "MAX_WITHDRAW_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4482,
                            "src": "8268:16:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8253:31:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5219,
                        "nodeType": "IfStatement",
                        "src": "8249:61:25",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5216,
                              "name": "InvalidFeeValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4451,
                              "src": "8293:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 5217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8293:17:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 5218,
                          "nodeType": "RevertStatement",
                          "src": "8286:24:25"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 5222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5220,
                            "name": "_claimFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5201,
                            "src": "8325:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 5221,
                            "name": "MAX_CLAIM_FEE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4485,
                            "src": "8337:13:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8325:25:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5226,
                        "nodeType": "IfStatement",
                        "src": "8321:55:25",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5223,
                              "name": "InvalidFeeValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4451,
                              "src": "8359:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 5224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8359:17:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 5225,
                          "nodeType": "RevertStatement",
                          "src": "8352:24:25"
                        }
                      },
                      {
                        "expression": {
                          "id": 5229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5227,
                            "name": "withdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "8389:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5228,
                            "name": "_withdrawFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5199,
                            "src": "8403:12:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8389:26:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5230,
                        "nodeType": "ExpressionStatement",
                        "src": "8389:26:25"
                      },
                      {
                        "expression": {
                          "id": 5233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5231,
                            "name": "claimFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4471,
                            "src": "8426:8:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5232,
                            "name": "_claimFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5201,
                            "src": "8437:9:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8426:20:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5234,
                        "nodeType": "ExpressionStatement",
                        "src": "8426:20:25"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 5236,
                              "name": "_withdrawFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5199,
                              "src": "8476:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5237,
                              "name": "_claimFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5201,
                              "src": "8490:9:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5235,
                            "name": "FeesUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4514,
                            "src": "8464:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 5238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8464:36:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5239,
                        "nodeType": "EmitStatement",
                        "src": "8459:41:25"
                      }
                    ]
                  },
                  "functionSelector": "6db79437",
                  "id": 5241,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFees",
                  "nameLocation": "8093:10:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5199,
                        "mutability": "mutable",
                        "name": "_withdrawFee",
                        "nameLocation": "8122:12:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 5241,
                        "src": "8114:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5198,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8114:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5201,
                        "mutability": "mutable",
                        "name": "_claimFee",
                        "nameLocation": "8153:9:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 5241,
                        "src": "8145:17:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8145:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8103:66:25"
                  },
                  "returnParameters": {
                    "id": 5203,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8179:0:25"
                  },
                  "scope": 5282,
                  "src": "8084:424:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 5259,
                    "nodeType": "Block",
                    "src": "8569:102:25",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 5250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 5246,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8584:3:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 5247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8588:6:25",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8584:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5248,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 105,
                              "src": "8598:5:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 5249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8598:7:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8584:21:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5254,
                        "nodeType": "IfStatement",
                        "src": "8580:48:25",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 5251,
                              "name": "Unauthorized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4453,
                              "src": "8614:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                "typeString": "function () pure returns (error)"
                              }
                            },
                            "id": 5252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8614:14:25",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 5253,
                          "nodeType": "RevertStatement",
                          "src": "8607:21:25"
                        }
                      },
                      {
                        "expression": {
                          "id": 5257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5255,
                            "name": "lockPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2988,
                            "src": "8639:10:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5256,
                            "name": "_lockPeriod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5243,
                            "src": "8652:11:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8639:24:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5258,
                        "nodeType": "ExpressionStatement",
                        "src": "8639:24:25"
                      }
                    ]
                  },
                  "functionSelector": "779972da",
                  "id": 5260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setLockPeriod",
                  "nameLocation": "8525:13:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5243,
                        "mutability": "mutable",
                        "name": "_lockPeriod",
                        "nameLocation": "8547:11:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 5260,
                        "src": "8539:19:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8539:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8538:21:25"
                  },
                  "returnParameters": {
                    "id": 5245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8569:0:25"
                  },
                  "scope": 5282,
                  "src": "8516:155:25",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 5280,
                    "nodeType": "Block",
                    "src": "8950:175:25",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 5273,
                              "name": "withdrawFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4469,
                              "src": "8983:11:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5274,
                              "name": "claimFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4471,
                              "src": "9009:8:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5275,
                              "name": "collectedLpFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4475,
                              "src": "9032:15:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5276,
                              "name": "collectedDappFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4477,
                              "src": "9062:17:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 5277,
                              "name": "feeCollector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4473,
                              "src": "9094:12:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "id": 5278,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "8968:149:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$",
                            "typeString": "tuple(uint256,uint256,uint256,uint256,address)"
                          }
                        },
                        "functionReturnParameters": 5272,
                        "id": 5279,
                        "nodeType": "Return",
                        "src": "8961:156:25"
                      }
                    ]
                  },
                  "functionSelector": "0002eab7",
                  "id": 5281,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFeeInfo",
                  "nameLocation": "8688:10:25",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5261,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8698:2:25"
                  },
                  "returnParameters": {
                    "id": 5272,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5263,
                        "mutability": "mutable",
                        "name": "_withdrawFee",
                        "nameLocation": "8773:12:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 5281,
                        "src": "8765:20:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8765:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5265,
                        "mutability": "mutable",
                        "name": "_claimFee",
                        "nameLocation": "8808:9:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 5281,
                        "src": "8800:17:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5264,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8800:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5267,
                        "mutability": "mutable",
                        "name": "_collectedLpFees",
                        "nameLocation": "8840:16:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 5281,
                        "src": "8832:24:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5266,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8832:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5269,
                        "mutability": "mutable",
                        "name": "_collectedDappFees",
                        "nameLocation": "8879:18:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 5281,
                        "src": "8871:26:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5268,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8871:7:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 5271,
                        "mutability": "mutable",
                        "name": "_feeCollector",
                        "nameLocation": "8920:13:25",
                        "nodeType": "VariableDeclaration",
                        "scope": 5281,
                        "src": "8912:21:25",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 5270,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8912:7:25",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8750:194:25"
                  },
                  "scope": 5282,
                  "src": "8679:446:25",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 5283,
              "src": "389:8739:25",
              "usedErrors": [
                30,
                35,
                211,
                214,
                547,
                550,
                3062,
                3064,
                3066,
                3068,
                3070,
                3072,
                3074,
                3076,
                3078,
                3080,
                3082,
                4451,
                4453,
                4455
              ],
              "usedEvents": [
                41,
                219,
                539,
                544,
                2998,
                3006,
                3014,
                3022,
                3028,
                3036,
                3044,
                3050,
                3054,
                3060,
                4496,
                4502,
                4508,
                4514,
                4518,
                4522,
                4526
              ]
            }
          ],
          "src": "33:9095:25"
        },
        "id": 25
      }
    },
    "contracts": {
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "OwnableUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "Initializable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "ContextUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
        "PausableUpgradeable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 677,
                "contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          }
        }
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol": {
        "IERC1967": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "previousAdmin",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "beacon",
                  "type": "address"
                }
              ],
              "name": "BeaconUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "ERC1967Proxy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "AddressEmptyCode",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidImplementation",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ERC1967NonPayable",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 392,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 451,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_verifyCallResultFromTarget": {
                  "entryPoint": 478,
                  "id": 2372,
                  "parameterSlots": 3,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040526102c68038038061001481610188565b928339810190604081830312610183578051906001600160a01b03821690818303610183576020810151906001600160401b038211610183570183601f820112156101835780519061006d610068836101c3565b610188565b94828652602083830101116101835760005b82811061016e575050602060009185010152813b1561015a577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151156101415760008083602061012995519101845af43d15610139573d91610119610068846101c3565b9283523d6000602085013e6101de565b505b604051608690816102408239f35b6060916101de565b5050341561012b5763b398979f60e01b60005260046000fd5b634c9c8ce360e01b60005260045260246000fd5b8060208092840101518282890101520161007f565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176101ad57604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116101ad57601f01601f191660200190565b9061020457508051156101f357805190602001fd5b63d6bda27560e01b60005260046000fd5b81511580610236575b610215575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b1561020d56fe60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009081906001600160a01b0316368280378136915af43d6000803e15604b573d6000f35b3d6000fdfea264697066735822122015308d259e04f7047aa96453db210c475b804a9a7b24e93b366014ba61d2fa7164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2C6 DUP1 CODESIZE SUB DUP1 PUSH2 0x14 DUP2 PUSH2 0x188 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH2 0x183 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x183 JUMPI PUSH1 0x20 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x183 JUMPI ADD DUP4 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x183 JUMPI DUP1 MLOAD SWAP1 PUSH2 0x6D PUSH2 0x68 DUP4 PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST SWAP5 DUP3 DUP7 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x183 JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x16E JUMPI POP POP PUSH1 0x20 PUSH1 0x0 SWAP2 DUP6 ADD ADD MSTORE DUP2 EXTCODESIZE ISZERO PUSH2 0x15A JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 PUSH2 0x129 SWAP6 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x139 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x119 PUSH2 0x68 DUP5 PUSH2 0x1C3 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x1DE JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x86 SWAP1 DUP2 PUSH2 0x240 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x1DE JUMP JUMPDEST POP POP CALLVALUE ISZERO PUSH2 0x12B JUMPI PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP10 ADD ADD MSTORE ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1AD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1AD JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x204 JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x1F3 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x236 JUMPI JUMPDEST PUSH2 0x215 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x20D JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY ISZERO PUSH1 0x4B JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO ADDRESS DUP14 0x25 SWAP15 DIV 0xF7 DIV PUSH27 0xA96453DB210C475B804A9A7B24E93B366014BA61D2FA7164736F6C PUSH4 0x4300081C STOP CALLER ",
              "sourceMap": "600:1117:7:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;600:1117:7;;;;;;;;;;;;;-1:-1:-1;;;;;600:1117:7;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;600:1117:7;;;;;;;;;-1:-1:-1;600:1117:7;;;;;1748:29:8;;:34;1744:119;;811:66;;;-1:-1:-1;;;;;;811:66:8;;;;;2407:36;-1:-1:-1;;2407:36:8;600:1117:7;;2458:15:8;:11;;-1:-1:-1;4065:25:16;;600:1117:7;4107:55:16;4065:25;;600:1117:7;;4065:25:16;;;600:1117:7;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;600:1117:7;;;;4107:55:16;:::i;:::-;;2454:148:8;600:1117:7;;;;;;;;;;;;4107:55:16;:::i;2454:148:8:-;6163:9;;;6159:70;2454:148;6159:70;6199:19;;;-1:-1:-1;6199:19:8;;-1:-1:-1;6199:19:8;1744:119;1805:47;;;-1:-1:-1;1805:47:8;;600:1117:7;;-1:-1:-1;1805:47:8;600:1117:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;600:1117:7;;;;;;;;;-1:-1:-1;;600:1117:7;;;-1:-1:-1;;;;;600:1117:7;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;600:1117:7;;;;;-1:-1:-1;600:1117:7;;-1:-1:-1;;;;;600:1117:7;;;;;;-1:-1:-1;;600:1117:7;;;;:::o;4437:582:16:-;;4609:8;;-1:-1:-1;600:1117:7;;5690:21:16;:17;;5815:158;;;;;;5686:354;6010:19;;;5710:1;6010:19;;5710:1;6010:19;4605:408;600:1117:7;;4857:22:16;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:16;4933:24;;;-1:-1:-1;;;;;600:1117:7;;;;4933:24:16;600:1117:7;;;4933:24:16;4857:49;4883:18;;;:23;4857:49;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009081906001600160a01b0316368280378136915af43d6000803e15604b573d6000f35b3d6000fdfea264697066735822122015308d259e04f7047aa96453db210c475b804a9a7b24e93b366014ba61d2fa7164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY ISZERO PUSH1 0x4B JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ISZERO ADDRESS DUP14 0x25 SWAP15 DIV 0xF7 DIV PUSH27 0xA96453DB210C475B804A9A7B24E93B366014BA61D2FA7164736F6C PUSH4 0x4300081C STOP CALLER ",
              "sourceMap": "600:1117:7:-:0;;;811:66:8;;-1:-1:-1;;;;;;;;;811:66:8;1019:819:9;-1:-1:-1;;1019:819:9;;;;;;;-1:-1:-1;1019:819:9;;;;;;-1:-1:-1;1019:819:9;;;-1:-1:-1;1019:819:9"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "ERC1967Utils": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidAdmin",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "beacon",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidBeacon",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidImplementation",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ERC1967NonPayable",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122085573bada3021de200f91f833f8cc45865f241f1c5e083f29305a96a62f50b4564736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 JUMPI EXTCODESIZE 0xAD LOG3 MUL SAR 0xE2 STOP 0xF9 0x1F DUP4 EXTCODEHASH DUP13 0xC4 PC PUSH6 0xF241F1C5E083 CALLCODE SWAP4 SDIV 0xA9 PUSH11 0x62F50B4564736F6C634300 ADDMOD SHR STOP CALLER ",
              "sourceMap": "496:5741:8:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea264697066735822122085573bada3021de200f91f833f8cc45865f241f1c5e083f29305a96a62f50b4564736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 JUMPI EXTCODESIZE 0xAD LOG3 MUL SAR 0xE2 STOP 0xF9 0x1F DUP4 EXTCODEHASH DUP13 0xC4 PC PUSH6 0xF241F1C5E083 CALLCODE SWAP4 SDIV 0xA9 PUSH11 0x62F50B4564736F6C634300 ADDMOD SHR STOP CALLER ",
              "sourceMap": "496:5741:8:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/proxy/Proxy.sol": {
        "Proxy": {
          "abi": [
            {
              "stateMutability": "payable",
              "type": "fallback"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
        "IBeacon": {
          "abi": [
            {
              "inputs": [],
              "name": "implementation",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "implementation()": "5c60da1b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol": {
        "ProxyAdmin": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "UPGRADE_INTERFACE_VERSION",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ITransparentUpgradeableProxy",
                  "name": "proxy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "upgradeAndCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803460bc57601f61049138819003918201601f19168301916001600160401b0383118484101760c15780849260209460405283398101031260bc57516001600160a01b0381169081900360bc57801560a657600080546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36103b990816100d88239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c8063715018a6146102875780638da5cb5b146102605780639623609d1461012f578063ad3cb1cc146100e25763f2fde38b1461005457600080fd5b346100df5760203660031901126100df576004356001600160a01b038116908190036100dd5761008261035a565b80156100c95781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b505b80fd5b50346100df57806003193601126100df575061012b6040516101056040826102e1565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610319565b0390f35b5060603660031901126100df576004356001600160a01b038116908190036100dd576024356001600160a01b038116908190036102405760443567ffffffffffffffff811161025c573660238201121561025c57806004013567ffffffffffffffff8111610248576040518593929091906101b4601f8301601f1916602001846102e1565b81835236602483830101116102445781859260246020930183860137830101526101dc61035a565b833b156102405761021293839260405180968194829363278f794360e11b84526004840152604060248401526044830190610319565b039134905af18015610233576102255780f35b61022e916102e1565b388180f35b50604051903d90823e3d90fd5b8280fd5b8480fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b50346100df57806003193601126100df57546040516001600160a01b039091168152602090f35b50346100df57806003193601126100df576102a061035a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90601f8019910116810190811067ffffffffffffffff82111761030357604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b848110610345575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610324565b6000546001600160a01b0316330361036e57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220c136cdba50729f7a6bb5204c130f26cfe69609d027f81432d5fc401a6698bb3a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x491 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xBC JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x3B9 SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xE2 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH2 0x82 PUSH2 0x35A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI POP PUSH2 0x12B PUSH1 0x40 MLOAD PUSH2 0x105 PUSH1 0x40 DUP3 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x240 JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x25C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD DUP6 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1B4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x244 JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1DC PUSH2 0x35A JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x240 JUMPI PUSH2 0x212 SWAP4 DUP4 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x233 JUMPI PUSH2 0x225 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x22E SWAP2 PUSH2 0x2E1 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI PUSH2 0x2A0 PUSH2 0x35A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x303 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x345 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x36E JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 CALLDATASIZE 0xCD 0xBA POP PUSH19 0x9F7A6BB5204C130F26CFE69609D027F81432D5 0xFC BLOCKHASH BYTE PUSH7 0x98BB3A64736F6C PUSH4 0x4300081C STOP CALLER ",
              "sourceMap": "502:1462:11:-:0;;;;;;;;;;;;;-1:-1:-1;;502:1462:11;;;;-1:-1:-1;;;;;502:1462:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:1462:11;;;;;;;;1273:26:4;;1269:95;;-1:-1:-1;502:1462:11;;-1:-1:-1;;;;;;502:1462:11;;;;;;;;;;-1:-1:-1;;;;;502:1462:11;;;;3052:40:4;;-1:-1:-1;3052:40:4;502:1462:11;;;;;;;1269:95:4;1322:31;;;-1:-1:-1;1322:31:4;-1:-1:-1;1322:31:4;502:1462:11;;-1:-1:-1;1322:31:4;502:1462:11;-1:-1:-1;502:1462:11;;;;;;-1:-1:-1;502:1462:11;;;;;-1:-1:-1;502:1462:11"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_encode_string": {
                  "entryPoint": 793,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 737,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 858,
                  "id": 753,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b6000803560e01c8063715018a6146102875780638da5cb5b146102605780639623609d1461012f578063ad3cb1cc146100e25763f2fde38b1461005457600080fd5b346100df5760203660031901126100df576004356001600160a01b038116908190036100dd5761008261035a565b80156100c95781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b505b80fd5b50346100df57806003193601126100df575061012b6040516101056040826102e1565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610319565b0390f35b5060603660031901126100df576004356001600160a01b038116908190036100dd576024356001600160a01b038116908190036102405760443567ffffffffffffffff811161025c573660238201121561025c57806004013567ffffffffffffffff8111610248576040518593929091906101b4601f8301601f1916602001846102e1565b81835236602483830101116102445781859260246020930183860137830101526101dc61035a565b833b156102405761021293839260405180968194829363278f794360e11b84526004840152604060248401526044830190610319565b039134905af18015610233576102255780f35b61022e916102e1565b388180f35b50604051903d90823e3d90fd5b8280fd5b8480fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b50346100df57806003193601126100df57546040516001600160a01b039091168152602090f35b50346100df57806003193601126100df576102a061035a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90601f8019910116810190811067ffffffffffffffff82111761030357604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b848110610345575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610324565b6000546001600160a01b0316330361036e57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220c136cdba50729f7a6bb5204c130f26cfe69609d027f81432d5fc401a6698bb3a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xE2 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH2 0x82 PUSH2 0x35A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI POP PUSH2 0x12B PUSH1 0x40 MLOAD PUSH2 0x105 PUSH1 0x40 DUP3 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x240 JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x25C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD DUP6 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1B4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x244 JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1DC PUSH2 0x35A JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x240 JUMPI PUSH2 0x212 SWAP4 DUP4 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x233 JUMPI PUSH2 0x225 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x22E SWAP2 PUSH2 0x2E1 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI PUSH2 0x2A0 PUSH2 0x35A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x303 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x345 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x36E JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 CALLDATASIZE 0xCD 0xBA POP PUSH19 0x9F7A6BB5204C130F26CFE69609D027F81432D5 0xFC BLOCKHASH BYTE PUSH7 0x98BB3A64736F6C PUSH4 0x4300081C STOP CALLER ",
              "sourceMap": "502:1462:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:1462:11;;;;;;-1:-1:-1;;;;;502:1462:11;;;;;;;;1500:62:4;;:::i;:::-;2627:22;;2623:91;;502:1462:11;;-1:-1:-1;;;;;;502:1462:11;;;;;;-1:-1:-1;;;;;502:1462:11;3052:40:4;502:1462:11;;3052:40:4;502:1462:11;;2623:91:4;-1:-1:-1;;;2672:31:4;;502:1462:11;;;;;2672:31:4;;502:1462:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;502:1462:11;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;502:1462:11;;-1:-1:-1;;502:1462:11;;;;;;-1:-1:-1;;;;;502:1462:11;;;;;;;;;;-1:-1:-1;;;;;502:1462:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;502:1462:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:4;;:::i;:::-;1893::11;;;;;502:1462;;;;;;;;;;;;;;;1893:62;;502:1462;1893:62;;502:1462;;;;;;;;;;;:::i;:::-;1893:62;1923:9;;1893:62;;;;;;;;;502:1462;;1893:62;;;;:::i;:::-;;;502:1462;;1893:62;502:1462;;;;;;;;;;;1893:62;502:1462;;;;;;;;-1:-1:-1;;;502:1462:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:1462:11;;;;;;;;;;;;;;;;;;;;;1500:62:4;;:::i;:::-;502:1462:11;;-1:-1:-1;;;;;;502:1462:11;;;;;;-1:-1:-1;;;;;502:1462:11;3052:40:4;502:1462:11;;3052:40:4;502:1462:11;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;502:1462:11;;;;;-1:-1:-1;502:1462:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;1796:162:4;1710:6;502:1462:11;-1:-1:-1;;;;;502:1462:11;735:10:17;1855:23:4;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:17;1901:40:4;502:1462:11;;1710:6:4;1901:40"
            },
            "methodIdentifiers": {
              "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b",
              "upgradeAndCall(address,address,bytes)": "9623609d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an auxiliary contract meant to be assigned as the admin of a {TransparentUpgradeableProxy}. For an explanation of why you would want to use this see the documentation for {TransparentUpgradeableProxy}.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the initial owner who can perform upgrades.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgrade(address,address)` and `upgradeAndCall(address,address,bytes)` are present, and `upgrade` must be used if no function should be called, while `upgradeAndCall` will invoke the `receive` function if the third argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeAndCall(address,address,bytes)` is present, and the third argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":\"ProxyAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x46f86003755f50eff00a7c5aaf493ae62e024142b8aec4493a313851d3c14872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462c770cb667cc75ab22df5a29c50873b24b267274edf87ac5cfe0112bf4c3f7\",\"dweb:/ipfs/QmTfKk32AkQ2yyYZCYJ44V69EM5t9ryBFC6bRF7FVMHXvj\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x92579f452fe663595a898cbac85d80bb3868a6c9f034f19ba7fbebdfa3b65a4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d07a888cd4a26c7077a30dd99e9ac30fbe2752bfb37e58c65f06a3b192079ef3\",\"dweb:/ipfs/QmZCQY4FC4ynBv9dha4BBWM1vYxTUJPBdFBS4HEFe6XzVB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 677,
                "contract": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          }
        }
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "ITransparentUpgradeableProxy": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "previousAdmin",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "beacon",
                  "type": "address"
                }
              ],
              "name": "BeaconUpgraded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newImplementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "upgradeToAndCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "upgradeToAndCall(address,bytes)": "4f1ef286"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and its upgradeability mechanism is implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"upgradeToAndCall(address,bytes)\":{\"details\":\"See {UUPSUpgradeable-upgradeToAndCall}\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x46f86003755f50eff00a7c5aaf493ae62e024142b8aec4493a313851d3c14872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462c770cb667cc75ab22df5a29c50873b24b267274edf87ac5cfe0112bf4c3f7\",\"dweb:/ipfs/QmTfKk32AkQ2yyYZCYJ44V69EM5t9ryBFC6bRF7FVMHXvj\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x92579f452fe663595a898cbac85d80bb3868a6c9f034f19ba7fbebdfa3b65a4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d07a888cd4a26c7077a30dd99e9ac30fbe2752bfb37e58c65f06a3b192079ef3\",\"dweb:/ipfs/QmZCQY4FC4ynBv9dha4BBWM1vYxTUJPBdFBS4HEFe6XzVB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "TransparentUpgradeableProxy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_logic",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "_data",
                  "type": "bytes"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "AddressEmptyCode",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidAdmin",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "ERC1967InvalidImplementation",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ERC1967NonPayable",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedCall",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ProxyDeniedAdminAccess",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "previousAdmin",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newAdmin",
                  "type": "address"
                }
              ],
              "name": "AdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "Upgraded",
              "type": "event"
            },
            {
              "stateMutability": "payable",
              "type": "fallback"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 696,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 659,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 716,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_verifyCallResultFromTarget": {
                  "entryPoint": 743,
                  "id": 2372,
                  "parameterSlots": 3,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60a0604052610b278038038061001481610293565b928339810160608282031261028e5761002c826102b8565b610038602084016102b8565b604084015190936001600160401b03821161028e570182601f8201121561028e5780519061006d610068836102cc565b610293565b938285526020838301011161028e5760005b828110610279575050602060009184010152803b15610258577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0383169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511561023f5760008083602061013595519101845af43d15610237573d91610125610068846102cc565b9283523d6000602085013e6102e7565b505b604051906104918083016001600160401b0381118482101761022157602092849261067684396001600160a01b031681520301906000f080156102155760018060a01b031680608052600080516020610b07833981519152547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6040805160018060a01b0384168152846020820152a181156101ff576001600160a01b03191617600080516020610b078339815191525560405161032d908161034982396080518160070152f35b633173bdd160e11b600052600060045260246000fd5b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b6060916102e7565b505034156101375763b398979f60e01b60005260046000fd5b634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b8060208092840101518282880101520161007f565b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761022157604052565b51906001600160a01b038216820361028e57565b6001600160401b03811161022157601f01601f191660200190565b9061030d57508051156102fc57805190602001fd5b63d6bda27560e01b60005260046000fd5b8151158061033f575b61031e575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b1561031656fe6080604052337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603610069576000356001600160e01b03191663278f794360e11b1461005f576334ad5dbb60e21b60005260046000fd5b610067610113565b005b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009081906001600160a01b0316368280378136915af43d6000803e156100b1573d6000f35b3d6000fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100f257604052565b6100b6565b67ffffffffffffffff81116100f257601f01601f191660200190565b3660041161019d57604036600319011261019d576004356001600160a01b0381169081900361019d576024359067ffffffffffffffff821161019d573660238301121561019d5781600401359061017161016c836100f7565b6100cc565b91808352366024828601011161019d57602081600092602461019b970183870137840101526101a2565b565b600080fd5b90813b15610239577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511561021f5761021c9161025b565b50565b50503461022857565b63b398979f60e01b60005260046000fd5b50634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b60008061028f93602081519101845af43d15610292573d9161027f61016c846100f7565b9283523d6000602085013e610296565b90565b6060915b906102bc57508051156102ab57805190602001fd5b63d6bda27560e01b60005260046000fd5b815115806102ee575b6102cd575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b156102c556fea26469706673582212207a264e08be85255ecaa35ce77271e4fb2c3ced4613ec323dbd5468039a4a5aac64736f6c634300081c003360803460bc57601f61049138819003918201601f19168301916001600160401b0383118484101760c15780849260209460405283398101031260bc57516001600160a01b0381169081900360bc57801560a657600080546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36103b990816100d88239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c8063715018a6146102875780638da5cb5b146102605780639623609d1461012f578063ad3cb1cc146100e25763f2fde38b1461005457600080fd5b346100df5760203660031901126100df576004356001600160a01b038116908190036100dd5761008261035a565b80156100c95781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b505b80fd5b50346100df57806003193601126100df575061012b6040516101056040826102e1565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610319565b0390f35b5060603660031901126100df576004356001600160a01b038116908190036100dd576024356001600160a01b038116908190036102405760443567ffffffffffffffff811161025c573660238201121561025c57806004013567ffffffffffffffff8111610248576040518593929091906101b4601f8301601f1916602001846102e1565b81835236602483830101116102445781859260246020930183860137830101526101dc61035a565b833b156102405761021293839260405180968194829363278f794360e11b84526004840152604060248401526044830190610319565b039134905af18015610233576102255780f35b61022e916102e1565b388180f35b50604051903d90823e3d90fd5b8280fd5b8480fd5b634e487b7160e01b85526041600452602485fd5b8380fd5b50346100df57806003193601126100df57546040516001600160a01b039091168152602090f35b50346100df57806003193601126100df576102a061035a565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b90601f8019910116810190811067ffffffffffffffff82111761030357604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b848110610345575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610324565b6000546001600160a01b0316330361036e57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220c136cdba50729f7a6bb5204c130f26cfe69609d027f81432d5fc401a6698bb3a64736f6c634300081c0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
              "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH2 0xB27 DUP1 CODESIZE SUB DUP1 PUSH2 0x14 DUP2 PUSH2 0x293 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0x28E JUMPI PUSH2 0x2C DUP3 PUSH2 0x2B8 JUMP JUMPDEST PUSH2 0x38 PUSH1 0x20 DUP5 ADD PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x28E JUMPI ADD DUP3 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x28E JUMPI DUP1 MLOAD SWAP1 PUSH2 0x6D PUSH2 0x68 DUP4 PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x293 JUMP JUMPDEST SWAP4 DUP3 DUP6 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x28E JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x279 JUMPI POP POP PUSH1 0x20 PUSH1 0x0 SWAP2 DUP5 ADD ADD MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x258 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 DUP4 PUSH1 0x20 PUSH2 0x135 SWAP6 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x237 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x125 PUSH2 0x68 DUP5 PUSH2 0x2CC JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x2E7 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x491 DUP1 DUP4 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP5 DUP3 LT OR PUSH2 0x221 JUMPI PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH2 0x676 DUP5 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE SUB ADD SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0x215 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x80 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB07 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x1FF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xB07 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0x40 MLOAD PUSH2 0x32D SWAP1 DUP2 PUSH2 0x349 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH1 0x7 ADD MSTORE RETURN JUMPDEST PUSH4 0x3173BDD1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x2E7 JUMP JUMPDEST POP POP CALLVALUE ISZERO PUSH2 0x137 JUMPI PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x221 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x28E JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x221 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x30D JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2FC JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x33F JUMPI JUMPDEST PUSH2 0x31E JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x316 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ PUSH2 0x5F JUMPI PUSH4 0x34AD5DBB PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x67 PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY ISZERO PUSH2 0xB1 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xF2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x19D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x19D JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19D JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x19D JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x171 PUSH2 0x16C DUP4 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0xCC JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP7 ADD ADD GT PUSH2 0x19D JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x19B SWAP8 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x1A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x239 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x21F JUMPI PUSH2 0x21C SWAP2 PUSH2 0x25B JUMP JUMPDEST POP JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x228 JUMPI JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28F SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x292 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x27F PUSH2 0x16C DUP5 PUSH2 0xF7 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x296 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP1 PUSH2 0x2BC JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2AB JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2EE JUMPI JUMPDEST PUSH2 0x2CD JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2C5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x264E08BE85255ECAA35CE77271E4FB2C3CED4613EC323DBD546803 SWAP11 BLOBBASEFEE GAS 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x491 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xBC JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x3B9 SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0xE2 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH2 0x82 PUSH2 0x35A JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC9 JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI POP PUSH2 0x12B PUSH1 0x40 MLOAD PUSH2 0x105 PUSH1 0x40 DUP3 PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xDD JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x240 JUMPI PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x25C JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x25C JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x248 JUMPI PUSH1 0x40 MLOAD DUP6 SWAP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1B4 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2E1 JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x244 JUMPI DUP2 DUP6 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x1DC PUSH2 0x35A JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x240 JUMPI PUSH2 0x212 SWAP4 DUP4 SWAP3 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP5 DUP3 SWAP4 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x319 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x233 JUMPI PUSH2 0x225 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x22E SWAP2 PUSH2 0x2E1 JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xDF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xDF JUMPI PUSH2 0x2A0 PUSH2 0x35A JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x303 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x345 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x324 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x36E JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 CALLDATASIZE 0xCD 0xBA POP PUSH19 0x9F7A6BB5204C130F26CFE69609D027F81432D5 0xFC BLOCKHASH BYTE PUSH7 0x98BB3A64736F6C PUSH4 0x4300081C STOP CALLER 0xB5 BALANCE 0x27 PUSH9 0x4A568B3173AE13B9F8 0xA6 ADD PUSH15 0x243E63B6E8EE1178D6A717850B5D61 SUB ",
              "sourceMap": "4314:2231:12:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4314:2231:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;4314:2231:12;;;;;;;;;-1:-1:-1;4314:2231:12;;;;;1748:29:8;;:34;1744:119;;811:66;4314:2231:12;;-1:-1:-1;;;;;;4314:2231:12;-1:-1:-1;;;;;4314:2231:12;;;;;;;;2407:36:8;-1:-1:-1;;2407:36:8;4314:2231:12;;2458:15:8;:11;;-1:-1:-1;4065:25:16;;4314:2231:12;4107:55:16;4065:25;;4314:2231:12;;4065:25:16;;;4314:2231:12;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;4314:2231:12;;;;4107:55:16;:::i;:::-;;2454:148:8;4314:2231:12;;;5290:28;;;;-1:-1:-1;;;;;5290:28:12;;;;;;;;4314:2231;5290:28;;;;;;-1:-1:-1;;;;;4314:2231:12;;;5290:28;;;-1:-1:-1;5290:28:12;;;;;4314:2231;;;;;;5273:46;;;-1:-1:-1;;;;;;;;;;;2868:66:8;3890:43;4314:2231:12;;;;;;;;;;;;;;;;;3890:43:8;3549:22;;3545:91;;-1:-1:-1;;;;;;4314:2231:12;;-1:-1:-1;;;;;;;;;;;4314:2231:12;;;;;;;;;5273:46;4314:2231;;;;;;3545:91:8;3594:31;;;-1:-1:-1;3594:31:8;-1:-1:-1;3594:31:8;4314:2231:12;;-1:-1:-1;3594:31:8;5290:28:12;4314:2231;;;-1:-1:-1;4314:2231:12;;;;;5290:28;4314:2231;;;-1:-1:-1;4314:2231:12;;;;;-1:-1:-1;4314:2231:12;;;;4107:55:16;:::i;2454:148:8:-;6163:9;;;6159:70;2454:148;6159:70;6199:19;;;-1:-1:-1;6199:19:8;;-1:-1:-1;6199:19:8;1744:119;-1:-1:-1;;;;1805:47:8;;;-1:-1:-1;;;;;4314:2231:12;;;;1805:47:8;4314:2231:12;;;1805:47:8;4314:2231:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;4314:2231:12;;;;;;;;;-1:-1:-1;;4314:2231:12;;;-1:-1:-1;;;;;4314:2231:12;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;4314:2231:12;;;;;;:::o;:::-;-1:-1:-1;;;;;4314:2231:12;;;;;;-1:-1:-1;;4314:2231:12;;;;:::o;4437:582:16:-;;4609:8;;-1:-1:-1;4314:2231:12;;5690:21:16;:17;;5815:158;;;;;;5686:354;6010:19;;;5710:1;6010:19;;5710:1;6010:19;4605:408;4314:2231:12;;4857:22:16;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:16;4933:24;;;-1:-1:-1;;;;;4314:2231:12;;;;4933:24:16;4314:2231:12;;;4933:24:16;4857:49;4883:18;;;:23;4857:49;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 204,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_allocation_size_bytes": {
                  "entryPoint": 247,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_dispatchUpgradeToAndCall": {
                  "entryPoint": 275,
                  "id": 1535,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_functionDelegateCall": {
                  "entryPoint": 603,
                  "id": 2332,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_upgradeToAndCall": {
                  "entryPoint": 418,
                  "id": 1121,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_verifyCallResultFromTarget": {
                  "entryPoint": 662,
                  "id": 2372,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 182,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "1427": [
                  {
                    "length": 32,
                    "start": 7
                  }
                ]
              },
              "linkReferences": {},
              "object": "6080604052337f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031603610069576000356001600160e01b03191663278f794360e11b1461005f576334ad5dbb60e21b60005260046000fd5b610067610113565b005b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460009081906001600160a01b0316368280378136915af43d6000803e156100b1573d6000f35b3d6000fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100f257604052565b6100b6565b67ffffffffffffffff81116100f257601f01601f191660200190565b3660041161019d57604036600319011261019d576004356001600160a01b0381169081900361019d576024359067ffffffffffffffff821161019d573660238301121561019d5781600401359061017161016c836100f7565b6100cc565b91808352366024828601011161019d57602081600092602461019b970183870137840101526101a2565b565b600080fd5b90813b15610239577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a280511561021f5761021c9161025b565b50565b50503461022857565b63b398979f60e01b60005260046000fd5b50634c9c8ce360e01b60009081526001600160a01b0391909116600452602490fd5b60008061028f93602081519101845af43d15610292573d9161027f61016c846100f7565b9283523d6000602085013e610296565b90565b6060915b906102bc57508051156102ab57805190602001fd5b63d6bda27560e01b60005260046000fd5b815115806102ee575b6102cd575090565b639996b31560e01b60009081526001600160a01b0391909116600452602490fd5b50803b156102c556fea26469706673582212207a264e08be85255ecaa35ce77271e4fb2c3ced4613ec323dbd5468039a4a5aac64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x278F7943 PUSH1 0xE1 SHL EQ PUSH2 0x5F JUMPI PUSH4 0x34AD5DBB PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x67 PUSH2 0x113 JUMP JUMPDEST STOP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY ISZERO PUSH2 0xB1 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0xF2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xB6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xF2 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x19D JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x19D JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x19D JUMPI PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x19D JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x19D JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x171 PUSH2 0x16C DUP4 PUSH2 0xF7 JUMP JUMPDEST PUSH2 0xCC JUMP JUMPDEST SWAP2 DUP1 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP7 ADD ADD GT PUSH2 0x19D JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x19B SWAP8 ADD DUP4 DUP8 ADD CALLDATACOPY DUP5 ADD ADD MSTORE PUSH2 0x1A2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x239 JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x21F JUMPI PUSH2 0x21C SWAP2 PUSH2 0x25B JUMP JUMPDEST POP JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x228 JUMPI JUMP JUMPDEST PUSH4 0xB398979F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28F SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x292 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x27F PUSH2 0x16C DUP5 PUSH2 0xF7 JUMP JUMPDEST SWAP3 DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x296 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 SWAP2 JUMPDEST SWAP1 PUSH2 0x2BC JUMPI POP DUP1 MLOAD ISZERO PUSH2 0x2AB JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xD6BDA275 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST DUP2 MLOAD ISZERO DUP1 PUSH2 0x2EE JUMPI JUMPDEST PUSH2 0x2CD JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x9996B315 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 EXTCODESIZE ISZERO PUSH2 0x2C5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x264E08BE85255ECAA35CE77271E4FB2C3CED4613EC323DBD546803 SWAP11 BLOBBASEFEE GAS 0xAC PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "4314:2231:12:-:0;;;5816:10;5600:6;-1:-1:-1;;;;;4314:2231:12;5816:27;4314:2231;;5863:7;;-1:-1:-1;;;;;;5863:7:12;-1:-1:-1;;;5863:65:12;5874:54;;5955:24;;;5863:7;5955:24;;5863:7;5955:24;5859:201;;;:::i;:::-;4314:2231;5812:306;811:66:8;;-1:-1:-1;;;;;;;;;4314:2231:12;1019:819:9;-1:-1:-1;;1019:819:9;;;;;;;-1:-1:-1;1019:819:9;;;;;;-1:-1:-1;1019:819:9;;;-1:-1:-1;1019:819:9;4314:2231:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4314:2231:12;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;;4314:2231:12;;;;:::o;6326:217::-;6441:8;6450:1;4314:2231;;;;6441:8;-1:-1:-1;;4314:2231:12;;;;6450:1;4314:2231;-1:-1:-1;;;;;4314:2231:12;;;;;;;;;;;;;;;;6441:8;4314:2231;;;;;;;;6450:1;4314:2231;;;;;;;:::i;:::-;;:::i;:::-;;;;;6441:8;4314:2231;;;;;;;;;;6441:8;4314:2231;;6531:4;4314:2231;;;;;;;;;;6531:4;:::i;:::-;6326:217::o;4314:2231::-;6441:8;4314:2231;;2264:344:8;;1748:29;;:34;1744:119;;811:66;4314:2231:12;;-1:-1:-1;;;;;;4314:2231:12;-1:-1:-1;;;;;4314:2231:12;;;;;;;;2407:36:8;-1:-1:-1;;2407:36:8;4314:2231:12;;2458:15:8;:11;;2489:53;;;:::i;:::-;;2264:344::o;2454:148::-;6163:9;;;6159:70;;2264:344::o;6159:70::-;6199:19;;;1781:1;6199:19;;1781:1;6199:19;1744:119;-1:-1:-1;;;;1781:1:8;1805:47;;;-1:-1:-1;;;;;4314:2231:12;;;;1805:47:8;4314:2231:12;;;1805:47:8;3916:253:16;4065:25;3916:253;4107:55;3916:253;4065:25;;;;;;;;4314:2231:12;;;;;;;;;;:::i;:::-;;;;;4065:25:16;;4314:2231:12;;;4107:55:16;:::i;:::-;3916:253;:::o;4314:2231:12:-;;;4437:582:16;;4609:8;;-1:-1:-1;4314:2231:12;;5690:21:16;:17;;5815:158;;;;;;5686:354;6010:19;;;5710:1;6010:19;;5710:1;6010:19;4605:408;4314:2231:12;;4857:22:16;:49;;;4605:408;4853:119;;4985:17;;:::o;4853:119::-;-1:-1:-1;;;4878:1:16;4933:24;;;-1:-1:-1;;;;;4314:2231:12;;;;4933:24:16;4314:2231:12;;;4933:24:16;4857:49;4883:18;;;:23;4857:49;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProxyDeniedAdminAccess\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable through an associated {ProxyAdmin} instance. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches the {ITransparentUpgradeableProxy-upgradeToAndCall} function exposed by the proxy itself. 2. If the admin calls the proxy, it can call the `upgradeToAndCall` function but any other call won't be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error indicating the proxy admin cannot fallback to the target implementation. These properties mean that the admin account can only be used for upgrading the proxy, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. For this reason, the proxy deploys an instance of {ProxyAdmin} and allows upgrades only if they come through it. You should think of the `ProxyAdmin` instance as the administrative interface of the proxy, including the ability to change who can trigger upgrades by transferring ownership. NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead `upgradeToAndCall` is implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. NOTE: This proxy does not inherit from {Context} deliberately. The {ProxyAdmin} of this contract won't send a meta-transaction in any way, and any other meta-transaction setup should be made in the implementation contract. IMPORTANT: This contract avoids unnecessary storage reads by setting the admin only during construction as an immutable variable, preventing any changes thereafter. However, the admin slot defined in ERC-1967 can still be overwritten by the implementation logic pointed to by this proxy. In such cases, the contract may end up in an undesirable state where the admin slot is different from the actual admin. Relying on the value of the admin slot is generally fine if the implementation is trusted. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the `upgradeToAndCall` function inaccessible, preventing upgradeability and compromising transparency.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ProxyDeniedAdminAccess()\":[{\"details\":\"The proxy caller is the current admin, and can't fallback to the proxy target.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by an instance of a {ProxyAdmin} with an `initialOwner`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x46f86003755f50eff00a7c5aaf493ae62e024142b8aec4493a313851d3c14872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462c770cb667cc75ab22df5a29c50873b24b267274edf87ac5cfe0112bf4c3f7\",\"dweb:/ipfs/QmTfKk32AkQ2yyYZCYJ44V69EM5t9ryBFC6bRF7FVMHXvj\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x92579f452fe663595a898cbac85d80bb3868a6c9f034f19ba7fbebdfa3b65a4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d07a888cd4a26c7077a30dd99e9ac30fbe2752bfb37e58c65f06a3b192079ef3\",\"dweb:/ipfs/QmZCQY4FC4ynBv9dha4BBWM1vYxTUJPBdFBS4HEFe6XzVB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1559,
                "contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
                "label": "_balances",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1565,
                "contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
                "label": "_allowances",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
              },
              {
                "astId": 1567,
                "contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
                "label": "_totalSupply",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 1569,
                "contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
                "label": "_name",
                "offset": 0,
                "slot": "3",
                "type": "t_string_storage"
              },
              {
                "astId": 1571,
                "contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
                "label": "_symbol",
                "offset": 0,
                "slot": "4",
                "type": "t_string_storage"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/utils/Address.sol": {
        "Address": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                }
              ],
              "name": "AddressEmptyCode",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202632ad51b126c4d837f5048e794737a6ae9b0bb69152f07ca66eb46ea5f3dff164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 ORIGIN 0xAD MLOAD 0xB1 0x26 0xC4 0xD8 CALLDATACOPY CREATE2 DIV DUP15 PUSH26 0x4737A6AE9B0BB69152F07CA66EB46EA5F3DFF164736F6C634300 ADDMOD SHR STOP CALLER ",
              "sourceMap": "233:5815:16:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea26469706673582212202632ad51b126c4d837f5048e794737a6ae9b0bb69152f07ca66eb46ea5f3dff164736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 ORIGIN 0xAD MLOAD 0xB1 0x26 0xC4 0xD8 CALLDATACOPY CREATE2 DIV DUP15 PUSH26 0x4737A6AE9B0BB69152F07CA66EB46EA5F3DFF164736F6C634300 ADDMOD SHR STOP CALLER ",
              "sourceMap": "233:5815:16:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/utils/Errors.sol": {
        "Errors": {
          "abi": [
            {
              "inputs": [],
              "name": "FailedCall",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedDeployment",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "MissingPrecompile",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122090501f569c332889ef0a302c9710cbd1fdfcb4ca4eb1c5975509917ffa5e464964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 POP 0x1F JUMP SWAP13 CALLER 0x28 DUP10 0xEF EXP ADDRESS 0x2C SWAP8 LT 0xCB 0xD1 REVERT 0xFC 0xB4 0xCA 0x4E 0xB1 0xC5 SWAP8 SSTORE MULMOD SWAP2 PUSH32 0xFA5E464964736F6C634300081C00330000000000000000000000000000000000 ",
              "sourceMap": "411:484:18:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea264697066735822122090501f569c332889ef0a302c9710cbd1fdfcb4ca4eb1c5975509917ffa5e464964736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 POP 0x1F JUMP SWAP13 CALLER 0x28 DUP10 0xEF EXP ADDRESS 0x2C SWAP8 LT 0xCB 0xD1 REVERT 0xFC 0xB4 0xCA 0x4E 0xB1 0xC5 SWAP8 SSTORE MULMOD SWAP2 PUSH32 0xFA5E464964736F6C634300081C00330000000000000000000000000000000000 ",
              "sourceMap": "411:484:18:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol": {
        "StorageSlot": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122075ff3ee7558f3370d11093f8b835cf8b00825d1f592fd2c0f3cc239fbf6babf164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xFF3EE7558F3370D11093F8B835CF8B00825D1F592FD2 0xC0 RETURN 0xCC 0x23 SWAP16 0xBF PUSH12 0xABF164736F6C634300081C00 CALLER ",
              "sourceMap": "1407:2774:19:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea264697066735822122075ff3ee7558f3370d11093f8b835cf8b00825d1f592fd2c0f3cc239fbf6babf164736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xFF3EE7558F3370D11093F8B835CF8B00825D1F592FD2 0xC0 RETURN 0xCC 0x23 SWAP16 0xBF PUSH12 0xABF164736F6C634300081C00 CALLER ",
              "sourceMap": "1407:2774:19:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "contracts/DappToken.sol": {
        "DappToken": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 931,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461039e57610c206020813803918261001c816103a3565b93849283398101031261039e57516001600160a01b0381169081900361039e5761004660406103a3565b90600a8252692220b838102a37b5b2b760b11b602083015261006860406103a3565b60048152630444150560e41b602082015282519091906001600160401b0381116102a757600354600181811c91168015610394575b602082101461028757601f811161032f575b506020601f82116001146102c857819293946000926102bd575b50508160011b916000199060031b1c1916176003555b81516001600160401b0381116102a757600454600181811c9116801561029d575b602082101461028757601f8111610222575b50602092601f82116001146101bd57928192936000926101b2575b50508160011b916000199060031b1c1916176004555b801561019c57600580546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a361085790816103c98239f35b631e4fbdf760e01b600052600060045260246000fd5b01519050388061012d565b601f198216936004600052806000209160005b86811061020a57508360019596106101f1575b505050811b01600455610143565b015160001960f88460031b161c191690553880806101e3565b919260206001819286850151815501940192016101d0565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c8101916020841061027d575b601f0160051c01905b8181106102715750610112565b60008155600101610264565b909150819061025b565b634e487b7160e01b600052602260045260246000fd5b90607f1690610100565b634e487b7160e01b600052604160045260246000fd5b0151905038806100c9565b601f198216906003600052806000209160005b818110610317575095836001959697106102fe575b505050811b016003556100df565b015160001960f88460031b161c191690553880806102f0565b9192602060018192868b0151815501940192016102db565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c8101916020841061038a575b601f0160051c01905b81811061037e57506100af565b60008155600101610371565b9091508190610368565b90607f169061009d565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176102a75760405256fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461060157508063095ea7b31461057b57806318160ddd1461055d57806323b872dd14610470578063313ce5671461045457806340c10f19146103a057806370a0823114610366578063715018a6146103095780638da5cb5b146102e057806395d89b41146101bf578063a9059cbb1461018e578063dd62ed3e1461013d5763f2fde38b146100ae57600080fd5b34610138576020366003190112610138576100c761071d565b6100cf6107f8565b6001600160a01b0316801561012257600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b346101385760403660031901126101385761015661071d565b61015e610733565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b34610138576040366003190112610138576101b46101aa61071d565b6024359033610749565b602060405160018152f35b346101385760003660031901126101385760405160006004548060011c906001811680156102d6575b6020831081146102c2578285529081156102a6575060011461024f575b50819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b82821061029057506020915082010182610205565b600181602092548385880101520191019061027b565b90506020925060ff191682840152151560051b82010182610205565b634e487b7160e01b84526022600452602484fd5b91607f16916101e8565b34610138576000366003190112610138576005546040516001600160a01b039091168152602090f35b34610138576000366003190112610138576103226107f8565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610138576020366003190112610138576001600160a01b0361038761071d565b1660005260006020526020604060002054604051908152f35b34610138576040366003190112610138576103b961071d565b602435906103c56107f8565b6001600160a01b0316801561043e5760025491808301809311610428576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b3461013857600036600319011261013857602060405160128152f35b346101385760603660031901126101385761048961071d565b610491610733565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106104d1575b506101b49350610749565b83811061054057841561052a573315610514576101b4946000526001602052604060002060018060a01b03331660005260205283604060002091039055846104c6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b34610138576000366003190112610138576020600254604051908152f35b346101385760403660031901126101385761059461071d565b60243590331561052a576001600160a01b031690811561051457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101385760003660031901126101385760006003548060011c906001811680156106ca575b6020831081146102c2578285529081156102a657506001146106735750819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106106b457506020915082010182610205565b600181602092548385880101520191019061069f565b91607f1691610627565b91909160208152825180602083015260005b818110610707575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016106e6565b600435906001600160a01b038216820361013857565b602435906001600160a01b038216820361013857565b6001600160a01b03169081156107e2576001600160a01b031691821561043e5760008281528060205260408120548281106107c85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b6005546001600160a01b0316330361080c57565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212209f86d71550edbbe7630813a1118d8f50b0f9815a03540782d0a94742dd0cc5e364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x39E JUMPI PUSH2 0xC20 PUSH1 0x20 DUP2 CODESIZE SUB SWAP2 DUP3 PUSH2 0x1C DUP2 PUSH2 0x3A3 JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x39E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x39E JUMPI PUSH2 0x46 PUSH1 0x40 PUSH2 0x3A3 JUMP JUMPDEST SWAP1 PUSH1 0xA DUP3 MSTORE PUSH10 0x2220B838102A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x68 PUSH1 0x40 PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x4 DUP2 MSTORE PUSH4 0x4441505 PUSH1 0xE4 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A7 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x394 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x287 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x32F JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2C8 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2BD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A7 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x29D JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x287 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x222 JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1BD JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x1B2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH2 0x857 SWAP1 DUP2 PUSH2 0x3C9 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x12D JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x20A JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x1F1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x143 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1E3 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x27D JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x271 JUMPI POP PUSH2 0x112 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x264 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x25B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x100 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xC9 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x317 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x2FE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xDF JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2F0 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x38A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x37E JUMPI POP PUSH2 0xAF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x371 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x368 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x9D JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2A7 JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x601 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0xC7 PUSH2 0x71D JUMP JUMPDEST PUSH2 0xCF PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x156 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x15E PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x1B4 PUSH2 0x1AA PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x749 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x24F JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x290 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x322 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x387 PUSH2 0x71D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x3B9 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3C5 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x428 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x489 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x491 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x4D1 JUMPI JUMPDEST POP PUSH2 0x1B4 SWAP4 POP PUSH2 0x749 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x540 JUMPI DUP5 ISZERO PUSH2 0x52A JUMPI CALLER ISZERO PUSH2 0x514 JUMPI PUSH2 0x1B4 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x4C6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x594 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x52A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x514 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x6CA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x673 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x6B4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x69F JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x627 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x707 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x7C8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x80C JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 DUP7 0xD7 ISZERO POP 0xED 0xBB 0xE7 PUSH4 0x813A111 DUP14 DUP16 POP 0xB0 0xF9 DUP2 GAS SUB SLOAD SMOD DUP3 0xD0 0xA9 SELFBALANCE TIMESTAMP 0xDD 0xC 0xC5 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "252:252:20:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;252:252:20;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;252:252:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;;252:252:20;;;;;;;;;-1:-1:-1;;;;;252:252:20;;;;1648:13:13;252:252:20;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;;;;;;;;;1648:13:13;252:252:20;;;;;1648:13:13;252:252:20;;;;-1:-1:-1;;;;;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;;;;;;;;;1648:13:13;252:252:20;;;;;;;;1273:26:4;;1269:95;;3004:6;252:252:20;;-1:-1:-1;;;;;;252:252:20;;;;;;;;;;;-1:-1:-1;;;;;252:252:20;3052:40:4;-1:-1:-1;;3052:40:4;252:252:20;;;;;;;1269:95:4;1322:31;;;-1:-1:-1;1322:31:4;-1:-1:-1;252:252:20;;;-1:-1:-1;1322:31:4;252:252:20;;;;-1:-1:-1;252:252:20;;;;;;;;;;;-1:-1:-1;252:252:20;;-1:-1:-1;252:252:20;;-1:-1:-1;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:13;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;;;;;-1:-1:-1;252:252:20;;;;;;;;-1:-1:-1;252:252:20;;;;;-1:-1:-1;252:252:20;;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;-1:-1:-1;252:252:20;;;;;-1:-1:-1;252:252:20;;;;;;;;;;1648:13:13;-1:-1:-1;252:252:20;;-1:-1:-1;252:252:20;;-1:-1:-1;252:252:20;;;;;;;;;;;;;;;;;;;;;;;1648:13:13;252:252:20;;;;;;;;;;1648:13:13;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:13;-1:-1:-1;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;;;;;-1:-1:-1;252:252:20;;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;;;;;-1:-1:-1;;252:252:20;;;-1:-1:-1;;;;;252:252:20;;;;;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1821,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_3898": {
                  "entryPoint": 1843,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 1748,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_checkOwner": {
                  "entryPoint": 2040,
                  "id": 753,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 1865,
                  "id": 1781,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461060157508063095ea7b31461057b57806318160ddd1461055d57806323b872dd14610470578063313ce5671461045457806340c10f19146103a057806370a0823114610366578063715018a6146103095780638da5cb5b146102e057806395d89b41146101bf578063a9059cbb1461018e578063dd62ed3e1461013d5763f2fde38b146100ae57600080fd5b34610138576020366003190112610138576100c761071d565b6100cf6107f8565b6001600160a01b0316801561012257600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b346101385760403660031901126101385761015661071d565b61015e610733565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b34610138576040366003190112610138576101b46101aa61071d565b6024359033610749565b602060405160018152f35b346101385760003660031901126101385760405160006004548060011c906001811680156102d6575b6020831081146102c2578285529081156102a6575060011461024f575b50819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b82821061029057506020915082010182610205565b600181602092548385880101520191019061027b565b90506020925060ff191682840152151560051b82010182610205565b634e487b7160e01b84526022600452602484fd5b91607f16916101e8565b34610138576000366003190112610138576005546040516001600160a01b039091168152602090f35b34610138576000366003190112610138576103226107f8565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610138576020366003190112610138576001600160a01b0361038761071d565b1660005260006020526020604060002054604051908152f35b34610138576040366003190112610138576103b961071d565b602435906103c56107f8565b6001600160a01b0316801561043e5760025491808301809311610428576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b3461013857600036600319011261013857602060405160128152f35b346101385760603660031901126101385761048961071d565b610491610733565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106104d1575b506101b49350610749565b83811061054057841561052a573315610514576101b4946000526001602052604060002060018060a01b03331660005260205283604060002091039055846104c6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b34610138576000366003190112610138576020600254604051908152f35b346101385760403660031901126101385761059461071d565b60243590331561052a576001600160a01b031690811561051457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101385760003660031901126101385760006003548060011c906001811680156106ca575b6020831081146102c2578285529081156102a657506001146106735750819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106106b457506020915082010182610205565b600181602092548385880101520191019061069f565b91607f1691610627565b91909160208152825180602083015260005b818110610707575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016106e6565b600435906001600160a01b038216820361013857565b602435906001600160a01b038216820361013857565b6001600160a01b03169081156107e2576001600160a01b031691821561043e5760008281528060205260408120548281106107c85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b6005546001600160a01b0316330361080c57565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212209f86d71550edbbe7630813a1118d8f50b0f9815a03540782d0a94742dd0cc5e364736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x601 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0xC7 PUSH2 0x71D JUMP JUMPDEST PUSH2 0xCF PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x156 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x15E PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x1B4 PUSH2 0x1AA PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x749 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x24F JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x290 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x322 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x387 PUSH2 0x71D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x3B9 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3C5 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x428 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x489 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x491 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x4D1 JUMPI JUMPDEST POP PUSH2 0x1B4 SWAP4 POP PUSH2 0x749 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x540 JUMPI DUP5 ISZERO PUSH2 0x52A JUMPI CALLER ISZERO PUSH2 0x514 JUMPI PUSH2 0x1B4 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x4C6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x594 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x52A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x514 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x6CA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x673 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x6B4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x69F JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x627 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x707 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x7C8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x80C JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 DUP7 0xD7 ISZERO POP 0xED 0xBB 0xE7 PUSH4 0x813A111 DUP14 DUP16 POP 0xB0 0xF9 DUP2 GAS SUB SLOAD SMOD DUP3 0xD0 0xA9 SELFBALANCE TIMESTAMP 0xDD 0xC 0xC5 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "252:252:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;252:252:20;;;;;;:::i;:::-;1500:62:4;;:::i;:::-;-1:-1:-1;;;;;252:252:20;2627:22:4;;2623:91;;3004:6;252:252:20;;-1:-1:-1;;;;;;252:252:20;;;;;;;-1:-1:-1;;;;;252:252:20;3052:40:4;-1:-1:-1;;3052:40:4;252:252:20;2623:91:4;2672:31;;;252:252:20;2672:31:4;252:252:20;;;;;2672:31:4;252:252:20;;;;;;;;;;-1:-1:-1;;252:252:20;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;252:252:20;;;;3440:5:13;252:252:20;;:::i;:::-;;;735:10:17;;3440:5:13;:::i;:::-;252:252:20;;;;;;;;;;;;;-1:-1:-1;;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;-1:-1:-1;;252:252:20;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;252:252:20;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;252:252:20;;;;1710:6:4;252:252:20;;;-1:-1:-1;;;;;252:252:20;;;;;;;;;;;;;;-1:-1:-1;;252:252:20;;;;1500:62:4;;:::i;:::-;3004:6;252:252:20;;-1:-1:-1;;;;;;252:252:20;;;;;;;-1:-1:-1;;;;;252:252:20;3052:40:4;252:252:20;;3052:40:4;252:252:20;;;;;;;-1:-1:-1;;252:252:20;;;;-1:-1:-1;;;;;252:252:20;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;252:252:20;;;;;;:::i;:::-;;;1500:62:4;;;:::i;:::-;-1:-1:-1;;;;;252:252:20;7509:21:13;;7505:91;;6214:21;252:252:20;;;;;;;;;;;;6214:21:13;252:252:20;7064:25:13;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;7064:25:13;252:252:20;;;;;;;;;;;;;;7505:91:13;7553:32;;;252:252:20;7553:32:13;252:252:20;;;;;7553:32:13;252:252:20;;;;;;-1:-1:-1;;252:252:20;;;;;;;2761:2:13;252:252:20;;;;;;;;;-1:-1:-1;;252:252:20;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;252:252:20;;;;;;;;;;;;;;;735:10:17;252:252:20;;;;;;;;;;;;;;-1:-1:-1;;10561:36:13;;10557:309;;252:252:20;4967:5:13;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;735:10:17;9892:21:13;9888:90;;4967:5;252:252:20;;;;;;;;;;;;;;735:10:17;252:252:20;-1:-1:-1;252:252:20;;;;;-1:-1:-1;252:252:20;;;;;10557:309:13;;;9888:90;9936:31;;;252:252:20;9936:31:13;252:252:20;;;;;9936:31:13;9790:89;9836:32;;;252:252:20;9836:32:13;252:252:20;;;;;9836:32:13;10613:130;10668:60;;;;;252:252:20;10668:60:13;735:10:17;252:252:20;;;;;;;;10668:60:13;252:252:20;;;;;;-1:-1:-1;;252:252:20;;;;;2908:12:13;252:252:20;;;;;;;;;;;;;-1:-1:-1;;252:252:20;;;;;;:::i;:::-;;;735:10:17;;9794:19:13;9790:89;;-1:-1:-1;;;;;252:252:20;;9892:21:13;;9888:90;;735:10:17;252:252:20;;;;;;;;;-1:-1:-1;252:252:20;;;;;-1:-1:-1;252:252:20;;;;;;;10066:31:13;252:252:20;735:10:17;10066:31:13;;252:252:20;;;;;;;;;;;;;-1:-1:-1;;252:252:20;;;;;1837:5:13;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:252:20;;;;;-1:-1:-1;;252:252:20;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:13;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;252:252:20;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;252:252:20;;;;;;:::o;5374:300:13:-;-1:-1:-1;;;;;252:252:20;;5457:18:13;;5453:86;;-1:-1:-1;;;;;252:252:20;;5552:16:13;;5548:86;;5473:1;252:252:20;;;;;;;;;;6321:19:13;;;6317:115;;252:252:20;;;;7064:25:13;252:252:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:25:13;5374:300::o;6317:115::-;6367:50;252:252:20;6367:50:13;;;;;;;;252:252:20;;;;;6367:50:13;5453:86;5498:30;;;5473:1;5498:30;5473:1;5498:30;252:252:20;;5473:1:13;5498:30;1796:162:4;1710:6;252:252:20;-1:-1:-1;;;;;252:252:20;735:10:17;1855:23:4;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:4;735:10:17;1901:40:4;252:252:20;;-1:-1:-1;1901:40:4"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DappToken.sol\":\"DappToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DappToken.sol\":{\"keccak256\":\"0xe618a35cf7a07450a3d97d5132d7874782f3f3fa68debf02d5fb7cf0469a0bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7651149cdb34ffe25489dc41efe0699adaaac548b17d3dff6afd22824959bee3\",\"dweb:/ipfs/QmeLJuYwgb4eW38TVYfntgSzBsBPtpYd4NGAxCnS187SBj\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1559,
                "contract": "contracts/DappToken.sol:DappToken",
                "label": "_balances",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1565,
                "contract": "contracts/DappToken.sol:DappToken",
                "label": "_allowances",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
              },
              {
                "astId": 1567,
                "contract": "contracts/DappToken.sol:DappToken",
                "label": "_totalSupply",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 1569,
                "contract": "contracts/DappToken.sol:DappToken",
                "label": "_name",
                "offset": 0,
                "slot": "3",
                "type": "t_string_storage"
              },
              {
                "astId": 1571,
                "contract": "contracts/DappToken.sol:DappToken",
                "label": "_symbol",
                "offset": 0,
                "slot": "4",
                "type": "t_string_storage"
              },
              {
                "astId": 677,
                "contract": "contracts/DappToken.sol:DappToken",
                "label": "_owner",
                "offset": 0,
                "slot": "5",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          }
        }
      },
      "contracts/LPToken.sol": {
        "LPToken": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "allocate_memory": {
                  "entryPoint": 928,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461039b57610c1d6020813803918261001c816103a0565b93849283398101031261039b57516001600160a01b0381169081900361039b5761004660406103a0565b9060088252672628102a37b5b2b760c11b602083015261006660406103a0565b600381526213141560ea1b602082015282519091906001600160401b0381116102a457600354600181811c91168015610391575b602082101461028457601f811161032c575b506020601f82116001146102c557819293946000926102ba575b50508160011b916000199060031b1c1916176003555b81516001600160401b0381116102a457600454600181811c9116801561029a575b602082101461028457601f811161021f575b50602092601f82116001146101ba57928192936000926101af575b50508160011b916000199060031b1c1916176004555b801561019957600580546001600160a01b03198116831790915560405191906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a361085790816103c68239f35b631e4fbdf760e01b600052600060045260246000fd5b01519050388061012a565b601f198216936004600052806000209160005b86811061020757508360019596106101ee575b505050811b01600455610140565b015160001960f88460031b161c191690553880806101e0565b919260206001819286850151815501940192016101cd565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c8101916020841061027a575b601f0160051c01905b81811061026e575061010f565b60008155600101610261565b9091508190610258565b634e487b7160e01b600052602260045260246000fd5b90607f16906100fd565b634e487b7160e01b600052604160045260246000fd5b0151905038806100c6565b601f198216906003600052806000209160005b818110610314575095836001959697106102fb575b505050811b016003556100dc565b015160001960f88460031b161c191690553880806102ed565b9192602060018192868b0151815501940192016102d8565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81019160208410610387575b601f0160051c01905b81811061037b57506100ac565b6000815560010161036e565b9091508190610365565b90607f169061009a565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176102a45760405256fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461060157508063095ea7b31461057b57806318160ddd1461055d57806323b872dd14610470578063313ce5671461045457806340c10f19146103a057806370a0823114610366578063715018a6146103095780638da5cb5b146102e057806395d89b41146101bf578063a9059cbb1461018e578063dd62ed3e1461013d5763f2fde38b146100ae57600080fd5b34610138576020366003190112610138576100c761071d565b6100cf6107f8565b6001600160a01b0316801561012257600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b346101385760403660031901126101385761015661071d565b61015e610733565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b34610138576040366003190112610138576101b46101aa61071d565b6024359033610749565b602060405160018152f35b346101385760003660031901126101385760405160006004548060011c906001811680156102d6575b6020831081146102c2578285529081156102a6575060011461024f575b50819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b82821061029057506020915082010182610205565b600181602092548385880101520191019061027b565b90506020925060ff191682840152151560051b82010182610205565b634e487b7160e01b84526022600452602484fd5b91607f16916101e8565b34610138576000366003190112610138576005546040516001600160a01b039091168152602090f35b34610138576000366003190112610138576103226107f8565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610138576020366003190112610138576001600160a01b0361038761071d565b1660005260006020526020604060002054604051908152f35b34610138576040366003190112610138576103b961071d565b602435906103c56107f8565b6001600160a01b0316801561043e5760025491808301809311610428576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b3461013857600036600319011261013857602060405160128152f35b346101385760603660031901126101385761048961071d565b610491610733565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106104d1575b506101b49350610749565b83811061054057841561052a573315610514576101b4946000526001602052604060002060018060a01b03331660005260205283604060002091039055846104c6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b34610138576000366003190112610138576020600254604051908152f35b346101385760403660031901126101385761059461071d565b60243590331561052a576001600160a01b031690811561051457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101385760003660031901126101385760006003548060011c906001811680156106ca575b6020831081146102c2578285529081156102a657506001146106735750819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106106b457506020915082010182610205565b600181602092548385880101520191019061069f565b91607f1691610627565b91909160208152825180602083015260005b818110610707575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016106e6565b600435906001600160a01b038216820361013857565b602435906001600160a01b038216820361013857565b6001600160a01b03169081156107e2576001600160a01b031691821561043e5760008281528060205260408120548281106107c85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b6005546001600160a01b0316330361080c57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220e7e631560191012ed57e9a6ccbefcc6a747473bba2f20aba95d8466f58fb732564736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x39B JUMPI PUSH2 0xC1D PUSH1 0x20 DUP2 CODESIZE SUB SWAP2 DUP3 PUSH2 0x1C DUP2 PUSH2 0x3A0 JUMP JUMPDEST SWAP4 DUP5 SWAP3 DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x39B JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x39B JUMPI PUSH2 0x46 PUSH1 0x40 PUSH2 0x3A0 JUMP JUMPDEST SWAP1 PUSH1 0x8 DUP3 MSTORE PUSH8 0x2628102A37B5B2B7 PUSH1 0xC1 SHL PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x66 PUSH1 0x40 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x3 DUP2 MSTORE PUSH3 0x131415 PUSH1 0xEA SHL PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A4 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x391 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x284 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x32C JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2C5 JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2BA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A4 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x29A JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x284 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x21F JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1BA JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x1AF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 PUSH2 0x857 SWAP1 DUP2 PUSH2 0x3C6 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x12A JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x207 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x1EE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x140 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1E0 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x27A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x26E JUMPI POP PUSH2 0x10F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x261 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x258 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xFD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xC6 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x314 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x2FB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xDC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2ED JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x387 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x37B JUMPI POP PUSH2 0xAC JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x36E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x365 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x9A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2A4 JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x601 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0xC7 PUSH2 0x71D JUMP JUMPDEST PUSH2 0xCF PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x156 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x15E PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x1B4 PUSH2 0x1AA PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x749 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x24F JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x290 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x322 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x387 PUSH2 0x71D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x3B9 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3C5 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x428 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x489 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x491 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x4D1 JUMPI JUMPDEST POP PUSH2 0x1B4 SWAP4 POP PUSH2 0x749 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x540 JUMPI DUP5 ISZERO PUSH2 0x52A JUMPI CALLER ISZERO PUSH2 0x514 JUMPI PUSH2 0x1B4 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x4C6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x594 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x52A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x514 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x6CA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x673 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x6B4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x69F JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x627 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x707 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x7C8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x80C JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xE6 BALANCE JUMP ADD SWAP2 ADD 0x2E 0xD5 PUSH31 0x9A6CCBEFCC6A747473BBA2F20ABA95D8466F58FB732564736F6C634300081C STOP CALLER ",
              "sourceMap": "252:247:21:-:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;252:247:21;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;252:247:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;252:247:21;;;;;;;;;-1:-1:-1;;;;;252:247:21;;;;;;;;;;;;;;;;-1:-1:-1;252:247:21;;;;;;;;;;;-1:-1:-1;252:247:21;;;;;;;;;;;;;-1:-1:-1;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;252:247:21;;;;1671:17:13;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:247:21;;;;;;;;;;;;;;;;;;;1671:17:13;252:247:21;;1273:26:4;;1269:95;;3004:6;252:247:21;;-1:-1:-1;;;;;;252:247:21;;;;;;;;;;;-1:-1:-1;;;;;252:247:21;3052:40:4;-1:-1:-1;;3052:40:4;252:247:21;;;;;;;1269:95:4;1322:31;;;-1:-1:-1;1322:31:4;-1:-1:-1;1671:17:13;252:247:21;;-1:-1:-1;1322:31:4;252:247:21;;;;-1:-1:-1;252:247:21;;;;;;;;;;1671:17:13;-1:-1:-1;252:247:21;;-1:-1:-1;252:247:21;;-1:-1:-1;252:247:21;;;;;;;;;;;;;;;;;;;;;1671:17:13;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:13;-1:-1:-1;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:247:21;;;;;;;;;-1:-1:-1;252:247:21;;;;;;;;-1:-1:-1;252:247:21;;1671:17:13;252:247:21;;-1:-1:-1;252:247:21;;;;;;;;;;;;-1:-1:-1;252:247:21;;1671:17:13;252:247:21;;-1:-1:-1;252:247:21;;;;;-1:-1:-1;252:247:21;;;;;;;;;;;-1:-1:-1;252:247:21;;-1:-1:-1;252:247:21;;-1:-1:-1;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:247:21;;;;;;;;;-1:-1:-1;252:247:21;;;;;;;;;;;;-1:-1:-1;252:247:21;;;;;;;;;-1:-1:-1;;252:247:21;;;-1:-1:-1;;;;;252:247:21;;;;;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1821,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_3898": {
                  "entryPoint": 1843,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 1748,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_checkOwner": {
                  "entryPoint": 2040,
                  "id": 753,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_transfer": {
                  "entryPoint": 1865,
                  "id": 1781,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461060157508063095ea7b31461057b57806318160ddd1461055d57806323b872dd14610470578063313ce5671461045457806340c10f19146103a057806370a0823114610366578063715018a6146103095780638da5cb5b146102e057806395d89b41146101bf578063a9059cbb1461018e578063dd62ed3e1461013d5763f2fde38b146100ae57600080fd5b34610138576020366003190112610138576100c761071d565b6100cf6107f8565b6001600160a01b0316801561012257600580546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b346101385760403660031901126101385761015661071d565b61015e610733565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b34610138576040366003190112610138576101b46101aa61071d565b6024359033610749565b602060405160018152f35b346101385760003660031901126101385760405160006004548060011c906001811680156102d6575b6020831081146102c2578285529081156102a6575060011461024f575b50819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b82821061029057506020915082010182610205565b600181602092548385880101520191019061027b565b90506020925060ff191682840152151560051b82010182610205565b634e487b7160e01b84526022600452602484fd5b91607f16916101e8565b34610138576000366003190112610138576005546040516001600160a01b039091168152602090f35b34610138576000366003190112610138576103226107f8565b600580546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610138576020366003190112610138576001600160a01b0361038761071d565b1660005260006020526020604060002054604051908152f35b34610138576040366003190112610138576103b961071d565b602435906103c56107f8565b6001600160a01b0316801561043e5760025491808301809311610428576020926002557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b3461013857600036600319011261013857602060405160128152f35b346101385760603660031901126101385761048961071d565b610491610733565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106104d1575b506101b49350610749565b83811061054057841561052a573315610514576101b4946000526001602052604060002060018060a01b03331660005260205283604060002091039055846104c6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b34610138576000366003190112610138576020600254604051908152f35b346101385760403660031901126101385761059461071d565b60243590331561052a576001600160a01b031690811561051457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346101385760003660031901126101385760006003548060011c906001811680156106ca575b6020831081146102c2578285529081156102a657506001146106735750819003601f01601f191681019067ffffffffffffffff82118183101761023957610235829182604052826106d4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106106b457506020915082010182610205565b600181602092548385880101520191019061069f565b91607f1691610627565b91909160208152825180602083015260005b818110610707575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016106e6565b600435906001600160a01b038216820361013857565b602435906001600160a01b038216820361013857565b6001600160a01b03169081156107e2576001600160a01b031691821561043e5760008281528060205260408120548281106107c85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b6005546001600160a01b0316330361080c57565b63118cdaa760e01b6000523360045260246000fdfea2646970667358221220e7e631560191012ed57e9a6ccbefcc6a747473bba2f20aba95d8466f58fb732564736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x601 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x55D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x13D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0xC7 PUSH2 0x71D JUMP JUMPDEST PUSH2 0xCF PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x122 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x156 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x15E PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x1B4 PUSH2 0x1AA PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x749 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2D6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x24F JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x290 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x27B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x322 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x387 PUSH2 0x71D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x3B9 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x3C5 PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x428 JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x489 PUSH2 0x71D JUMP JUMPDEST PUSH2 0x491 PUSH2 0x733 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x4D1 JUMPI JUMPDEST POP PUSH2 0x1B4 SWAP4 POP PUSH2 0x749 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x540 JUMPI DUP5 ISZERO PUSH2 0x52A JUMPI CALLER ISZERO PUSH2 0x514 JUMPI PUSH2 0x1B4 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x4C6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH2 0x594 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x52A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x514 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x138 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x138 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x6CA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2C2 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI POP PUSH1 0x1 EQ PUSH2 0x673 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x239 JUMPI PUSH2 0x235 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x6D4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x6B4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x205 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x69F JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x627 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x707 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x6E6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x138 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x7C8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x80C JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 0xE6 BALANCE JUMP ADD SWAP2 ADD 0x2E 0xD5 PUSH31 0x9A6CCBEFCC6A747473BBA2F20ABA95D8466F58FB732564736F6C634300081C STOP CALLER ",
              "sourceMap": "252:247:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;252:247:21;;;;;;:::i;:::-;1500:62:4;;:::i;:::-;-1:-1:-1;;;;;252:247:21;2627:22:4;;2623:91;;3004:6;252:247:21;;-1:-1:-1;;;;;;252:247:21;;;;;;;-1:-1:-1;;;;;252:247:21;3052:40:4;-1:-1:-1;;3052:40:4;252:247:21;2623:91:4;2672:31;;;252:247:21;2672:31:4;252:247:21;;;;;2672:31:4;252:247:21;;;;;;;;;;-1:-1:-1;;252:247:21;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;252:247:21;;;;3440:5:13;252:247:21;;:::i;:::-;;;735:10:17;;3440:5:13;:::i;:::-;252:247:21;;;;;;;;;;;;;-1:-1:-1;;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:247:21;;;;;-1:-1:-1;;252:247:21;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;252:247:21;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;252:247:21;;;;1710:6:4;252:247:21;;;-1:-1:-1;;;;;252:247:21;;;;;;;;;;;;;;-1:-1:-1;;252:247:21;;;;1500:62:4;;:::i;:::-;3004:6;252:247:21;;-1:-1:-1;;;;;;252:247:21;;;;;;;-1:-1:-1;;;;;252:247:21;3052:40:4;252:247:21;;3052:40:4;252:247:21;;;;;;;-1:-1:-1;;252:247:21;;;;-1:-1:-1;;;;;252:247:21;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;252:247:21;;;;;;:::i;:::-;;;1500:62:4;;;:::i;:::-;-1:-1:-1;;;;;252:247:21;7509:21:13;;7505:91;;6214:21;252:247:21;;;;;;;;;;;;6214:21:13;252:247:21;7064:25:13;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;7064:25:13;252:247:21;;;;;;;;;;;;;;7505:91:13;7553:32;;;252:247:21;7553:32:13;252:247:21;;;;;7553:32:13;252:247:21;;;;;;-1:-1:-1;;252:247:21;;;;;;;2761:2:13;252:247:21;;;;;;;;;-1:-1:-1;;252:247:21;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;252:247:21;;;;;;;;;;;;;;;735:10:17;252:247:21;;;;;;;;;;;;;;-1:-1:-1;;10561:36:13;;10557:309;;252:247:21;4967:5:13;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;735:10:17;9892:21:13;9888:90;;4967:5;252:247:21;;;;;;;;;;;;;;735:10:17;252:247:21;-1:-1:-1;252:247:21;;;;;-1:-1:-1;252:247:21;;;;;10557:309:13;;;9888:90;9936:31;;;252:247:21;9936:31:13;252:247:21;;;;;9936:31:13;9790:89;9836:32;;;252:247:21;9836:32:13;252:247:21;;;;;9836:32:13;10613:130;10668:60;;;;;252:247:21;10668:60:13;735:10:17;252:247:21;;;;;;;;10668:60:13;252:247:21;;;;;;-1:-1:-1;;252:247:21;;;;;2908:12:13;252:247:21;;;;;;;;;;;;;-1:-1:-1;;252:247:21;;;;;;:::i;:::-;;;735:10:17;;9794:19:13;9790:89;;-1:-1:-1;;;;;252:247:21;;9892:21:13;;9888:90;;735:10:17;252:247:21;;;;;;;;;-1:-1:-1;252:247:21;;;;;-1:-1:-1;252:247:21;;;;;;;10066:31:13;252:247:21;735:10:17;10066:31:13;;252:247:21;;;;;;;;;;;;;-1:-1:-1;;252:247:21;;;;;1837:5:13;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:247:21;;;;;-1:-1:-1;;252:247:21;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:13;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;252:247:21;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;252:247:21;;;;;;:::o;5374:300:13:-;-1:-1:-1;;;;;252:247:21;;5457:18:13;;5453:86;;-1:-1:-1;;;;;252:247:21;;5552:16:13;;5548:86;;5473:1;252:247:21;;;;;;;;;;6321:19:13;;;6317:115;;252:247:21;;;;7064:25:13;252:247:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:25:13;5374:300::o;6317:115::-;6367:50;252:247:21;6367:50:13;;;;;;;;252:247:21;;;;;6367:50:13;5453:86;5498:30;;;5473:1;5498:30;5473:1;5498:30;252:247:21;;5473:1:13;5498:30;1796:162:4;1710:6;252:247:21;-1:-1:-1;;;;;252:247:21;735:10:17;1855:23:4;1851:101;;1796:162::o;1851:101::-;1901:40;;;-1:-1:-1;1901:40:4;735:10:17;1901:40:4;252:247:21;;-1:-1:-1;1901:40:4"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LPToken.sol\":\"LPToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0xb47f69e847eccd98b83f058c327c3bea97cc6cefc308150de83697845feea545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0126f3a7ed94ec90cebb25c8d8df0ba373f62663596646eae79d599f2bea002\",\"dweb:/ipfs/QmZxzHS3yCMikp7cMNFMVCADWZXi9vx2M46xvViSmXddTB\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1559,
                "contract": "contracts/LPToken.sol:LPToken",
                "label": "_balances",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1565,
                "contract": "contracts/LPToken.sol:LPToken",
                "label": "_allowances",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
              },
              {
                "astId": 1567,
                "contract": "contracts/LPToken.sol:LPToken",
                "label": "_totalSupply",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 1569,
                "contract": "contracts/LPToken.sol:LPToken",
                "label": "_name",
                "offset": 0,
                "slot": "3",
                "type": "t_string_storage"
              },
              {
                "astId": 1571,
                "contract": "contracts/LPToken.sol:LPToken",
                "label": "_symbol",
                "offset": 0,
                "slot": "4",
                "type": "t_string_storage"
              },
              {
                "astId": 677,
                "contract": "contracts/LPToken.sol:LPToken",
                "label": "_owner",
                "offset": 0,
                "slot": "5",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          }
        }
      },
      "contracts/Lock.sol": {
        "Lock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_unlockTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "when",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawal",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unlockTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080601f61029438819003918201601f19168301916001600160401b0383118484101760b95780849260209460405283398101031260b4575180421015606357600055600180546001600160a01b031916331790556040516101c490816100d08239f35b60405162461bcd60e51b815260206004820152602360248201527f556e6c6f636b2074696d652073686f756c6420626520696e207468652066757460448201526275726560e81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c908163251c1aa314610173575080633ccfd60b1461006e57638da5cb5b1461004057600080fd5b34610069576000366003190112610069576001546040516001600160a01b039091168152602090f35b600080fd5b34610069576000366003190112610069576000544210610135576001546001600160a01b0316338190036100f9576000808080937fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b936040478151908152426020820152a147908282156100f0575bf1156100e457005b6040513d6000823e3d90fd5b506108fc6100dc565b60405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932b713ba103a34329037bbb732b960611b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275165bdd4818d85b89dd081dda5d1a191c985dc81e595d60521b6044820152606490fd5b34610069576000366003190112610069576020906000548152f3fea2646970667358221220cdf7a9ea9813837c2d866ec27ec49971bd434eb2db360b24efa716eba118b84c64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x1F PUSH2 0x294 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xB9 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xB4 JUMPI MLOAD DUP1 TIMESTAMP LT ISZERO PUSH1 0x63 JUMPI PUSH1 0x0 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP1 DUP2 PUSH2 0xD0 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E6C6F636B2074696D652073686F756C6420626520696E2074686520667574 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x757265 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x251C1AA3 EQ PUSH2 0x173 JUMPI POP DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x6E JUMPI PUSH4 0x8DA5CB5B EQ PUSH2 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x69 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x69 JUMPI PUSH1 0x0 SLOAD TIMESTAMP LT PUSH2 0x135 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH32 0xBF2ED60BD5B5965D685680C01195C9514E4382E28E3A5A2D2D5244BF59411B93 PUSH1 0x40 SELFBALANCE DUP2 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG1 SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0xF0 JUMPI JUMPDEST CALL ISZERO PUSH2 0xE4 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2CB7BA9030B932B713BA103A34329037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x165BDD4818D85B89DD081DDA5D1A191C985DC81E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x69 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x0 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xF7 0xA9 0xEA SWAP9 SGT DUP4 PUSH29 0x2D866EC27EC49971BD434EB2DB360B24EFA716EBA118B84C64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "141:866:22:-:0;;;;;;;;;;-1:-1:-1;;141:866:22;;;;-1:-1:-1;;;;;141:866:22;;;;;;;;;;;;;;;;;;;;;;;;340:15;;:29;141:866;;;-1:-1:-1;141:866:22;;;;-1:-1:-1;;;;;;141:866:22;491:10;141:866;;;;;;;;;;;;;;;-1:-1:-1;;;141:866:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;141:866:22;;;;;;;;-1:-1:-1;141:866:22;;;;;;-1:-1:-1;141:866:22;;;;;-1:-1:-1;141:866:22"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c908163251c1aa314610173575080633ccfd60b1461006e57638da5cb5b1461004057600080fd5b34610069576000366003190112610069576001546040516001600160a01b039091168152602090f35b600080fd5b34610069576000366003190112610069576000544210610135576001546001600160a01b0316338190036100f9576000808080937fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b936040478151908152426020820152a147908282156100f0575bf1156100e457005b6040513d6000823e3d90fd5b506108fc6100dc565b60405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932b713ba103a34329037bbb732b960611b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275165bdd4818d85b89dd081dda5d1a191c985dc81e595d60521b6044820152606490fd5b34610069576000366003190112610069576020906000548152f3fea2646970667358221220cdf7a9ea9813837c2d866ec27ec49971bd434eb2db360b24efa716eba118b84c64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x251C1AA3 EQ PUSH2 0x173 JUMPI POP DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x6E JUMPI PUSH4 0x8DA5CB5B EQ PUSH2 0x40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x69 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x69 JUMPI PUSH1 0x0 SLOAD TIMESTAMP LT PUSH2 0x135 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0xF9 JUMPI PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH32 0xBF2ED60BD5B5965D685680C01195C9514E4382E28E3A5A2D2D5244BF59411B93 PUSH1 0x40 SELFBALANCE DUP2 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG1 SELFBALANCE SWAP1 DUP3 DUP3 ISZERO PUSH2 0xF0 JUMPI JUMPDEST CALL ISZERO PUSH2 0xE4 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0xDC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2CB7BA9030B932B713BA103A34329037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x165BDD4818D85B89DD081DDA5D1A191C985DC81E595D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x69 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x69 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x0 SLOAD DUP2 MSTORE RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0xF7 0xA9 0xEA SWAP9 SGT DUP4 PUSH29 0x2D866EC27EC49971BD434EB2DB360B24EFA716EBA118B84C64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "141:866:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;141:866:22;;;;;;;;-1:-1:-1;;;;;141:866:22;;;;;;;;;;;;;;;;;;-1:-1:-1;;141:866:22;;;;;;766:15;:29;141:866;;;;-1:-1:-1;;;;;141:866:22;840:10;:19;;;141:866;;;911:21;;;;900:50;141:866;911:21;141:866;;;;;766:15;141:866;;;;900:50;976:21;961:37;;;;;;141:866;961:37;;;;141:866;961:37;141:866;;;;;;;;;961:37;;;;;141:866;;;-1:-1:-1;;;141:866:22;;;;;;;;;;;;-1:-1:-1;;;141:866:22;;;;;;;;;;-1:-1:-1;;;141:866:22;;;;;;;;;;;;-1:-1:-1;;;141:866:22;;;;;;;;;;;;;-1:-1:-1;;141:866:22;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "unlockTime()": "251c1aa3",
              "withdraw()": "3ccfd60b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lock.sol\":\"Lock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/Lock.sol\":{\"keccak256\":\"0x3c36b5a83d533c3f095ac358675e9356c1761cd7f1e955ae23200203060419a9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://864fae3ab9a941599f30667d484d94a34a0779f6e606110d2acdcf51c56c47e4\",\"dweb:/ipfs/QmXYat9EQBuwXsp4EcczzGTfML2ugVaYqiviiGoiZ9cgXr\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 2673,
                "contract": "contracts/Lock.sol:Lock",
                "label": "unlockTime",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              },
              {
                "astId": 2675,
                "contract": "contracts/Lock.sol:Lock",
                "label": "owner",
                "offset": 0,
                "slot": "1",
                "type": "t_address_payable"
              }
            ],
            "types": {
              "t_address_payable": {
                "encoding": "inplace",
                "label": "address payable",
                "numberOfBytes": "20"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          }
        }
      },
      "contracts/ProxyAdmin.sol": {
        "MyProxyAdmin": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "UPGRADE_INTERFACE_VERSION",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ITransparentUpgradeableProxy",
                  "name": "proxy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "upgradeAndCall",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "proxy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "upgradeProxy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "proxy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "implementation",
                  "type": "address"
                }
              ],
              "name": "upgradeProxyAndInitialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60803460bc57601f61063c38819003918201601f19168301916001600160401b0383118484101760c15780849260209460405283398101031260bc57516001600160a01b0381169081900360bc57801560a657600080546001600160a01b031981168317825560405192916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361056490816100d88239f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80632af0b1f1146103a2578063715018a6146103485780638da5cb5b146103215780639623609d1461020d578063ad3cb1cc146101c0578063c19421c8146100f25763f2fde38b1461006a57600080fd5b346100ef5760203660031901126100ef5761008361045b565b61008b610505565b6001600160a01b031680156100db5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b50346100ef5760403660031901126100ef578061010d61045b565b610115610476565b61011d610505565b604051635cd8a76b60e01b6020820152600481529161013d60248461048c565b6001600160a01b03169161014f610505565b823b156101bb5761018e9284928360405180968195829463278f794360e11b845260018060a01b031660048401526040602484015260448301906104c4565b03925af180156101b05761019f5750f35b816101a99161048c565b6100ef5780f35b6040513d84823e3d90fd5b505050fd5b50346100ef57806003193601126100ef57506102096040516101e360408261048c565b60058152640352e302e360dc1b60208201526040519182916020835260208301906104c4565b0390f35b5060603660031901126100ef576004356001600160a01b03811691908290036100ef57610238610476565b916044359267ffffffffffffffff841161031d573660238501121561031d5783600401359367ffffffffffffffff85116103095783946020601f19601f8301160191610287604051938461048c565b81835236602483830101116103055781869260246020930183860137830101526102af610505565b823b156101bb576040805163278f794360e11b81526001600160a01b039093166004840152602483015290918391839190829081906102f29060448301906104c4565b039134905af180156101b05761019f5750f35b8580fd5b634e487b7160e01b84526041600452602484fd5b8280fd5b50346100ef57806003193601126100ef57546040516001600160a01b039091168152602090f35b50346100ef57806003193601126100ef57610361610505565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346100ef5760403660031901126100ef576103bc61045b565b816103c5610476565b916103ce610505565b60018060a01b0316916040516103e560208261048c565b8281526103f0610505565b833b1561031d5761042f9383928360405180978195829463278f794360e11b845260018060a01b031660048401526040602484015260448301906104c4565b03925af1801561044e576104405780f35b6104499161048c565b388180f35b50604051903d90823e3d90fd5b600435906001600160a01b038216820361047157565b600080fd5b602435906001600160a01b038216820361047157565b90601f8019910116810190811067ffffffffffffffff8211176104ae57604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b8481106104f0575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016104cf565b6000546001600160a01b0316330361051957565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212205aef339670c044b7a68552628afc8081a0a563f676d1dffddddc9b139eec07a964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0xBC JUMPI PUSH1 0x1F PUSH2 0x63C CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xC1 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xBC JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0xBC JUMPI DUP1 ISZERO PUSH1 0xA6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x564 SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2AF0B1F1 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xC19421C8 EQ PUSH2 0xF2 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xEF JUMPI PUSH2 0x83 PUSH2 0x45B JUMP JUMPDEST PUSH2 0x8B PUSH2 0x505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xDB JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xEF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xEF JUMPI DUP1 PUSH2 0x10D PUSH2 0x45B JUMP JUMPDEST PUSH2 0x115 PUSH2 0x476 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5CD8A76B PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP2 MSTORE SWAP2 PUSH2 0x13D PUSH1 0x24 DUP5 PUSH2 0x48C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x14F PUSH2 0x505 JUMP JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH2 0x1BB JUMPI PUSH2 0x18E SWAP3 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x4C4 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH2 0x19F JUMPI POP RETURN JUMPDEST DUP2 PUSH2 0x1A9 SWAP2 PUSH2 0x48C JUMP JUMPDEST PUSH2 0xEF JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0xEF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xEF JUMPI POP PUSH2 0x209 PUSH1 0x40 MLOAD PUSH2 0x1E3 PUSH1 0x40 DUP3 PUSH2 0x48C JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x4C4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xEF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xEF JUMPI PUSH2 0x238 PUSH2 0x476 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x31D JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x31D JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x309 JUMPI DUP4 SWAP5 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND ADD SWAP2 PUSH2 0x287 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x48C JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x305 JUMPI DUP2 DUP7 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x2AF PUSH2 0x505 JUMP JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH2 0x1BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x2F2 SWAP1 PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x4C4 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH2 0x19F JUMPI POP RETURN JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xEF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xEF JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xEF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xEF JUMPI PUSH2 0x361 PUSH2 0x505 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xEF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xEF JUMPI PUSH2 0x3BC PUSH2 0x45B JUMP JUMPDEST DUP2 PUSH2 0x3C5 PUSH2 0x476 JUMP JUMPDEST SWAP2 PUSH2 0x3CE PUSH2 0x505 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x40 MLOAD PUSH2 0x3E5 PUSH1 0x20 DUP3 PUSH2 0x48C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH2 0x3F0 PUSH2 0x505 JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x31D JUMPI PUSH2 0x42F SWAP4 DUP4 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x4C4 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x44E JUMPI PUSH2 0x440 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x449 SWAP2 PUSH2 0x48C JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x471 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x471 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4AE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x4F0 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x519 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xEF CALLER SWAP7 PUSH17 0xC044B7A68552628AFC8081A0A563F676D1 0xDF REVERT 0xDD 0xDC SWAP12 SGT SWAP15 0xEC SMOD 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "215:657:23:-:0;;;;;;;;;;;;;-1:-1:-1;;215:657:23;;;;-1:-1:-1;;;;;215:657:23;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:657:23;;;;;;;;1273:26:4;;1269:95;;-1:-1:-1;215:657:23;;-1:-1:-1;;;;;;215:657:23;;;;;;;;;;-1:-1:-1;;;;;215:657:23;;;;3052:40:4;;-1:-1:-1;3052:40:4;215:657:23;;;;;;;1269:95:4;1322:31;;;-1:-1:-1;1322:31:4;-1:-1:-1;1322:31:4;215:657:23;;-1:-1:-1;1322:31:4;215:657:23;-1:-1:-1;215:657:23;;;;;;-1:-1:-1;215:657:23;;;;;-1:-1:-1;215:657:23"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1142,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_2676": {
                  "entryPoint": 1115,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 1220,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1164,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 1285,
                  "id": 753,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b6000803560e01c80632af0b1f1146103a2578063715018a6146103485780638da5cb5b146103215780639623609d1461020d578063ad3cb1cc146101c0578063c19421c8146100f25763f2fde38b1461006a57600080fd5b346100ef5760203660031901126100ef5761008361045b565b61008b610505565b6001600160a01b031680156100db5781546001600160a01b03198116821783556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b631e4fbdf760e01b82526004829052602482fd5b80fd5b50346100ef5760403660031901126100ef578061010d61045b565b610115610476565b61011d610505565b604051635cd8a76b60e01b6020820152600481529161013d60248461048c565b6001600160a01b03169161014f610505565b823b156101bb5761018e9284928360405180968195829463278f794360e11b845260018060a01b031660048401526040602484015260448301906104c4565b03925af180156101b05761019f5750f35b816101a99161048c565b6100ef5780f35b6040513d84823e3d90fd5b505050fd5b50346100ef57806003193601126100ef57506102096040516101e360408261048c565b60058152640352e302e360dc1b60208201526040519182916020835260208301906104c4565b0390f35b5060603660031901126100ef576004356001600160a01b03811691908290036100ef57610238610476565b916044359267ffffffffffffffff841161031d573660238501121561031d5783600401359367ffffffffffffffff85116103095783946020601f19601f8301160191610287604051938461048c565b81835236602483830101116103055781869260246020930183860137830101526102af610505565b823b156101bb576040805163278f794360e11b81526001600160a01b039093166004840152602483015290918391839190829081906102f29060448301906104c4565b039134905af180156101b05761019f5750f35b8580fd5b634e487b7160e01b84526041600452602484fd5b8280fd5b50346100ef57806003193601126100ef57546040516001600160a01b039091168152602090f35b50346100ef57806003193601126100ef57610361610505565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346100ef5760403660031901126100ef576103bc61045b565b816103c5610476565b916103ce610505565b60018060a01b0316916040516103e560208261048c565b8281526103f0610505565b833b1561031d5761042f9383928360405180978195829463278f794360e11b845260018060a01b031660048401526040602484015260448301906104c4565b03925af1801561044e576104405780f35b6104499161048c565b388180f35b50604051903d90823e3d90fd5b600435906001600160a01b038216820361047157565b600080fd5b602435906001600160a01b038216820361047157565b90601f8019910116810190811067ffffffffffffffff8211176104ae57604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b8481106104f0575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016104cf565b6000546001600160a01b0316330361051957565b63118cdaa760e01b6000523360045260246000fdfea26469706673582212205aef339670c044b7a68552628afc8081a0a563f676d1dffddddc9b139eec07a964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2AF0B1F1 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x9623609D EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xC19421C8 EQ PUSH2 0xF2 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xEF JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xEF JUMPI PUSH2 0x83 PUSH2 0x45B JUMP JUMPDEST PUSH2 0x8B PUSH2 0x505 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xDB JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 OR DUP4 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xEF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xEF JUMPI DUP1 PUSH2 0x10D PUSH2 0x45B JUMP JUMPDEST PUSH2 0x115 PUSH2 0x476 JUMP JUMPDEST PUSH2 0x11D PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x5CD8A76B PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x4 DUP2 MSTORE SWAP2 PUSH2 0x13D PUSH1 0x24 DUP5 PUSH2 0x48C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x14F PUSH2 0x505 JUMP JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH2 0x1BB JUMPI PUSH2 0x18E SWAP3 DUP5 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x4C4 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH2 0x19F JUMPI POP RETURN JUMPDEST DUP2 PUSH2 0x1A9 SWAP2 PUSH2 0x48C JUMP JUMPDEST PUSH2 0xEF JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP POP POP REVERT JUMPDEST POP CALLVALUE PUSH2 0xEF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xEF JUMPI POP PUSH2 0x209 PUSH1 0x40 MLOAD PUSH2 0x1E3 PUSH1 0x40 DUP3 PUSH2 0x48C JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x352E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x4C4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xEF JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xEF JUMPI PUSH2 0x238 PUSH2 0x476 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP5 GT PUSH2 0x31D JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x31D JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x309 JUMPI DUP4 SWAP5 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND ADD SWAP2 PUSH2 0x287 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x48C JUMP JUMPDEST DUP2 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x305 JUMPI DUP2 DUP7 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE PUSH2 0x2AF PUSH2 0x505 JUMP JUMPDEST DUP3 EXTCODESIZE ISZERO PUSH2 0x1BB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD MSTORE SWAP1 SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x2F2 SWAP1 PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x4C4 JUMP JUMPDEST SUB SWAP2 CALLVALUE SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH2 0x19F JUMPI POP RETURN JUMPDEST DUP6 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0xEF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xEF JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xEF JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xEF JUMPI PUSH2 0x361 PUSH2 0x505 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xEF JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xEF JUMPI PUSH2 0x3BC PUSH2 0x45B JUMP JUMPDEST DUP2 PUSH2 0x3C5 PUSH2 0x476 JUMP JUMPDEST SWAP2 PUSH2 0x3CE PUSH2 0x505 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH1 0x40 MLOAD PUSH2 0x3E5 PUSH1 0x20 DUP3 PUSH2 0x48C JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH2 0x3F0 PUSH2 0x505 JUMP JUMPDEST DUP4 EXTCODESIZE ISZERO PUSH2 0x31D JUMPI PUSH2 0x42F SWAP4 DUP4 SWAP3 DUP4 PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x278F7943 PUSH1 0xE1 SHL DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x44 DUP4 ADD SWAP1 PUSH2 0x4C4 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x44E JUMPI PUSH2 0x440 JUMPI DUP1 RETURN JUMPDEST PUSH2 0x449 SWAP2 PUSH2 0x48C JUMP JUMPDEST CODESIZE DUP2 DUP1 RETURN JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x471 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x471 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4AE JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x4F0 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x4CF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x519 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xEF CALLER SWAP7 PUSH17 0xC044B7A68552628AFC8081A0A563F676D1 0xDF REVERT 0xDD 0xDC SWAP12 SGT SWAP15 0xEC SMOD 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "215:657:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;215:657:23;;;;;;:::i;:::-;1500:62:4;;:::i;:::-;-1:-1:-1;;;;;215:657:23;2627:22:4;;2623:91;;215:657:23;;-1:-1:-1;;;;;;215:657:23;;;;;;-1:-1:-1;;;;;215:657:23;3052:40:4;215:657:23;;3052:40:4;215:657:23;;2623:91:4;-1:-1:-1;;;2672:31:4;;215:657:23;;;;;2672:31:4;;215:657:23;;;;;;;;;;-1:-1:-1;;215:657:23;;;;;;;:::i;:::-;;;:::i;:::-;1500:62:4;;:::i;:::-;215:657:23;;-1:-1:-1;;;215:657:23;686:41;;;215:657;686:41;;215:657;686:41;215:657;;686:41;:::i;:::-;-1:-1:-1;;;;;215:657:23;;1500:62:4;;:::i;:::-;1893::11;;;;;215:657:23;;;;;;;;;;;;;;;;1893:62:11;;215:657:23;;;;;;;1893:62:11;;215:657:23;;;;;;;;;;;:::i;:::-;1893:62:11;;;;;;;;;;215:657:23;;1893:62:11;;;;;:::i;:::-;215:657:23;;1893:62:11;215:657:23;1893:62:11;215:657:23;;;;;;;;;1893:62:11;215:657:23;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;215:657:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;215:657:23;;-1:-1:-1;;215:657:23;;;;;;-1:-1:-1;;;;;215:657:23;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:62:4;;:::i;:::-;1893::11;;;;;215:657:23;;;-1:-1:-1;;;1893:62:11;;-1:-1:-1;;;;;215:657:23;;;;1893:62:11;;215:657:23;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1893:62:11;1923:9;;1893:62;;;;;;;;;215:657:23;;;;;;;-1:-1:-1;;;215:657:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:657:23;;;;;;;;;;;;;;;;;;;;;1500:62:4;;:::i;:::-;215:657:23;;-1:-1:-1;;;;;;215:657:23;;;;;;-1:-1:-1;;;;;215:657:23;3052:40:4;215:657:23;;3052:40:4;215:657:23;;;;;;;;;-1:-1:-1;;215:657:23;;;;;;:::i;:::-;;;;:::i;:::-;1500:62:4;;;:::i;:::-;215:657:23;;;;;;;;;;;;;:::i;:::-;;;;1500:62:4;;:::i;:::-;1893::11;;;;;215:657:23;;;;;;;;;;;;;;;;1893:62:11;;215:657:23;;;;;;;1893:62:11;;215:657:23;;;;;;;;;;;:::i;:::-;1893:62:11;;;;;;;;;;215:657:23;;1893:62:11;;;;:::i;:::-;;;215:657:23;;1893:62:11;215:657:23;;;;;;;;;;;;;;;-1:-1:-1;;;;;215:657:23;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;215:657:23;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;215:657:23;;;;;-1:-1:-1;215:657:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;1796:162:4;1710:6;215:657:23;-1:-1:-1;;;;;215:657:23;735:10:17;1855:23:4;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:17;1901:40:4;215:657:23;;1710:6:4;1901:40"
            },
            "methodIdentifiers": {
              "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b",
              "upgradeAndCall(address,address,bytes)": "9623609d",
              "upgradeProxy(address,address)": "2af0b1f1",
              "upgradeProxyAndInitialize(address,address)": "c19421c8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ITransparentUpgradeableProxy\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeProxyAndInitialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeAndCall(address,address,bytes)\":{\"details\":\"Upgrades `proxy` to `implementation` and calls a function on the new implementation. See {TransparentUpgradeableProxy-_dispatchUpgradeToAndCall}. Requirements: - This contract must be the admin of `proxy`. - If `data` is empty, `msg.value` must be zero.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProxyAdmin.sol\":\"MyProxyAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa3066ff86b94128a9d3956a63a0511fa1aae41bd455772ab587b32ff322acb2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7b192fd82acf6187970c80548f624b1b9c80425b62fa49e7fdb538a52de049\",\"dweb:/ipfs/QmWXG1YCde1tqDYTbNwjkZDWVgPEjzaQGSDqWkyKLzaNua\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x46f86003755f50eff00a7c5aaf493ae62e024142b8aec4493a313851d3c14872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://462c770cb667cc75ab22df5a29c50873b24b267274edf87ac5cfe0112bf4c3f7\",\"dweb:/ipfs/QmTfKk32AkQ2yyYZCYJ44V69EM5t9ryBFC6bRF7FVMHXvj\"]},\"@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x92579f452fe663595a898cbac85d80bb3868a6c9f034f19ba7fbebdfa3b65a4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d07a888cd4a26c7077a30dd99e9ac30fbe2752bfb37e58c65f06a3b192079ef3\",\"dweb:/ipfs/QmZCQY4FC4ynBv9dha4BBWM1vYxTUJPBdFBS4HEFe6XzVB\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/ProxyAdmin.sol\":{\"keccak256\":\"0x5f5abadaaf655741978133465863ca4027ea2a4cdbf77a8d90c71aeb7bf83317\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14ed75833ed42a78e7580894d04e585c363aa91b0f81050d3a51da930094ca32\",\"dweb:/ipfs/QmXYTzgEY8aqAdAviK7WmK5LvZt93WEk3uej6o5BfVaCGp\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 677,
                "contract": "contracts/ProxyAdmin.sol:MyProxyAdmin",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          }
        }
      },
      "contracts/TokenFarm.sol": {
        "IRewardStrategy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blocks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "userBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minReward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxReward",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "calculateReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "calculateReward(uint256,uint256,uint256,uint256,uint256,address)": "a0acbec3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxReward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenFarm.sol\":\"IRewardStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DappToken.sol\":{\"keccak256\":\"0xe618a35cf7a07450a3d97d5132d7874782f3f3fa68debf02d5fb7cf0469a0bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7651149cdb34ffe25489dc41efe0699adaaac548b17d3dff6afd22824959bee3\",\"dweb:/ipfs/QmeLJuYwgb4eW38TVYfntgSzBsBPtpYd4NGAxCnS187SBj\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0xb47f69e847eccd98b83f058c327c3bea97cc6cefc308150de83697845feea545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0126f3a7ed94ec90cebb25c8d8df0ba373f62663596646eae79d599f2bea002\",\"dweb:/ipfs/QmZxzHS3yCMikp7cMNFMVCADWZXi9vx2M46xvViSmXddTB\"]},\"contracts/TokenFarm.sol\":{\"keccak256\":\"0xd204c217c0989ec1f96b47263b3a128c601911fa446c087c637b49577efdbc89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faeae6b662ff179f321a18b95579e0a8c8ce6b334e9c618f8a66388e75489b34\",\"dweb:/ipfs/QmcFTg1zG3TwnduwjechAW1pfnafYcg7eNpLAXVBStsx2c\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "ProportionalVariableStrategy": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "blocks",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "userBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalBalance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minReward",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxReward",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "calculateReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601557610172908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c63a0acbec31461002757600080fd5b3461006b5760c036600319011261006b5760a4356001600160a01b0381160361006b576020610063608435606435604435602435600435610099565b604051908152f35b600080fd5b8181029291811591840414171561008357565b634e487b7160e01b600052601160045260246000fd5b929391908115808015610134575b61012957620f4240851161011e575b670de0b6b3a7640000820291808304670de0b6b3a76400001490151715610083576101085704908301809311610083576100ff61010492670de0b6b3a76400009460011c610070565b610070565b0490565b634e487b7160e01b600052601260045260246000fd5b620f424094506100b6565b505050505050600090565b5081156100a756fea2646970667358221220486d7fab26644b3b1c4550c93b6661ef65abd8774f31a36808ff2eb7ce4c167a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x172 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xA0ACBEC3 EQ PUSH2 0x27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x6B JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x6B JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x6B JUMPI PUSH1 0x20 PUSH2 0x63 PUSH1 0x84 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x83 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 DUP2 ISZERO DUP1 DUP1 ISZERO PUSH2 0x134 JUMPI JUMPDEST PUSH2 0x129 JUMPI PUSH3 0xF4240 DUP6 GT PUSH2 0x11E JUMPI JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH8 0xDE0B6B3A7640000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x83 JUMPI PUSH2 0x108 JUMPI DIV SWAP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x83 JUMPI PUSH2 0xFF PUSH2 0x104 SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP5 PUSH1 0x1 SHR PUSH2 0x70 JUMP JUMPDEST PUSH2 0x70 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xF4240 SWAP5 POP PUSH2 0xB6 JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0xA7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE PUSH14 0x7FAB26644B3B1C4550C93B6661EF PUSH6 0xABD8774F31A3 PUSH9 0x8FF2EB7CE4C167A64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "667:624:24:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "checked_mul_uint256": {
                  "entryPoint": 112,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_calculateReward": {
                  "entryPoint": 153,
                  "id": 2904,
                  "parameterSlots": 5,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c63a0acbec31461002757600080fd5b3461006b5760c036600319011261006b5760a4356001600160a01b0381160361006b576020610063608435606435604435602435600435610099565b604051908152f35b600080fd5b8181029291811591840414171561008357565b634e487b7160e01b600052601160045260246000fd5b929391908115808015610134575b61012957620f4240851161011e575b670de0b6b3a7640000820291808304670de0b6b3a76400001490151715610083576101085704908301809311610083576100ff61010492670de0b6b3a76400009460011c610070565b610070565b0490565b634e487b7160e01b600052601260045260246000fd5b620f424094506100b6565b505050505050600090565b5081156100a756fea2646970667358221220486d7fab26644b3b1c4550c93b6661ef65abd8774f31a36808ff2eb7ce4c167a64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0xA0ACBEC3 EQ PUSH2 0x27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x6B JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x6B JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x6B JUMPI PUSH1 0x20 PUSH2 0x63 PUSH1 0x84 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x83 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP4 SWAP2 SWAP1 DUP2 ISZERO DUP1 DUP1 ISZERO PUSH2 0x134 JUMPI JUMPDEST PUSH2 0x129 JUMPI PUSH3 0xF4240 DUP6 GT PUSH2 0x11E JUMPI JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH8 0xDE0B6B3A7640000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x83 JUMPI PUSH2 0x108 JUMPI DIV SWAP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x83 JUMPI PUSH2 0xFF PUSH2 0x104 SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP5 PUSH1 0x1 SHR PUSH2 0x70 JUMP JUMPDEST PUSH2 0x70 JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xF4240 SWAP5 POP PUSH2 0xB6 JUMP JUMPDEST POP POP POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0xA7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE PUSH14 0x7FAB26644B3B1C4550C93B6661EF PUSH6 0xABD8774F31A3 PUSH9 0x8FF2EB7CE4C167A64 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "667:624:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;667:624:24;;;;;;-1:-1:-1;;;;;667:624:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;731:557;;;;;981:17;;;:37;;;;731:557;977:51;;1062:3;1053:12;;1049:30;;731:557;1131:4;667:624;;;;;;1131:4;667:624;;;;;;;;;;;;;;;;;;1242:22;:30;667:624;1131:4;667:624;;;1242:22;:::i;:::-;:30;:::i;:::-;667:624;731:557;:::o;667:624::-;;;;;;;;;;;;1049:30;1062:3;;-1:-1:-1;1049:30:24;;977:51;1020:8;;;;;;667:624;1020:8;:::o;981:37::-;1002:16;;;981:37;"
            },
            "methodIdentifiers": {
              "calculateReward(uint256,uint256,uint256,uint256,uint256,address)": "a0acbec3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"userBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxReward\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenFarm.sol\":\"ProportionalVariableStrategy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DappToken.sol\":{\"keccak256\":\"0xe618a35cf7a07450a3d97d5132d7874782f3f3fa68debf02d5fb7cf0469a0bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7651149cdb34ffe25489dc41efe0699adaaac548b17d3dff6afd22824959bee3\",\"dweb:/ipfs/QmeLJuYwgb4eW38TVYfntgSzBsBPtpYd4NGAxCnS187SBj\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0xb47f69e847eccd98b83f058c327c3bea97cc6cefc308150de83697845feea545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0126f3a7ed94ec90cebb25c8d8df0ba373f62663596646eae79d599f2bea002\",\"dweb:/ipfs/QmZxzHS3yCMikp7cMNFMVCADWZXi9vx2M46xvViSmXddTB\"]},\"contracts/TokenFarm.sol\":{\"keccak256\":\"0xd204c217c0989ec1f96b47263b3a128c601911fa446c087c637b49577efdbc89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faeae6b662ff179f321a18b95579e0a8c8ce6b334e9c618f8a66388e75489b34\",\"dweb:/ipfs/QmcFTg1zG3TwnduwjechAW1pfnafYcg7eNpLAXVBStsx2c\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "SafeMath": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204f2ed0e750090dc0dc5ab4b4e3097c2906a621e0a8355809cd63d25888467b2864736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0x2E 0xD0 0xE7 POP MULMOD 0xD 0xC0 0xDC GAS 0xB4 0xB4 0xE3 MULMOD PUSH29 0x2906A621E0A8355809CD63D25888467B2864736F6C634300081C003300 ",
              "sourceMap": "18739:761:24:-:0;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "600080fdfea26469706673582212204f2ed0e750090dc0dc5ab4b4e3097c2906a621e0a8355809cd63d25888467b2864736f6c634300081c0033",
              "opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0x2E 0xD0 0xE7 POP MULMOD 0xD 0xC0 0xDC GAS 0xB4 0xB4 0xE3 MULMOD PUSH29 0x2906A621E0A8355809CD63D25888467B2864736F6C634300081C003300 ",
              "sourceMap": "18739:761:24:-:0;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenFarm.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DappToken.sol\":{\"keccak256\":\"0xe618a35cf7a07450a3d97d5132d7874782f3f3fa68debf02d5fb7cf0469a0bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7651149cdb34ffe25489dc41efe0699adaaac548b17d3dff6afd22824959bee3\",\"dweb:/ipfs/QmeLJuYwgb4eW38TVYfntgSzBsBPtpYd4NGAxCnS187SBj\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0xb47f69e847eccd98b83f058c327c3bea97cc6cefc308150de83697845feea545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0126f3a7ed94ec90cebb25c8d8df0ba373f62663596646eae79d599f2bea002\",\"dweb:/ipfs/QmZxzHS3yCMikp7cMNFMVCADWZXi9vx2M46xvViSmXddTB\"]},\"contracts/TokenFarm.sol\":{\"keccak256\":\"0xd204c217c0989ec1f96b47263b3a128c601911fa446c087c637b49577efdbc89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faeae6b662ff179f321a18b95579e0a8c8ce6b334e9c618f8a66388e75489b34\",\"dweb:/ipfs/QmcFTg1zG3TwnduwjechAW1pfnafYcg7eNpLAXVBStsx2c\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "TokenFarm": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__EmergencyStop",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__FarmStopped",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__InvalidAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__InvalidConfiguration",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__MaxStakersReached",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__NoFees",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__NoRewards",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__NotStaking",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__OnlyOwner",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__StillLocked",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__TransferFailed",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "EmergencyStop",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "FeesWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldPeriod",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newPeriod",
                  "type": "uint256"
                }
              ],
              "name": "LockPeriodUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "name": "RewardConfigUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "netAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "name": "RewardsClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalUsers",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "RewardsDistributed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "enum FarmState",
                  "name": "oldState",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "enum FarmState",
                  "name": "newState",
                  "type": "uint8"
                }
              ],
              "name": "StateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "oldStrategy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newStrategy",
                  "type": "address"
                }
              ],
              "name": "StrategyUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "Withdraw",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "MAX_FEE_PERCENT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_STAKERS",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_DEPOSIT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "canWithdraw",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "canWithdrawNow",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "unlockTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimRewards",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collectedFees",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dappToken",
              "outputs": [
                {
                  "internalType": "contract DappToken",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "distributeRewardsAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyStop",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyWithdrawEnabled",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "farmStartBlock",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "farmState",
              "outputs": [
                {
                  "internalType": "enum FarmState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getActiveStakers",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "activeStakersList",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getContractStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalStakers",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalStaked",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalFees",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalRewards",
                  "type": "uint256"
                },
                {
                  "internalType": "enum FarmState",
                  "name": "state",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "activeStakers",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEstimatedAPY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddr",
                  "type": "address"
                }
              ],
              "name": "getUserInfo",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "balance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "checkpoint",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pendingRewards",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalClaimed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "depositTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "hasStaked",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStaking",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct TokenFarm.Staker",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVersion",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_dappToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_lpToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_strategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lockPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lpToken",
              "outputs": [
                {
                  "internalType": "contract LPToken",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pauseFarm",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resumeFarm",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardConfig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "minPerBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feePercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardStrategy",
              "outputs": [
                {
                  "internalType": "contract IRewardStrategy",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "_enabled",
                  "type": "bool"
                }
              ],
              "name": "setEmergencyWithdrawEnabled",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "simulateRewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "pendingRewards",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "projectedRewards",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "stakerIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "stakers",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "stakersData",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "checkpoint",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pendingRewards",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "depositTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "hasStaked",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isStaking",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalRewardsDistributed",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalStakingBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newPeriod",
                  "type": "uint256"
                }
              ],
              "name": "updateLockPeriod",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_max",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_feePercent",
                  "type": "uint256"
                }
              ],
              "name": "updateRewardConfig",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IRewardStrategy",
                  "name": "_newStrategy",
                  "type": "address"
                }
              ],
              "name": "updateRewardStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080806040523460d2577ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c1660c1576002600160401b03196001600160401b03821601605c575b604051611f1890816100d88239f35b6001600160401b0319166001600160401b039081177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005581527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a13880604d565b63f92ee8a960e01b60005260046000fd5b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c806306309e4b146116bb57806306fdde03146116625780630d8e6e2c1461161d57806319262d30146115eb578063372500ab146114565780633ccfd60b146112a45780633fd8b02f1461128657806344c4aea91461125d578063476343ee146110e05780634e94c285146110a95780635747e69f146110865780635c975abb146110445780635eb186f8146110195780635fcbd28514610ff05780636386c1c714610efc57806363a599a414610edb57806367d8174014610ebf5780636c7ecb7814610e9e5780636f3ba88914610e09578063715018a614610d9f57806378d60a5b14610d665780637bbfffa514610d365780638da5cb5b14610d005780639003adfe14610ce2578063910956aa14610cc557806391db7b0d14610c6f5780639fb82db914610ae2578063a113601b14610ac1578063acb422c514610a3e578063b507d70f14610a20578063b6b55f25146107d6578063c74ad4931461079e578063ccaad55d1461077b578063ce2040c814610754578063db03e22714610607578063dfe6b5d61461055b578063e1e158a514610539578063e766c8351461051b578063ee172546146104fd578063f2fde38b146104d0578063f8c8765e146102315763fd5e6dd1146101eb57600080fd5b3461022e57602036600319011261022e5760043590600b5482101561022e5760206102158361182a565b905460405160039290921b1c6001600160a01b03168152f35b80fd5b503461022e57608036600319011261022e5761024b6117ec565b906024356001600160a01b038116908190036104cc576044356001600160a01b038116908190036104c857606435906001600160a01b03821682036104c457600080516020611ec3833981519152549260ff8460401c16159367ffffffffffffffff8116801590816104bc575b60011490816104b2575b1590816104a9575b5061049a5767ffffffffffffffff198116600117600080516020611ec3833981519152558461046d575b506102fd611e74565b610305611e74565b61030d611e74565b61031683611ca8565b61031e611e74565b610326611e74565b60ff196000541660005543600a55600160ff19600f541617600f5560405195608087019680881067ffffffffffffffff891117610459576103f895969760405267016345785d8a00008152670de0b6b3a764000060208201526002604082015260604291015267016345785d8a0000600355670de0b6b3a7640000600455600260055542600655865490610100600160a81b039060081b1690610100600160a81b0319161786556001600160601b0360a01b60015416176001556001600160601b0360a01b6002541617600255611e1e565b6103ff5780f35b68ff000000000000000019600080516020611ec38339815191525416600080516020611ec3833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b634e487b7160e01b87526041600452602487fd5b68ffffffffffffffffff19166801000000000000000117600080516020611ec383398151915255386102f4565b63f92ee8a960e01b8652600486fd5b905015386102ca565b303b1591506102c2565b8691506102b8565b8380fd5b8280fd5b5080fd5b503461022e57602036600319011261022e576104fa6104ed6117ec565b6104f5611cd8565b611ca8565b80f35b503461022e578060031936011261022e576020600954604051908152f35b503461022e578060031936011261022e576020600754604051908152f35b503461022e578060031936011261022e57602060405166038d7ea4c680008152f35b503461022e578060031936011261022e57600b5481805b8281106105b657506105af60c0936007549060085460ff600954925416926040519687526020870152604086015260608501526080840190611807565b60a0820152f35b6105bf8161182a565b905460039190911b1c6001600160a01b03168452600c602052604084206005015460081c60ff166105f3575b600101610572565b906105ff600191611bbf565b9190506105eb565b503461022e578060031936011261022e57610620611cd8565b60ff8154166003811015610740578061073157600214610722578080805b600b548110156106d7576106518161182a565b905460039190911b1c6001600160a01b0316808552600c602052604085206005015460081c60ff16610687575b5060010161063e565b6106ca60019293946106c4836106d0948952600c602052600260408a200154906106b081611d0e565b8952600c602052600260408a200154611953565b9061185b565b93611bbf565b919061067e565b507f6ae8ee960d83517f7fa993ad7a0e16e33d9655a23ff41eefc62bdb289c7a8e5f9161071c6040519283924291846040919493926060820195825260208201520152565b0390a180f35b633435875f60e11b8152600490fd5b63566498c160e11b8252600482fd5b634e487b7160e01b82526021600452602482fd5b503461022e578060031936011261022e5760ff60209154166107796040518092611807565bf35b503461022e578060031936011261022e576020610796611c43565b604051908152f35b503461022e57602036600319011261022e576004358015158091036104cc576107c5611cd8565b60ff8019600f5416911617600f5580f35b503461022e57602036600319011261022e5760043560ff8254166003811015610a0c57806109fd576002146109ee5766038d7ea4c6800081106109df57612710600b541015806109c5575b6109b6576001546040516323b872dd60e01b815233600482015230602482015260448101839052906020908290606490829087906001600160a01b03165af19081156109ab57839161097c575b501561096d57338252600c60205260408220600581019060ff825416156108ee575b61089b83825461185b565b905561010061ff00198254161790556108b68160075461185b565b6007556040519081524260208201527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560403392a280f35b600b54338552600d60205280604086205568010000000000000000811015610959578060016109209201600b5561182a565b81546001600160a01b0360039290921b91821b19163390911b179055815460ff1916600190811783554260048301554390820155610890565b634e487b7160e01b85526041600452602485fd5b63f45377a960e01b8252600482fd5b61099e915060203d6020116109a4575b6109968183611781565b810190611960565b3861086e565b503d61098c565b6040513d85823e3d90fd5b634f26e78960e01b8252600482fd5b50338252600c60205260ff60056040842001541615610821565b638339c1ad60e01b8252600482fd5b633435875f60e11b8252600482fd5b63566498c160e11b8352600483fd5b634e487b7160e01b83526021600452602483fd5b503461022e578060031936011261022e576020600a54604051908152f35b503461022e57602036600319011261022e5760e0906040906001600160a01b03610a666117ec565b168152600c6020522060ff815491600181015490600281015460038201549060056004840154930154936040519687526020870152604086015260608501526080840152818116151560a084015260081c16151560c0820152f35b503461022e578060031936011261022e57610ada611cd8565b6104fa611be6565b503461022e578060031936011261022e57600b5481805b828110610c1e5750610b23610b0d82611bce565b91610b1b6040519384611781565b808352611bce565b602082019290601f19013684378390845b818110610b895750505090604051928392602084019060208552518091526040840192915b818110610b67575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610b59565b610b928161182a565b905460039190911b1c6001600160a01b03168652600c602052604086206005015460081c60ff16610bc6575b600101610b34565b91610bd08361182a565b9054855160039290921b1c6001600160a01b031690821015610c0a5781610c0291602060019460051b88010152611bbf565b929050610bbe565b634e487b7160e01b87526032600452602487fd5b610c278161182a565b905460039190911b1c6001600160a01b03168452600c602052604084206005015460081c60ff16610c5b575b600101610af9565b90610c67600191611bbf565b919050610c53565b503461022e57602036600319011261022e577f5dd7b309b7bc5010d9c96159ee535a428121d6803cb847792402fffccaf1569a6040600435610caf611cd8565b600e549080600e5582519182526020820152a180f35b503461022e578060031936011261022e5760206040516127108152f35b503461022e578060031936011261022e576020600854604051908152f35b503461022e578060031936011261022e57600080516020611ea3833981519152546040516001600160a01b039091168152602090f35b503461022e57602036600319011261022e576040610d5a610d556117ec565b611a71565b82519182526020820152f35b503461022e57602036600319011261022e576020906040906001600160a01b03610d8e6117ec565b168152600d83522054604051908152f35b503461022e578060031936011261022e57610db8611cd8565b600080516020611ea383398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461022e57606036600319011261022e5760443590602435600435610e2d611cd8565b818111610e8f5760328411610e8f5761071c7f81376037ed87033d6b5601a7c8806a8a7a2649525c23fe62315eb82c39c7e247939482600355836004558060055542600655604051938493846040919493926060820195825260208201520152565b631a67164160e21b8352600483fd5b503461022e578060031936011261022e57610eb7611cd8565b6104fa611a0f565b503461022e578060031936011261022e57602060405160328152f35b503461022e578060031936011261022e57610ef4611cd8565b6104fa611978565b503461022e57602036600319011261022e57604060e091610f1b6117ec565b8160c08451610f298161174f565b82815282602082015282868201528260608201528260808201528260a0820152015260018060a01b03168152600c6020522060405190610f688261174f565b805491828152600182015491602082019283526002810154604083019081526003820154906060840191825260056004840154936080860194855201549460ff60c060a087019682891615158852019660081c161515865260405196875251602087015251604086015251606085015251608084015251151560a083015251151560c0820152f35b503461022e578060031936011261022e576001546040516001600160a01b039091168152602090f35b503461022e578060031936011261022e575460405160089190911c6001600160a01b03168152602090f35b503461022e578060031936011261022e57602060ff7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330054166040519015158152f35b503461022e578060031936011261022e57602060ff600f54166040519015158152f35b503461022e578060031936011261022e57608060035460045460055460065491604051938452602084015260408301526060820152f35b503461022e578060031936011261022e576110f9611cd8565b600854801561124e5760088281558254604051638da5cb5b60e01b8152911c6001600160a01b031690602081600481855afa908115611243578491611201575b50306001600160a01b0390911603610e8f57600080516020611ea38339815191525483916001600160a01b0390911690803b156104c8576040516340c10f1960e01b81526001600160a01b039290921660048301526024820184905282908290604490829084905af180156111f6576111e1575b507fd9787bf70d3926a4a81c52cba8799d18903ce0132aaa4b7de9e92dc893303a7f6040838151908152426020820152a180f35b816111eb91611781565b6104cc5781386111ad565b6040513d84823e3d90fd5b90506020813d60201161123b575b8161121c60209383611781565b810103126104c457516001600160a01b03811681036104c45738611139565b3d915061120f565b6040513d86823e3d90fd5b6379f0114160e01b8252600482fd5b503461022e578060031936011261022e576002546040516001600160a01b039091168152602090f35b503461022e578060031936011261022e576020600e54604051908152f35b503461022e578060031936011261022e57338152600c60205260ff600560408320015460081c16158015611442575b6114335760ff8154166003811015610740576002148080611426575b6109ee57338252600c6020526040822080549182156114175715808061140c575b6113e5575b906005916113d7575b8381550161ff0019815416905561133781600754611953565b60075560015460405163a9059cbb60e01b815233600482015260248101839052906020908290604490829087906001600160a01b03165af19081156109ab5783916113b8575b501561096d576040519081524260208201527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56860403392a280f35b6113d1915060203d6020116109a4576109968183611781565b3861137d565b6113e033611d0e565b61131e565b6113f66004830154600e549061185b565b42101561131557631958598b60e01b8452600484fd5b50600e541515611310565b638339c1ad60e01b8452600484fd5b5060ff600f5416156112ef565b6327b9597960e01b8152600490fd5b50338152600c6020526040812054156112d3565b503461022e578060031936011261022e5760ff815416600381101561074057600281146109ee576115dc57338152600c60205260ff600560408320015460081c161580156115c8575b611433576114ac33611d0e565b338152600c602052604081206002810190815480156115b95760055480820290828204036115a5579060036064611511930493866114ea8685611953565b9655016114f885825461185b565b90556115068360085461185b565b60085560095461185b565b600955825460081c6001600160a01b0316803b156104c4576040516340c10f1960e01b8152336004820152602481018490529084908290604490829084905af1801561124357611591575b5060405191825260208201527fdacbdde355ba930696a362ea6738feb9f8bd52dfb3d81947558fd3217e23e32560403392a280f35b8361159e91949294611781565b913861155c565b634e487b7160e01b85526011600452602485fd5b630736394360e51b8452600484fd5b50338152600c60205260408120541561149f565b63566498c160e11b8152600490fd5b503461022e57602036600319011261022e57604061160f61160a6117ec565b61187e565b825191151582526020820152f35b503461022e578060031936011261022e575061165e604051611640604082611781565b60058152640312e302e360dc1b6020820152604051918291826117a3565b0390f35b503461022e578060031936011261022e575061165e604051611685604082611781565b601781527f50726f706f7274696f6e616c20546f6b656e204661726d0000000000000000006020820152604051918291826117a3565b503461022e57602036600319011261022e576004356001600160a01b038116908190036104cc576116ea611cd8565b80156117405760407fe4cec16b1a7e6b7979e923da619a8b1e5fd0f0fb6e5c1cf647f350430ee61ca99160025490806001600160601b0360a01b83161760025582519160018060a01b031682526020820152a180f35b631a67164160e21b8252600482fd5b60e0810190811067ffffffffffffffff82111761176b57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761176b57604052565b91909160208152825180602083015260005b8181106117d6575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016117b5565b600435906001600160a01b038216820361180257565b600080fd5b9060038210156118145752565b634e487b7160e01b600052602160045260246000fd5b600b5481101561184557600b60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9190820180921161186857565b634e487b7160e01b600052601160045260246000fd5b60018060a01b0316600052600c602052604060002060c06040516118a18161174f565b82549081815260018401546020820152600284015460408201526003840154606082015260ff6005600486015495608084019687520154818116151560a084015260081c161590811593849101529161194a575b506119415760ff6000541660038110156118145760021461193457600e54801561192a57611923915161185b565b4281111591565b5050600190600090565b5060ff600f541690600090565b50600090600090565b905015386118f5565b9190820391821161186857565b90816020910312611802575180151581036118025790565b60ff6000541660038110156118145760028114611a0c5760407fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d891600260ff1960005416176000556119df60ff600054166119d584518094611807565b6020830190611807565ba17f1e8ac57e9803840915f0284b77b570a882fb2db69108ac8eba578bb30fcaf1526020604051428152a1565b50565b60ff600054166003811015611814578015611a0c5760006002821461072257805460ff19169055604080517fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d892611a6e906000906119d5908490611807565ba1565b9060018060a01b038216600052600c6020526040600020604051611a948161174f565b815481526001820154806020830152600283015460ff6005604085019583875260038101546060870152600481015460808701520154818116151560a086015260081c16158015908160c086015290611bb5575b611baa575090611afa60209243611953565b60025491516007546003546004805460405163a0acbec360e01b81529182019590955260248101939093526044830191909152606482015260848101919091526001600160a01b0395861660a482015294859160c4918391165afa928315611b9e57600093611b6a575b50519190565b9092506020813d602011611b96575b81611b8660209383611781565b8101031261180257519138611b64565b3d9150611b79565b6040513d6000823e3d90fd5b945060009392505050565b5060075415611ae8565b60001981146118685760010190565b67ffffffffffffffff811161176b5760051b60200190565b60ff6000541660038110156118145760018114611a0c5760407fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d891600160ff196000541617600055611a6e60ff600054166119d584518094611807565b6007548015611ca257611c5b6003546004549061185b565b60011c61177081029080820461177014811517156118685762216ab081029180830461016d149015171561186857630d0dacc0029080820460641490151715611868570490565b50600090565b6001600160a01b03811615611cc257611cc090611e1e565b565b631e4fbdf760e01b600052600060045260246000fd5b600080516020611ea3833981519152546001600160a01b03163303611cf957565b63118cdaa760e01b6000523360045260246000fd5b60018060a01b038116600052600c60205260406000209060018201918254804311801590611e14575b8015611e0b575b611e0557611d4e60209143611953565b60025483546007546003546004805460405163a0acbec360e01b81529182019690965260248101939093526044830191909152606482015260848101929092526001600160a01b0394851660a48301529093849160c4918391165afa918215611b9e57600092611dd0575b506002611dc9910191825461185b565b9055439055565b9091506020813d602011611dfd575b81611dec60209383611781565b810103126118025751906002611db9565b3d9150611ddf565b50505050565b50815415611d3e565b5060075415611d37565b600080516020611ea383398151915280546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b60ff600080516020611ec38339815191525460401c1615611e9157565b631afcd79f60e31b60005260046000fdfe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220d1c501c66236d533fcb5631c691c034beff2bf943e1d893d846a2bd157df50be64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0xD2 JUMPI PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND PUSH1 0xC1 JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND ADD PUSH1 0x5C JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F18 SWAP1 DUP2 PUSH2 0xD8 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 CODESIZE DUP1 PUSH1 0x4D JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6309E4B EQ PUSH2 0x16BB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1662 JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x161D JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x15EB JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1456 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x12A4 JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x1286 JUMPI DUP1 PUSH4 0x44C4AEA9 EQ PUSH2 0x125D JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x10E0 JUMPI DUP1 PUSH4 0x4E94C285 EQ PUSH2 0x10A9 JUMPI DUP1 PUSH4 0x5747E69F EQ PUSH2 0x1086 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1044 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x1019 JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0xFF0 JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0xEFC JUMPI DUP1 PUSH4 0x63A599A4 EQ PUSH2 0xEDB JUMPI DUP1 PUSH4 0x67D81740 EQ PUSH2 0xEBF JUMPI DUP1 PUSH4 0x6C7ECB78 EQ PUSH2 0xE9E JUMPI DUP1 PUSH4 0x6F3BA889 EQ PUSH2 0xE09 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD9F JUMPI DUP1 PUSH4 0x78D60A5B EQ PUSH2 0xD66 JUMPI DUP1 PUSH4 0x7BBFFFA5 EQ PUSH2 0xD36 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD00 JUMPI DUP1 PUSH4 0x9003ADFE EQ PUSH2 0xCE2 JUMPI DUP1 PUSH4 0x910956AA EQ PUSH2 0xCC5 JUMPI DUP1 PUSH4 0x91DB7B0D EQ PUSH2 0xC6F JUMPI DUP1 PUSH4 0x9FB82DB9 EQ PUSH2 0xAE2 JUMPI DUP1 PUSH4 0xA113601B EQ PUSH2 0xAC1 JUMPI DUP1 PUSH4 0xACB422C5 EQ PUSH2 0xA3E JUMPI DUP1 PUSH4 0xB507D70F EQ PUSH2 0xA20 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0xC74AD493 EQ PUSH2 0x79E JUMPI DUP1 PUSH4 0xCCAAD55D EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0xCE2040C8 EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0xDB03E227 EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xE1E158A5 EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0xE766C835 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xEE172546 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x231 JUMPI PUSH4 0xFD5E6DD1 EQ PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0x22E JUMPI PUSH1 0x20 PUSH2 0x215 DUP4 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH2 0x24B PUSH2 0x17EC JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x4CC JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x4C8 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x40 SHR AND ISZERO SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x4BC JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x4B2 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x4A9 JUMPI JUMPDEST POP PUSH2 0x49A JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP5 PUSH2 0x46D JUMPI JUMPDEST POP PUSH2 0x2FD PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x305 PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x30D PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x316 DUP4 PUSH2 0x1CA8 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1E74 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE NUMBER PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xF SLOAD AND OR PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP6 PUSH1 0x80 DUP8 ADD SWAP7 DUP1 DUP9 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP10 GT OR PUSH2 0x459 JUMPI PUSH2 0x3F8 SWAP6 SWAP7 SWAP8 PUSH1 0x40 MSTORE PUSH8 0x16345785D8A0000 DUP2 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 TIMESTAMP SWAP2 ADD MSTORE PUSH8 0x16345785D8A0000 PUSH1 0x3 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE PUSH1 0x2 PUSH1 0x5 SSTORE TIMESTAMP PUSH1 0x6 SSTORE DUP7 SLOAD SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL AND SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR DUP7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x3FF JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE CODESIZE PUSH2 0x2F4 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x4 DUP7 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x2CA JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x2C2 JUMP JUMPDEST DUP7 SWAP2 POP PUSH2 0x2B8 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH2 0x4FA PUSH2 0x4ED PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x4F5 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x1CA8 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH7 0x38D7EA4C68000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0xB SLOAD DUP2 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5B6 JUMPI POP PUSH2 0x5AF PUSH1 0xC0 SWAP4 PUSH1 0x7 SLOAD SWAP1 PUSH1 0x8 SLOAD PUSH1 0xFF PUSH1 0x9 SLOAD SWAP3 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x5BF DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0x5F3 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x572 JUMP JUMPDEST SWAP1 PUSH2 0x5FF PUSH1 0x1 SWAP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x5EB JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0x620 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x740 JUMPI DUP1 PUSH2 0x731 JUMPI PUSH1 0x2 EQ PUSH2 0x722 JUMPI DUP1 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH2 0x651 DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP6 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0x687 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x63E JUMP JUMPDEST PUSH2 0x6CA PUSH1 0x1 SWAP3 SWAP4 SWAP5 PUSH2 0x6C4 DUP4 PUSH2 0x6D0 SWAP5 DUP10 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x6B0 DUP2 PUSH2 0x1D0E JUMP JUMPDEST DUP10 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD PUSH2 0x1953 JUMP JUMPDEST SWAP1 PUSH2 0x185B JUMP JUMPDEST SWAP4 PUSH2 0x1BBF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST POP PUSH32 0x6AE8EE960D83517F7FA993AD7A0E16E33D9655A23FF41EEFC62BDB289C7A8E5F SWAP2 PUSH2 0x71C PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x3435875F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x566498C1 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD AND PUSH2 0x779 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1807 JUMP JUMPDEST RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH2 0x796 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x4CC JUMPI PUSH2 0x7C5 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xF SLOAD AND SWAP2 AND OR PUSH1 0xF SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP3 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xA0C JUMPI DUP1 PUSH2 0x9FD JUMPI PUSH1 0x2 EQ PUSH2 0x9EE JUMPI PUSH7 0x38D7EA4C68000 DUP2 LT PUSH2 0x9DF JUMPI PUSH2 0x2710 PUSH1 0xB SLOAD LT ISZERO DUP1 PUSH2 0x9C5 JUMPI JUMPDEST PUSH2 0x9B6 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9AB JUMPI DUP4 SWAP2 PUSH2 0x97C JUMPI JUMPDEST POP ISZERO PUSH2 0x96D JUMPI CALLER DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x5 DUP2 ADD SWAP1 PUSH1 0xFF DUP3 SLOAD AND ISZERO PUSH2 0x8EE JUMPI JUMPDEST PUSH2 0x89B DUP4 DUP3 SLOAD PUSH2 0x185B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x8B6 DUP2 PUSH1 0x7 SLOAD PUSH2 0x185B JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0xB SLOAD CALLER DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 DUP7 KECCAK256 SSTORE PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x959 JUMPI DUP1 PUSH1 0x1 PUSH2 0x920 SWAP3 ADD PUSH1 0xB SSTORE PUSH2 0x182A JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP4 SSTORE TIMESTAMP PUSH1 0x4 DUP4 ADD SSTORE NUMBER SWAP1 DUP3 ADD SSTORE PUSH2 0x890 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0xF45377A9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH2 0x99E SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9A4 JUMPI JUMPDEST PUSH2 0x996 DUP2 DUP4 PUSH2 0x1781 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1960 JUMP JUMPDEST CODESIZE PUSH2 0x86E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x98C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4F26E789 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x821 JUMP JUMPDEST PUSH4 0x8339C1AD PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH4 0x3435875F PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH4 0x566498C1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0xE0 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA66 PUSH2 0x17EC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF DUP2 SLOAD SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0xADA PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x4FA PUSH2 0x1BE6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0xB SLOAD DUP2 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0xC1E JUMPI POP PUSH2 0xB23 PUSH2 0xB0D DUP3 PUSH2 0x1BCE JUMP JUMPDEST SWAP2 PUSH2 0xB1B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1781 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 CALLDATACOPY DUP4 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0xB89 JUMPI POP POP POP SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xB67 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB59 JUMP JUMPDEST PUSH2 0xB92 DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0xBC6 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xB34 JUMP JUMPDEST SWAP2 PUSH2 0xBD0 DUP4 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD DUP6 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 LT ISZERO PUSH2 0xC0A JUMPI DUP2 PUSH2 0xC02 SWAP2 PUSH1 0x20 PUSH1 0x1 SWAP5 PUSH1 0x5 SHL DUP9 ADD ADD MSTORE PUSH2 0x1BBF JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xBBE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH2 0xC27 DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0xC5B JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xAF9 JUMP JUMPDEST SWAP1 PUSH2 0xC67 PUSH1 0x1 SWAP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0xC53 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH32 0x5DD7B309B7BC5010D9C96159EE535A428121D6803CB847792402FFFCCAF1569A PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0xCAF PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 DUP1 PUSH1 0xE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EA3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x40 PUSH2 0xD5A PUSH2 0xD55 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x1A71 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD8E PUSH2 0x17EC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xD DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0xDB8 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EA3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xE2D PUSH2 0x1CD8 JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0xE8F JUMPI PUSH1 0x32 DUP5 GT PUSH2 0xE8F JUMPI PUSH2 0x71C PUSH32 0x81376037ED87033D6B5601A7C8806A8A7A2649525C23FE62315EB82C39C7E247 SWAP4 SWAP5 DUP3 PUSH1 0x3 SSTORE DUP4 PUSH1 0x4 SSTORE DUP1 PUSH1 0x5 SSTORE TIMESTAMP PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH4 0x1A671641 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0xEB7 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x4FA PUSH2 0x1A0F JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0xEF4 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x4FA PUSH2 0x1978 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x40 PUSH1 0xE0 SWAP2 PUSH2 0xF1B PUSH2 0x17EC JUMP JUMPDEST DUP2 PUSH1 0xC0 DUP5 MLOAD PUSH2 0xF29 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF68 DUP3 PUSH2 0x174F JUMP JUMPDEST DUP1 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x60 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP7 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP5 PUSH1 0xFF PUSH1 0xC0 PUSH1 0xA0 DUP8 ADD SWAP7 DUP3 DUP10 AND ISZERO ISZERO DUP9 MSTORE ADD SWAP7 PUSH1 0x8 SHR AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE MLOAD PUSH1 0x20 DUP8 ADD MSTORE MLOAD PUSH1 0x40 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xF SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x80 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0x10F9 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP1 ISZERO PUSH2 0x124E JUMPI PUSH1 0x8 DUP3 DUP2 SSTORE DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1243 JUMPI DUP5 SWAP2 PUSH2 0x1201 JUMPI JUMPDEST POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0xE8F JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EA3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11E1 JUMPI JUMPDEST POP PUSH32 0xD9787BF70D3926A4A81C52CBA8799D18903CE0132AAA4B7DE9E92DC893303A7F PUSH1 0x40 DUP4 DUP2 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x11EB SWAP2 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0x4CC JUMPI DUP2 CODESIZE PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x123B JUMPI JUMPDEST DUP2 PUSH2 0x121C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1781 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4C4 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x4C4 JUMPI CODESIZE PUSH2 0x1139 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x120F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x79F01141 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI CALLER DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 DUP4 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO DUP1 ISZERO PUSH2 0x1442 JUMPI JUMPDEST PUSH2 0x1433 JUMPI PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH1 0x2 EQ DUP1 DUP1 PUSH2 0x1426 JUMPI JUMPDEST PUSH2 0x9EE JUMPI CALLER DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x1417 JUMPI ISZERO DUP1 DUP1 PUSH2 0x140C JUMPI JUMPDEST PUSH2 0x13E5 JUMPI JUMPDEST SWAP1 PUSH1 0x5 SWAP2 PUSH2 0x13D7 JUMPI JUMPDEST DUP4 DUP2 SSTORE ADD PUSH2 0xFF00 NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x1337 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9AB JUMPI DUP4 SWAP2 PUSH2 0x13B8 JUMPI JUMPDEST POP ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x13D1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9A4 JUMPI PUSH2 0x996 DUP2 DUP4 PUSH2 0x1781 JUMP JUMPDEST CODESIZE PUSH2 0x137D JUMP JUMPDEST PUSH2 0x13E0 CALLER PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x131E JUMP JUMPDEST PUSH2 0x13F6 PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xE SLOAD SWAP1 PUSH2 0x185B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1315 JUMPI PUSH4 0x1958598B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP PUSH1 0xE SLOAD ISZERO ISZERO PUSH2 0x1310 JUMP JUMPDEST PUSH4 0x8339C1AD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0xF SLOAD AND ISZERO PUSH2 0x12EF JUMP JUMPDEST PUSH4 0x27B95979 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLER DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x12D3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9EE JUMPI PUSH2 0x15DC JUMPI CALLER DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 DUP4 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO DUP1 ISZERO PUSH2 0x15C8 JUMPI JUMPDEST PUSH2 0x1433 JUMPI PUSH2 0x14AC CALLER PUSH2 0x1D0E JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP1 DUP2 SLOAD DUP1 ISZERO PUSH2 0x15B9 JUMPI PUSH1 0x5 SLOAD DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV SUB PUSH2 0x15A5 JUMPI SWAP1 PUSH1 0x3 PUSH1 0x64 PUSH2 0x1511 SWAP4 DIV SWAP4 DUP7 PUSH2 0x14EA DUP7 DUP6 PUSH2 0x1953 JUMP JUMPDEST SWAP7 SSTORE ADD PUSH2 0x14F8 DUP6 DUP3 SLOAD PUSH2 0x185B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1506 DUP4 PUSH1 0x8 SLOAD PUSH2 0x185B JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD PUSH2 0x185B JUMP JUMPDEST PUSH1 0x9 SSTORE DUP3 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1243 JUMPI PUSH2 0x1591 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xDACBDDE355BA930696A362EA6738FEB9F8BD52DFB3D81947558FD3217E23E325 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP4 PUSH2 0x159E SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0x1781 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x155C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x7363943 PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP CALLER DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x149F JUMP JUMPDEST PUSH4 0x566498C1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x40 PUSH2 0x160F PUSH2 0x160A PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x187E JUMP JUMPDEST DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI POP PUSH2 0x165E PUSH1 0x40 MLOAD PUSH2 0x1640 PUSH1 0x40 DUP3 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x17A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI POP PUSH2 0x165E PUSH1 0x40 MLOAD PUSH2 0x1685 PUSH1 0x40 DUP3 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x50726F706F7274696F6E616C20546F6B656E204661726D000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x17A3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x4CC JUMPI PUSH2 0x16EA PUSH2 0x1CD8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1740 JUMPI PUSH1 0x40 PUSH32 0xE4CEC16B1A7E6B7979E923DA619A8B1E5FD0F0FB6E5C1CF647F350430EE61CA9 SWAP2 PUSH1 0x2 SLOAD SWAP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 AND OR PUSH1 0x2 SSTORE DUP3 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x1A671641 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x176B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x176B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x17D6 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1802 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x1814 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1845 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1868 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xC0 PUSH1 0x40 MLOAD PUSH2 0x18A1 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP3 SLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 PUSH1 0x80 DUP5 ADD SWAP7 DUP8 MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO SWAP1 DUP2 ISZERO SWAP4 DUP5 SWAP2 ADD MSTORE SWAP2 PUSH2 0x194A JUMPI JUMPDEST POP PUSH2 0x1941 JUMPI PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x2 EQ PUSH2 0x1934 JUMPI PUSH1 0xE SLOAD DUP1 ISZERO PUSH2 0x192A JUMPI PUSH2 0x1923 SWAP2 MLOAD PUSH2 0x185B JUMP JUMPDEST TIMESTAMP DUP2 GT ISZERO SWAP2 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x18F5 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1868 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1802 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1802 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1A0C JUMPI PUSH1 0x40 PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP2 PUSH1 0x2 PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x19DF PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH2 0x19D5 DUP5 MLOAD DUP1 SWAP5 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1807 JUMP JUMPDEST LOG1 PUSH32 0x1E8AC57E9803840915F0284B77B570A882FB2DB69108AC8EBA578BB30FCAF152 PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1814 JUMPI DUP1 ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 EQ PUSH2 0x722 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP3 PUSH2 0x1A6E SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x19D5 SWAP1 DUP5 SWAP1 PUSH2 0x1807 JUMP JUMPDEST LOG1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1A94 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 DUP6 ADD SWAP6 DUP4 DUP8 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO DUP1 ISZERO SWAP1 DUP2 PUSH1 0xC0 DUP7 ADD MSTORE SWAP1 PUSH2 0x1BB5 JUMPI JUMPDEST PUSH2 0x1BAA JUMPI POP SWAP1 PUSH2 0x1AFA PUSH1 0x20 SWAP3 NUMBER PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA0ACBEC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0xA4 DUP3 ADD MSTORE SWAP5 DUP6 SWAP2 PUSH1 0xC4 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1B9E JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1B6A JUMPI JUMPDEST POP MLOAD SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B96 JUMPI JUMPDEST DUP2 PUSH2 0x1B86 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1781 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1802 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x1B64 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x7 SLOAD ISZERO PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1868 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x176B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1A0C JUMPI PUSH1 0x40 PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP2 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x1A6E PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH2 0x19D5 DUP5 MLOAD DUP1 SWAP5 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x1CA2 JUMPI PUSH2 0x1C5B PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x1 SHR PUSH2 0x1770 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0x1770 EQ DUP2 ISZERO OR ISZERO PUSH2 0x1868 JUMPI PUSH3 0x216AB0 DUP2 MUL SWAP2 DUP1 DUP4 DIV PUSH2 0x16D EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1868 JUMPI PUSH4 0xD0DACC0 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1868 JUMPI DIV SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1CC2 JUMPI PUSH2 0x1CC0 SWAP1 PUSH2 0x1E1E JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EA3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1CF9 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP2 DUP3 SLOAD DUP1 NUMBER GT DUP1 ISZERO SWAP1 PUSH2 0x1E14 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1E0B JUMPI JUMPDEST PUSH2 0x1E05 JUMPI PUSH2 0x1D4E PUSH1 0x20 SWAP2 NUMBER PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP4 SLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA0ACBEC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP4 DUP5 SWAP2 PUSH1 0xC4 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1B9E JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1DD0 JUMPI JUMPDEST POP PUSH1 0x2 PUSH2 0x1DC9 SWAP2 ADD SWAP2 DUP3 SLOAD PUSH2 0x185B JUMP JUMPDEST SWAP1 SSTORE NUMBER SWAP1 SSTORE JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1DFD JUMPI JUMPDEST DUP2 PUSH2 0x1DEC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1781 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1802 JUMPI MLOAD SWAP1 PUSH1 0x2 PUSH2 0x1DB9 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1DDF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP DUP2 SLOAD ISZERO PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x7 SLOAD ISZERO PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EA3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x1E91 JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x70667358221220D1C501 0xC6 PUSH3 0x36D533 0xFC 0xB5 PUSH4 0x1C691C03 0x4B 0xEF CALLCODE 0xBF SWAP5 RETURNDATACOPY SAR DUP10 RETURNDATASIZE DUP5 PUSH11 0x2BD157DF50BE64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "1437:17264:24:-:0;;;;;;;3147:66:1;1437:17264:24;;;;;;7894:76:1;;-1:-1:-1;;;;;;;;;;;1437:17264:24;;7983:34:1;7979:146;;-1:-1:-1;1437:17264:24;;;;;;;;;7979:146:1;-1:-1:-1;;;;;;1437:17264:24;-1:-1:-1;;;;;1437:17264:24;;;3147:66:1;1437:17264:24;;;8085:29:1;;1437:17264:24;;8085:29:1;7979:146;;;;7894:76;7936:23;;;-1:-1:-1;7936:23:1;;-1:-1:-1;7936:23:1;1437:17264:24;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 6124,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 6496,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_enum_FarmState": {
                  "entryPoint": 6151,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 6051,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256_uint256_uint256_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 7118,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 6235,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 6483,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 6017,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_25059": {
                  "entryPoint": 5967,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_canWithdraw": {
                  "entryPoint": 6270,
                  "id": 4261,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "fun_checkInitializing": {
                  "entryPoint": 7796,
                  "id": 370,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 7384,
                  "id": 122,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_emergencyStop_inner": {
                  "entryPoint": 6520,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getEstimatedAPY": {
                  "entryPoint": 7235,
                  "id": 4196,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_pauseFarm_inner": {
                  "entryPoint": 7142,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_resumeFarm_inner": {
                  "entryPoint": 6671,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_simulateRewards": {
                  "entryPoint": 6769,
                  "id": 4153,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "fun_transferOwnership": {
                  "entryPoint": 7710,
                  "id": 193,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_inner": {
                  "entryPoint": 7336,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_updateRewards": {
                  "entryPoint": 7438,
                  "id": 3725,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 7103,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 6186,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b6000803560e01c806306309e4b146116bb57806306fdde03146116625780630d8e6e2c1461161d57806319262d30146115eb578063372500ab146114565780633ccfd60b146112a45780633fd8b02f1461128657806344c4aea91461125d578063476343ee146110e05780634e94c285146110a95780635747e69f146110865780635c975abb146110445780635eb186f8146110195780635fcbd28514610ff05780636386c1c714610efc57806363a599a414610edb57806367d8174014610ebf5780636c7ecb7814610e9e5780636f3ba88914610e09578063715018a614610d9f57806378d60a5b14610d665780637bbfffa514610d365780638da5cb5b14610d005780639003adfe14610ce2578063910956aa14610cc557806391db7b0d14610c6f5780639fb82db914610ae2578063a113601b14610ac1578063acb422c514610a3e578063b507d70f14610a20578063b6b55f25146107d6578063c74ad4931461079e578063ccaad55d1461077b578063ce2040c814610754578063db03e22714610607578063dfe6b5d61461055b578063e1e158a514610539578063e766c8351461051b578063ee172546146104fd578063f2fde38b146104d0578063f8c8765e146102315763fd5e6dd1146101eb57600080fd5b3461022e57602036600319011261022e5760043590600b5482101561022e5760206102158361182a565b905460405160039290921b1c6001600160a01b03168152f35b80fd5b503461022e57608036600319011261022e5761024b6117ec565b906024356001600160a01b038116908190036104cc576044356001600160a01b038116908190036104c857606435906001600160a01b03821682036104c457600080516020611ec3833981519152549260ff8460401c16159367ffffffffffffffff8116801590816104bc575b60011490816104b2575b1590816104a9575b5061049a5767ffffffffffffffff198116600117600080516020611ec3833981519152558461046d575b506102fd611e74565b610305611e74565b61030d611e74565b61031683611ca8565b61031e611e74565b610326611e74565b60ff196000541660005543600a55600160ff19600f541617600f5560405195608087019680881067ffffffffffffffff891117610459576103f895969760405267016345785d8a00008152670de0b6b3a764000060208201526002604082015260604291015267016345785d8a0000600355670de0b6b3a7640000600455600260055542600655865490610100600160a81b039060081b1690610100600160a81b0319161786556001600160601b0360a01b60015416176001556001600160601b0360a01b6002541617600255611e1e565b6103ff5780f35b68ff000000000000000019600080516020611ec38339815191525416600080516020611ec3833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a180f35b634e487b7160e01b87526041600452602487fd5b68ffffffffffffffffff19166801000000000000000117600080516020611ec383398151915255386102f4565b63f92ee8a960e01b8652600486fd5b905015386102ca565b303b1591506102c2565b8691506102b8565b8380fd5b8280fd5b5080fd5b503461022e57602036600319011261022e576104fa6104ed6117ec565b6104f5611cd8565b611ca8565b80f35b503461022e578060031936011261022e576020600954604051908152f35b503461022e578060031936011261022e576020600754604051908152f35b503461022e578060031936011261022e57602060405166038d7ea4c680008152f35b503461022e578060031936011261022e57600b5481805b8281106105b657506105af60c0936007549060085460ff600954925416926040519687526020870152604086015260608501526080840190611807565b60a0820152f35b6105bf8161182a565b905460039190911b1c6001600160a01b03168452600c602052604084206005015460081c60ff166105f3575b600101610572565b906105ff600191611bbf565b9190506105eb565b503461022e578060031936011261022e57610620611cd8565b60ff8154166003811015610740578061073157600214610722578080805b600b548110156106d7576106518161182a565b905460039190911b1c6001600160a01b0316808552600c602052604085206005015460081c60ff16610687575b5060010161063e565b6106ca60019293946106c4836106d0948952600c602052600260408a200154906106b081611d0e565b8952600c602052600260408a200154611953565b9061185b565b93611bbf565b919061067e565b507f6ae8ee960d83517f7fa993ad7a0e16e33d9655a23ff41eefc62bdb289c7a8e5f9161071c6040519283924291846040919493926060820195825260208201520152565b0390a180f35b633435875f60e11b8152600490fd5b63566498c160e11b8252600482fd5b634e487b7160e01b82526021600452602482fd5b503461022e578060031936011261022e5760ff60209154166107796040518092611807565bf35b503461022e578060031936011261022e576020610796611c43565b604051908152f35b503461022e57602036600319011261022e576004358015158091036104cc576107c5611cd8565b60ff8019600f5416911617600f5580f35b503461022e57602036600319011261022e5760043560ff8254166003811015610a0c57806109fd576002146109ee5766038d7ea4c6800081106109df57612710600b541015806109c5575b6109b6576001546040516323b872dd60e01b815233600482015230602482015260448101839052906020908290606490829087906001600160a01b03165af19081156109ab57839161097c575b501561096d57338252600c60205260408220600581019060ff825416156108ee575b61089b83825461185b565b905561010061ff00198254161790556108b68160075461185b565b6007556040519081524260208201527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560403392a280f35b600b54338552600d60205280604086205568010000000000000000811015610959578060016109209201600b5561182a565b81546001600160a01b0360039290921b91821b19163390911b179055815460ff1916600190811783554260048301554390820155610890565b634e487b7160e01b85526041600452602485fd5b63f45377a960e01b8252600482fd5b61099e915060203d6020116109a4575b6109968183611781565b810190611960565b3861086e565b503d61098c565b6040513d85823e3d90fd5b634f26e78960e01b8252600482fd5b50338252600c60205260ff60056040842001541615610821565b638339c1ad60e01b8252600482fd5b633435875f60e11b8252600482fd5b63566498c160e11b8352600483fd5b634e487b7160e01b83526021600452602483fd5b503461022e578060031936011261022e576020600a54604051908152f35b503461022e57602036600319011261022e5760e0906040906001600160a01b03610a666117ec565b168152600c6020522060ff815491600181015490600281015460038201549060056004840154930154936040519687526020870152604086015260608501526080840152818116151560a084015260081c16151560c0820152f35b503461022e578060031936011261022e57610ada611cd8565b6104fa611be6565b503461022e578060031936011261022e57600b5481805b828110610c1e5750610b23610b0d82611bce565b91610b1b6040519384611781565b808352611bce565b602082019290601f19013684378390845b818110610b895750505090604051928392602084019060208552518091526040840192915b818110610b67575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610b59565b610b928161182a565b905460039190911b1c6001600160a01b03168652600c602052604086206005015460081c60ff16610bc6575b600101610b34565b91610bd08361182a565b9054855160039290921b1c6001600160a01b031690821015610c0a5781610c0291602060019460051b88010152611bbf565b929050610bbe565b634e487b7160e01b87526032600452602487fd5b610c278161182a565b905460039190911b1c6001600160a01b03168452600c602052604084206005015460081c60ff16610c5b575b600101610af9565b90610c67600191611bbf565b919050610c53565b503461022e57602036600319011261022e577f5dd7b309b7bc5010d9c96159ee535a428121d6803cb847792402fffccaf1569a6040600435610caf611cd8565b600e549080600e5582519182526020820152a180f35b503461022e578060031936011261022e5760206040516127108152f35b503461022e578060031936011261022e576020600854604051908152f35b503461022e578060031936011261022e57600080516020611ea3833981519152546040516001600160a01b039091168152602090f35b503461022e57602036600319011261022e576040610d5a610d556117ec565b611a71565b82519182526020820152f35b503461022e57602036600319011261022e576020906040906001600160a01b03610d8e6117ec565b168152600d83522054604051908152f35b503461022e578060031936011261022e57610db8611cd8565b600080516020611ea383398151915280546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461022e57606036600319011261022e5760443590602435600435610e2d611cd8565b818111610e8f5760328411610e8f5761071c7f81376037ed87033d6b5601a7c8806a8a7a2649525c23fe62315eb82c39c7e247939482600355836004558060055542600655604051938493846040919493926060820195825260208201520152565b631a67164160e21b8352600483fd5b503461022e578060031936011261022e57610eb7611cd8565b6104fa611a0f565b503461022e578060031936011261022e57602060405160328152f35b503461022e578060031936011261022e57610ef4611cd8565b6104fa611978565b503461022e57602036600319011261022e57604060e091610f1b6117ec565b8160c08451610f298161174f565b82815282602082015282868201528260608201528260808201528260a0820152015260018060a01b03168152600c6020522060405190610f688261174f565b805491828152600182015491602082019283526002810154604083019081526003820154906060840191825260056004840154936080860194855201549460ff60c060a087019682891615158852019660081c161515865260405196875251602087015251604086015251606085015251608084015251151560a083015251151560c0820152f35b503461022e578060031936011261022e576001546040516001600160a01b039091168152602090f35b503461022e578060031936011261022e575460405160089190911c6001600160a01b03168152602090f35b503461022e578060031936011261022e57602060ff7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330054166040519015158152f35b503461022e578060031936011261022e57602060ff600f54166040519015158152f35b503461022e578060031936011261022e57608060035460045460055460065491604051938452602084015260408301526060820152f35b503461022e578060031936011261022e576110f9611cd8565b600854801561124e5760088281558254604051638da5cb5b60e01b8152911c6001600160a01b031690602081600481855afa908115611243578491611201575b50306001600160a01b0390911603610e8f57600080516020611ea38339815191525483916001600160a01b0390911690803b156104c8576040516340c10f1960e01b81526001600160a01b039290921660048301526024820184905282908290604490829084905af180156111f6576111e1575b507fd9787bf70d3926a4a81c52cba8799d18903ce0132aaa4b7de9e92dc893303a7f6040838151908152426020820152a180f35b816111eb91611781565b6104cc5781386111ad565b6040513d84823e3d90fd5b90506020813d60201161123b575b8161121c60209383611781565b810103126104c457516001600160a01b03811681036104c45738611139565b3d915061120f565b6040513d86823e3d90fd5b6379f0114160e01b8252600482fd5b503461022e578060031936011261022e576002546040516001600160a01b039091168152602090f35b503461022e578060031936011261022e576020600e54604051908152f35b503461022e578060031936011261022e57338152600c60205260ff600560408320015460081c16158015611442575b6114335760ff8154166003811015610740576002148080611426575b6109ee57338252600c6020526040822080549182156114175715808061140c575b6113e5575b906005916113d7575b8381550161ff0019815416905561133781600754611953565b60075560015460405163a9059cbb60e01b815233600482015260248101839052906020908290604490829087906001600160a01b03165af19081156109ab5783916113b8575b501561096d576040519081524260208201527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56860403392a280f35b6113d1915060203d6020116109a4576109968183611781565b3861137d565b6113e033611d0e565b61131e565b6113f66004830154600e549061185b565b42101561131557631958598b60e01b8452600484fd5b50600e541515611310565b638339c1ad60e01b8452600484fd5b5060ff600f5416156112ef565b6327b9597960e01b8152600490fd5b50338152600c6020526040812054156112d3565b503461022e578060031936011261022e5760ff815416600381101561074057600281146109ee576115dc57338152600c60205260ff600560408320015460081c161580156115c8575b611433576114ac33611d0e565b338152600c602052604081206002810190815480156115b95760055480820290828204036115a5579060036064611511930493866114ea8685611953565b9655016114f885825461185b565b90556115068360085461185b565b60085560095461185b565b600955825460081c6001600160a01b0316803b156104c4576040516340c10f1960e01b8152336004820152602481018490529084908290604490829084905af1801561124357611591575b5060405191825260208201527fdacbdde355ba930696a362ea6738feb9f8bd52dfb3d81947558fd3217e23e32560403392a280f35b8361159e91949294611781565b913861155c565b634e487b7160e01b85526011600452602485fd5b630736394360e51b8452600484fd5b50338152600c60205260408120541561149f565b63566498c160e11b8152600490fd5b503461022e57602036600319011261022e57604061160f61160a6117ec565b61187e565b825191151582526020820152f35b503461022e578060031936011261022e575061165e604051611640604082611781565b60058152640312e302e360dc1b6020820152604051918291826117a3565b0390f35b503461022e578060031936011261022e575061165e604051611685604082611781565b601781527f50726f706f7274696f6e616c20546f6b656e204661726d0000000000000000006020820152604051918291826117a3565b503461022e57602036600319011261022e576004356001600160a01b038116908190036104cc576116ea611cd8565b80156117405760407fe4cec16b1a7e6b7979e923da619a8b1e5fd0f0fb6e5c1cf647f350430ee61ca99160025490806001600160601b0360a01b83161760025582519160018060a01b031682526020820152a180f35b631a67164160e21b8252600482fd5b60e0810190811067ffffffffffffffff82111761176b57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761176b57604052565b91909160208152825180602083015260005b8181106117d6575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016117b5565b600435906001600160a01b038216820361180257565b600080fd5b9060038210156118145752565b634e487b7160e01b600052602160045260246000fd5b600b5481101561184557600b60005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b9190820180921161186857565b634e487b7160e01b600052601160045260246000fd5b60018060a01b0316600052600c602052604060002060c06040516118a18161174f565b82549081815260018401546020820152600284015460408201526003840154606082015260ff6005600486015495608084019687520154818116151560a084015260081c161590811593849101529161194a575b506119415760ff6000541660038110156118145760021461193457600e54801561192a57611923915161185b565b4281111591565b5050600190600090565b5060ff600f541690600090565b50600090600090565b905015386118f5565b9190820391821161186857565b90816020910312611802575180151581036118025790565b60ff6000541660038110156118145760028114611a0c5760407fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d891600260ff1960005416176000556119df60ff600054166119d584518094611807565b6020830190611807565ba17f1e8ac57e9803840915f0284b77b570a882fb2db69108ac8eba578bb30fcaf1526020604051428152a1565b50565b60ff600054166003811015611814578015611a0c5760006002821461072257805460ff19169055604080517fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d892611a6e906000906119d5908490611807565ba1565b9060018060a01b038216600052600c6020526040600020604051611a948161174f565b815481526001820154806020830152600283015460ff6005604085019583875260038101546060870152600481015460808701520154818116151560a086015260081c16158015908160c086015290611bb5575b611baa575090611afa60209243611953565b60025491516007546003546004805460405163a0acbec360e01b81529182019590955260248101939093526044830191909152606482015260848101919091526001600160a01b0395861660a482015294859160c4918391165afa928315611b9e57600093611b6a575b50519190565b9092506020813d602011611b96575b81611b8660209383611781565b8101031261180257519138611b64565b3d9150611b79565b6040513d6000823e3d90fd5b945060009392505050565b5060075415611ae8565b60001981146118685760010190565b67ffffffffffffffff811161176b5760051b60200190565b60ff6000541660038110156118145760018114611a0c5760407fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d891600160ff196000541617600055611a6e60ff600054166119d584518094611807565b6007548015611ca257611c5b6003546004549061185b565b60011c61177081029080820461177014811517156118685762216ab081029180830461016d149015171561186857630d0dacc0029080820460641490151715611868570490565b50600090565b6001600160a01b03811615611cc257611cc090611e1e565b565b631e4fbdf760e01b600052600060045260246000fd5b600080516020611ea3833981519152546001600160a01b03163303611cf957565b63118cdaa760e01b6000523360045260246000fd5b60018060a01b038116600052600c60205260406000209060018201918254804311801590611e14575b8015611e0b575b611e0557611d4e60209143611953565b60025483546007546003546004805460405163a0acbec360e01b81529182019690965260248101939093526044830191909152606482015260848101929092526001600160a01b0394851660a48301529093849160c4918391165afa918215611b9e57600092611dd0575b506002611dc9910191825461185b565b9055439055565b9091506020813d602011611dfd575b81611dec60209383611781565b810103126118025751906002611db9565b3d9150611ddf565b50505050565b50815415611d3e565b5060075415611d37565b600080516020611ea383398151915280546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b60ff600080516020611ec38339815191525460401c1615611e9157565b631afcd79f60e31b60005260046000fdfe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220d1c501c66236d533fcb5631c691c034beff2bf943e1d893d846a2bd157df50be64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6309E4B EQ PUSH2 0x16BB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1662 JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x161D JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x15EB JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1456 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x12A4 JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x1286 JUMPI DUP1 PUSH4 0x44C4AEA9 EQ PUSH2 0x125D JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x10E0 JUMPI DUP1 PUSH4 0x4E94C285 EQ PUSH2 0x10A9 JUMPI DUP1 PUSH4 0x5747E69F EQ PUSH2 0x1086 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1044 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x1019 JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0xFF0 JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0xEFC JUMPI DUP1 PUSH4 0x63A599A4 EQ PUSH2 0xEDB JUMPI DUP1 PUSH4 0x67D81740 EQ PUSH2 0xEBF JUMPI DUP1 PUSH4 0x6C7ECB78 EQ PUSH2 0xE9E JUMPI DUP1 PUSH4 0x6F3BA889 EQ PUSH2 0xE09 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xD9F JUMPI DUP1 PUSH4 0x78D60A5B EQ PUSH2 0xD66 JUMPI DUP1 PUSH4 0x7BBFFFA5 EQ PUSH2 0xD36 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xD00 JUMPI DUP1 PUSH4 0x9003ADFE EQ PUSH2 0xCE2 JUMPI DUP1 PUSH4 0x910956AA EQ PUSH2 0xCC5 JUMPI DUP1 PUSH4 0x91DB7B0D EQ PUSH2 0xC6F JUMPI DUP1 PUSH4 0x9FB82DB9 EQ PUSH2 0xAE2 JUMPI DUP1 PUSH4 0xA113601B EQ PUSH2 0xAC1 JUMPI DUP1 PUSH4 0xACB422C5 EQ PUSH2 0xA3E JUMPI DUP1 PUSH4 0xB507D70F EQ PUSH2 0xA20 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x7D6 JUMPI DUP1 PUSH4 0xC74AD493 EQ PUSH2 0x79E JUMPI DUP1 PUSH4 0xCCAAD55D EQ PUSH2 0x77B JUMPI DUP1 PUSH4 0xCE2040C8 EQ PUSH2 0x754 JUMPI DUP1 PUSH4 0xDB03E227 EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0xE1E158A5 EQ PUSH2 0x539 JUMPI DUP1 PUSH4 0xE766C835 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xEE172546 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x231 JUMPI PUSH4 0xFD5E6DD1 EQ PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0x22E JUMPI PUSH1 0x20 PUSH2 0x215 DUP4 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH2 0x24B PUSH2 0x17EC JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x4CC JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x4C8 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x40 SHR AND ISZERO SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x4BC JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x4B2 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x4A9 JUMPI JUMPDEST POP PUSH2 0x49A JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP5 PUSH2 0x46D JUMPI JUMPDEST POP PUSH2 0x2FD PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x305 PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x30D PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x316 DUP4 PUSH2 0x1CA8 JUMP JUMPDEST PUSH2 0x31E PUSH2 0x1E74 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x1E74 JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE NUMBER PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xF SLOAD AND OR PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP6 PUSH1 0x80 DUP8 ADD SWAP7 DUP1 DUP9 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP10 GT OR PUSH2 0x459 JUMPI PUSH2 0x3F8 SWAP6 SWAP7 SWAP8 PUSH1 0x40 MSTORE PUSH8 0x16345785D8A0000 DUP2 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 TIMESTAMP SWAP2 ADD MSTORE PUSH8 0x16345785D8A0000 PUSH1 0x3 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE PUSH1 0x2 PUSH1 0x5 SSTORE TIMESTAMP PUSH1 0x6 SSTORE DUP7 SLOAD SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL AND SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR DUP7 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x1E1E JUMP JUMPDEST PUSH2 0x3FF JUMPI DUP1 RETURN JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE CODESIZE PUSH2 0x2F4 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x4 DUP7 REVERT JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x2CA JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x2C2 JUMP JUMPDEST DUP7 SWAP2 POP PUSH2 0x2B8 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH2 0x4FA PUSH2 0x4ED PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x4F5 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x1CA8 JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH7 0x38D7EA4C68000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0xB SLOAD DUP2 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5B6 JUMPI POP PUSH2 0x5AF PUSH1 0xC0 SWAP4 PUSH1 0x7 SLOAD SWAP1 PUSH1 0x8 SLOAD PUSH1 0xFF PUSH1 0x9 SLOAD SWAP3 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x5BF DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0x5F3 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x572 JUMP JUMPDEST SWAP1 PUSH2 0x5FF PUSH1 0x1 SWAP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x5EB JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0x620 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x740 JUMPI DUP1 PUSH2 0x731 JUMPI PUSH1 0x2 EQ PUSH2 0x722 JUMPI DUP1 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x6D7 JUMPI PUSH2 0x651 DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP6 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0x687 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x63E JUMP JUMPDEST PUSH2 0x6CA PUSH1 0x1 SWAP3 SWAP4 SWAP5 PUSH2 0x6C4 DUP4 PUSH2 0x6D0 SWAP5 DUP10 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x6B0 DUP2 PUSH2 0x1D0E JUMP JUMPDEST DUP10 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD PUSH2 0x1953 JUMP JUMPDEST SWAP1 PUSH2 0x185B JUMP JUMPDEST SWAP4 PUSH2 0x1BBF JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x67E JUMP JUMPDEST POP PUSH32 0x6AE8EE960D83517F7FA993AD7A0E16E33D9655A23FF41EEFC62BDB289C7A8E5F SWAP2 PUSH2 0x71C PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x3435875F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x566498C1 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0xFF PUSH1 0x20 SWAP2 SLOAD AND PUSH2 0x779 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1807 JUMP JUMPDEST RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH2 0x796 PUSH2 0x1C43 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x4CC JUMPI PUSH2 0x7C5 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xF SLOAD AND SWAP2 AND OR PUSH1 0xF SSTORE DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xFF DUP3 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xA0C JUMPI DUP1 PUSH2 0x9FD JUMPI PUSH1 0x2 EQ PUSH2 0x9EE JUMPI PUSH7 0x38D7EA4C68000 DUP2 LT PUSH2 0x9DF JUMPI PUSH2 0x2710 PUSH1 0xB SLOAD LT ISZERO DUP1 PUSH2 0x9C5 JUMPI JUMPDEST PUSH2 0x9B6 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9AB JUMPI DUP4 SWAP2 PUSH2 0x97C JUMPI JUMPDEST POP ISZERO PUSH2 0x96D JUMPI CALLER DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x5 DUP2 ADD SWAP1 PUSH1 0xFF DUP3 SLOAD AND ISZERO PUSH2 0x8EE JUMPI JUMPDEST PUSH2 0x89B DUP4 DUP3 SLOAD PUSH2 0x185B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x8B6 DUP2 PUSH1 0x7 SLOAD PUSH2 0x185B JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH1 0xB SLOAD CALLER DUP6 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 DUP7 KECCAK256 SSTORE PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x959 JUMPI DUP1 PUSH1 0x1 PUSH2 0x920 SWAP3 ADD PUSH1 0xB SSTORE PUSH2 0x182A JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR DUP4 SSTORE TIMESTAMP PUSH1 0x4 DUP4 ADD SSTORE NUMBER SWAP1 DUP3 ADD SSTORE PUSH2 0x890 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0xF45377A9 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH2 0x99E SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9A4 JUMPI JUMPDEST PUSH2 0x996 DUP2 DUP4 PUSH2 0x1781 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1960 JUMP JUMPDEST CODESIZE PUSH2 0x86E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x98C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4F26E789 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLER DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 DUP5 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x821 JUMP JUMPDEST PUSH4 0x8339C1AD PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH4 0x3435875F PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH4 0x566498C1 PUSH1 0xE1 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0xE0 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA66 PUSH2 0x17EC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 PUSH1 0xFF DUP2 SLOAD SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0xADA PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x4FA PUSH2 0x1BE6 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0xB SLOAD DUP2 DUP1 JUMPDEST DUP3 DUP2 LT PUSH2 0xC1E JUMPI POP PUSH2 0xB23 PUSH2 0xB0D DUP3 PUSH2 0x1BCE JUMP JUMPDEST SWAP2 PUSH2 0xB1B PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1781 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x1BCE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 CALLDATACOPY DUP4 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT PUSH2 0xB89 JUMPI POP POP POP SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 PUSH1 0x20 DUP5 ADD SWAP1 PUSH1 0x20 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xB67 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB59 JUMP JUMPDEST PUSH2 0xB92 DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0xBC6 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xB34 JUMP JUMPDEST SWAP2 PUSH2 0xBD0 DUP4 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD DUP6 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 LT ISZERO PUSH2 0xC0A JUMPI DUP2 PUSH2 0xC02 SWAP2 PUSH1 0x20 PUSH1 0x1 SWAP5 PUSH1 0x5 SHL DUP9 ADD ADD MSTORE PUSH2 0x1BBF JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xBBE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH2 0xC27 DUP2 PUSH2 0x182A JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0xC5B JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xAF9 JUMP JUMPDEST SWAP1 PUSH2 0xC67 PUSH1 0x1 SWAP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0xC53 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH32 0x5DD7B309B7BC5010D9C96159EE535A428121D6803CB847792402FFFCCAF1569A PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0xCAF PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 DUP1 PUSH1 0xE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EA3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x40 PUSH2 0xD5A PUSH2 0xD55 PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x1A71 JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xD8E PUSH2 0x17EC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xD DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0xDB8 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EA3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0xE2D PUSH2 0x1CD8 JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0xE8F JUMPI PUSH1 0x32 DUP5 GT PUSH2 0xE8F JUMPI PUSH2 0x71C PUSH32 0x81376037ED87033D6B5601A7C8806A8A7A2649525C23FE62315EB82C39C7E247 SWAP4 SWAP5 DUP3 PUSH1 0x3 SSTORE DUP4 PUSH1 0x4 SSTORE DUP1 PUSH1 0x5 SSTORE TIMESTAMP PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH4 0x1A671641 PUSH1 0xE2 SHL DUP4 MSTORE PUSH1 0x4 DUP4 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0xEB7 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x4FA PUSH2 0x1A0F JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0xEF4 PUSH2 0x1CD8 JUMP JUMPDEST PUSH2 0x4FA PUSH2 0x1978 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x40 PUSH1 0xE0 SWAP2 PUSH2 0xF1B PUSH2 0x17EC JUMP JUMPDEST DUP2 PUSH1 0xC0 DUP5 MLOAD PUSH2 0xF29 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF68 DUP3 PUSH2 0x174F JUMP JUMPDEST DUP1 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x60 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP7 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP5 PUSH1 0xFF PUSH1 0xC0 PUSH1 0xA0 DUP8 ADD SWAP7 DUP3 DUP10 AND ISZERO ISZERO DUP9 MSTORE ADD SWAP7 PUSH1 0x8 SHR AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE MLOAD PUSH1 0x20 DUP8 ADD MSTORE MLOAD PUSH1 0x40 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xF SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x80 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH2 0x10F9 PUSH2 0x1CD8 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP1 ISZERO PUSH2 0x124E JUMPI PUSH1 0x8 DUP3 DUP2 SSTORE DUP3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1243 JUMPI DUP5 SWAP2 PUSH2 0x1201 JUMPI JUMPDEST POP ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0xE8F JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EA3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP1 EXTCODESIZE ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11E1 JUMPI JUMPDEST POP PUSH32 0xD9787BF70D3926A4A81C52CBA8799D18903CE0132AAA4B7DE9E92DC893303A7F PUSH1 0x40 DUP4 DUP2 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP2 PUSH2 0x11EB SWAP2 PUSH2 0x1781 JUMP JUMPDEST PUSH2 0x4CC JUMPI DUP2 CODESIZE PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x123B JUMPI JUMPDEST DUP2 PUSH2 0x121C PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1781 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4C4 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x4C4 JUMPI CODESIZE PUSH2 0x1139 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x120F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x79F01141 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI CALLER DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 DUP4 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO DUP1 ISZERO PUSH2 0x1442 JUMPI JUMPDEST PUSH2 0x1433 JUMPI PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH1 0x2 EQ DUP1 DUP1 PUSH2 0x1426 JUMPI JUMPDEST PUSH2 0x9EE JUMPI CALLER DUP3 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x1417 JUMPI ISZERO DUP1 DUP1 PUSH2 0x140C JUMPI JUMPDEST PUSH2 0x13E5 JUMPI JUMPDEST SWAP1 PUSH1 0x5 SWAP2 PUSH2 0x13D7 JUMPI JUMPDEST DUP4 DUP2 SSTORE ADD PUSH2 0xFF00 NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x1337 DUP2 PUSH1 0x7 SLOAD PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x9AB JUMPI DUP4 SWAP2 PUSH2 0x13B8 JUMPI JUMPDEST POP ISZERO PUSH2 0x96D JUMPI PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x13D1 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x9A4 JUMPI PUSH2 0x996 DUP2 DUP4 PUSH2 0x1781 JUMP JUMPDEST CODESIZE PUSH2 0x137D JUMP JUMPDEST PUSH2 0x13E0 CALLER PUSH2 0x1D0E JUMP JUMPDEST PUSH2 0x131E JUMP JUMPDEST PUSH2 0x13F6 PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0xE SLOAD SWAP1 PUSH2 0x185B JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1315 JUMPI PUSH4 0x1958598B PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP PUSH1 0xE SLOAD ISZERO ISZERO PUSH2 0x1310 JUMP JUMPDEST PUSH4 0x8339C1AD PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0xF SLOAD AND ISZERO PUSH2 0x12EF JUMP JUMPDEST PUSH4 0x27B95979 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLER DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x12D3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x740 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x9EE JUMPI PUSH2 0x15DC JUMPI CALLER DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 DUP4 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO DUP1 ISZERO PUSH2 0x15C8 JUMPI JUMPDEST PUSH2 0x1433 JUMPI PUSH2 0x14AC CALLER PUSH2 0x1D0E JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP1 DUP2 SLOAD DUP1 ISZERO PUSH2 0x15B9 JUMPI PUSH1 0x5 SLOAD DUP1 DUP3 MUL SWAP1 DUP3 DUP3 DIV SUB PUSH2 0x15A5 JUMPI SWAP1 PUSH1 0x3 PUSH1 0x64 PUSH2 0x1511 SWAP4 DIV SWAP4 DUP7 PUSH2 0x14EA DUP7 DUP6 PUSH2 0x1953 JUMP JUMPDEST SWAP7 SSTORE ADD PUSH2 0x14F8 DUP6 DUP3 SLOAD PUSH2 0x185B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1506 DUP4 PUSH1 0x8 SLOAD PUSH2 0x185B JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x9 SLOAD PUSH2 0x185B JUMP JUMPDEST PUSH1 0x9 SSTORE DUP3 SLOAD PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 EXTCODESIZE ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1243 JUMPI PUSH2 0x1591 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xDACBDDE355BA930696A362EA6738FEB9F8BD52DFB3D81947558FD3217E23E325 PUSH1 0x40 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP4 PUSH2 0x159E SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0x1781 JUMP JUMPDEST SWAP2 CODESIZE PUSH2 0x155C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH4 0x7363943 PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 REVERT JUMPDEST POP CALLER DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO PUSH2 0x149F JUMP JUMPDEST PUSH4 0x566498C1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x40 PUSH2 0x160F PUSH2 0x160A PUSH2 0x17EC JUMP JUMPDEST PUSH2 0x187E JUMP JUMPDEST DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI POP PUSH2 0x165E PUSH1 0x40 MLOAD PUSH2 0x1640 PUSH1 0x40 DUP3 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x17A3 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x22E JUMPI POP PUSH2 0x165E PUSH1 0x40 MLOAD PUSH2 0x1685 PUSH1 0x40 DUP3 PUSH2 0x1781 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x50726F706F7274696F6E616C20546F6B656E204661726D000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x17A3 JUMP JUMPDEST POP CALLVALUE PUSH2 0x22E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x22E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x4CC JUMPI PUSH2 0x16EA PUSH2 0x1CD8 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1740 JUMPI PUSH1 0x40 PUSH32 0xE4CEC16B1A7E6B7979E923DA619A8B1E5FD0F0FB6E5C1CF647F350430EE61CA9 SWAP2 PUSH1 0x2 SLOAD SWAP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 AND OR PUSH1 0x2 SSTORE DUP3 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH4 0x1A671641 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x176B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x176B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x17D6 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1802 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x1814 JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1845 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1868 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xC0 PUSH1 0x40 MLOAD PUSH2 0x18A1 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP3 SLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 PUSH1 0x80 DUP5 ADD SWAP7 DUP8 MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO SWAP1 DUP2 ISZERO SWAP4 DUP5 SWAP2 ADD MSTORE SWAP2 PUSH2 0x194A JUMPI JUMPDEST POP PUSH2 0x1941 JUMPI PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x2 EQ PUSH2 0x1934 JUMPI PUSH1 0xE SLOAD DUP1 ISZERO PUSH2 0x192A JUMPI PUSH2 0x1923 SWAP2 MLOAD PUSH2 0x185B JUMP JUMPDEST TIMESTAMP DUP2 GT ISZERO SWAP2 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x18F5 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1868 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1802 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1802 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1A0C JUMPI PUSH1 0x40 PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP2 PUSH1 0x2 PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x19DF PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH2 0x19D5 DUP5 MLOAD DUP1 SWAP5 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1807 JUMP JUMPDEST LOG1 PUSH32 0x1E8AC57E9803840915F0284B77B570A882FB2DB69108AC8EBA578BB30FCAF152 PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1814 JUMPI DUP1 ISZERO PUSH2 0x1A0C JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 EQ PUSH2 0x722 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP3 PUSH2 0x1A6E SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x19D5 SWAP1 DUP5 SWAP1 PUSH2 0x1807 JUMP JUMPDEST LOG1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1A94 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 DUP6 ADD SWAP6 DUP4 DUP8 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO DUP1 ISZERO SWAP1 DUP2 PUSH1 0xC0 DUP7 ADD MSTORE SWAP1 PUSH2 0x1BB5 JUMPI JUMPDEST PUSH2 0x1BAA JUMPI POP SWAP1 PUSH2 0x1AFA PUSH1 0x20 SWAP3 NUMBER PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA0ACBEC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0xA4 DUP3 ADD MSTORE SWAP5 DUP6 SWAP2 PUSH1 0xC4 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x1B9E JUMPI PUSH1 0x0 SWAP4 PUSH2 0x1B6A JUMPI JUMPDEST POP MLOAD SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1B96 JUMPI JUMPDEST DUP2 PUSH2 0x1B86 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1781 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1802 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x1B64 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1B79 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP5 POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x7 SLOAD ISZERO PUSH2 0x1AE8 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1868 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x176B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1A0C JUMPI PUSH1 0x40 PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP2 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x1A6E PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH2 0x19D5 DUP5 MLOAD DUP1 SWAP5 PUSH2 0x1807 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x1CA2 JUMPI PUSH2 0x1C5B PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH2 0x185B JUMP JUMPDEST PUSH1 0x1 SHR PUSH2 0x1770 DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH2 0x1770 EQ DUP2 ISZERO OR ISZERO PUSH2 0x1868 JUMPI PUSH3 0x216AB0 DUP2 MUL SWAP2 DUP1 DUP4 DIV PUSH2 0x16D EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1868 JUMPI PUSH4 0xD0DACC0 MUL SWAP1 DUP1 DUP3 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1868 JUMPI DIV SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x1CC2 JUMPI PUSH2 0x1CC0 SWAP1 PUSH2 0x1E1E JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EA3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1CF9 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP2 DUP3 SLOAD DUP1 NUMBER GT DUP1 ISZERO SWAP1 PUSH2 0x1E14 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x1E0B JUMPI JUMPDEST PUSH2 0x1E05 JUMPI PUSH2 0x1D4E PUSH1 0x20 SWAP2 NUMBER PUSH2 0x1953 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP4 SLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA0ACBEC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP4 DUP5 SWAP2 PUSH1 0xC4 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1B9E JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1DD0 JUMPI JUMPDEST POP PUSH1 0x2 PUSH2 0x1DC9 SWAP2 ADD SWAP2 DUP3 SLOAD PUSH2 0x185B JUMP JUMPDEST SWAP1 SSTORE NUMBER SWAP1 SSTORE JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1DFD JUMPI JUMPDEST DUP2 PUSH2 0x1DEC PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1781 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1802 JUMPI MLOAD SWAP1 PUSH1 0x2 PUSH2 0x1DB9 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1DDF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP DUP2 SLOAD ISZERO PUSH2 0x1D3E JUMP JUMPDEST POP PUSH1 0x7 SLOAD ISZERO PUSH2 0x1D37 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EA3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EC3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x1E91 JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x70667358221220D1C501 0xC6 PUSH3 0x36D533 0xFC 0xB5 PUSH4 0x1C691C03 0x4B 0xEF CALLCODE 0xBF SWAP5 RETURNDATACOPY SAR DUP10 RETURNDATASIZE DUP5 PUSH11 0x2BD157DF50BE64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "1437:17264:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;;2550:24;1437:17264;2550:24;;;;;1437:17264;2550:24;;;:::i;:::-;1437:17264;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;2550:24;;;1437:17264;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;-1:-1:-1;;;;;;;;;;;1437:17264:24;;;;;;;4301:16:1;1437:17264:24;;;;4724:16:1;;:34;;;;1437:17264:24;4803:1:1;4788:16;:50;;;;1437:17264:24;4853:13:1;:30;;;;1437:17264:24;4849:91:1;;;-1:-1:-1;;1437:17264:24;;4803:1:1;1437:17264:24;-1:-1:-1;;;;;;;;;;;1437:17264:24;;4977:67:1;;1437:17264:24;6891:76:1;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6959:1;;;:::i;:::-;6891:76;;:::i;:::-;;;:::i;:::-;1437:17264:24;;-1:-1:-1;1437:17264:24;;-1:-1:-1;1437:17264:24;4613:12;4596:29;1437:17264;4803:1:1;1437:17264:24;;4636:31;1437:17264;;;4636:31;1437:17264;;;;;;;;;;;;;;;;;5353:6;1437:17264;;;;;4744:4;1437:17264;;4776:4;1437:17264;4703:159;;1437:17264;4807:1;1437:17264;4703:159;;1437:17264;;4835:15;4703:159;;1437:17264;4744:4;4688:174;1437:17264;4776:4;1437:17264;;4807:1;1437:17264;;4835:15;1437:17264;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;4803:1:1;1437:17264:24;;;4803:1:1;1437:17264:24;-1:-1:-1;;;;;1437:17264:24;;4807:1;1437:17264;;;4807:1;1437:17264;5353:6;:::i;:::-;5064:101:1;;1437:17264:24;;5064:101:1;1437:17264:24;;-1:-1:-1;;;;;;;;;;;1437:17264:24;;-1:-1:-1;;;;;;;;;;;1437:17264:24;5140:14:1;1437:17264:24;;;4803:1:1;1437:17264:24;;5140:14:1;1437:17264:24;;;-1:-1:-1;;;1437:17264:24;;;;;;;;4977:67:1;-1:-1:-1;;1437:17264:24;;;-1:-1:-1;;;;;;;;;;;1437:17264:24;4977:67:1;;;4849:91;-1:-1:-1;;;4906:23:1;;1437:17264:24;4906:23:1;;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:1;;4724:34;;;-1:-1:-1;4724:34:1;;1437:17264:24;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1437:17264:24;;;;2357:1:0;1437:17264:24;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;1437:17264:24;;;;;;;;;;;;;;;;2209:38;1437:17264;;;;;;;;;;;;;;;;;;;;;2133:34;1437:17264;;;;;;;;;;;;;;;;;;;;;;;2807:4;1437:17264;;;;;;;;;;;;;;;;15405:7;1437:17264;15352:18;;15401;;;;;;1437:17264;;;;15605:19;1437:17264;;;;;15667:23;1437:17264;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;15421:3;15457:10;;;:::i;:::-;1437:17264;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;15445:11;1437:17264;;;;;15445:33;;1437:17264;;;;;15441:82;;15421:3;1437:17264;;15386:13;;15441:82;15499:8;;1437:17264;15499:8;;:::i;:::-;15441:82;;;;;1437:17264;;;;;;;;;;;;;2303:62:0;;:::i;:::-;1437:17264:24;;;;;;;;;;5486:29;5482:66;;5632:24;5619:37;5615:76;;10006:24;;;10130:3;10114:7;1437:17264;10110:18;;;;;10169:10;;;:::i;:::-;1437:17264;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;10198:11;1437:17264;;;;;10198:31;;1437:17264;;;;;10194:345;;10130:3;;1437:17264;;10095:13;;10194:345;10445:45;1437:17264;;;;10466:23;1437:17264;10509:14;1437:17264;;;10198:11;1437:17264;;5632:24;1437:17264;;;10271:36;1437:17264;10341:8;;;;:::i;:::-;1437:17264;;10198:11;1437:17264;;5632:24;1437:17264;;;10390:36;1437:17264;10466:23;:::i;:::-;10445:45;;:::i;:::-;10509:14;;:::i;:::-;10194:345;;;;10110:18;;10575:67;10110:18;10575:67;1437:17264;;10626:15;;;;10575:67;;1437:17264;;;;;;;;;;;;;;;;;;10575:67;;;;1437:17264;;5615:76;-1:-1:-1;;;5665:26:24;;1437:17264;;5665:26;5482:66;-1:-1:-1;;;5524:24:24;;1437:17264;5524:24;;1437:17264;-1:-1:-1;;;1437:17264:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;1437:17264:24;;;14211:35;1437:17264;;;;;14211:35;1437:17264;;;;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;;;;;;;;;;;5486:29;5482:66;;5632:24;5619:37;5615:76;;2807:4;6374:21;;6370:87;;2757:5;6471:7;1437:17264;6471:29;;:67;;;1437:17264;6467:137;;1437:17264;;;;-1:-1:-1;;;6854:49:24;;6639:10;1437:17264;6854:49;;1437:17264;6889:4;1437:17264;;;;;;;;;;;;;;;6854:49;;1437:17264;;;;-1:-1:-1;;;;;1437:17264:24;6854:49;;;;;;;;;;;1437:17264;6853:50;;6849:117;;6639:10;1437:17264;;7113:11;1437:17264;;;;;7156:16;;;1437:17264;;;;;7155:17;7151:239;;1437:17264;7402:24;1437:17264;;;7402:24;:::i;:::-;1437:17264;;;;;;;;;;;7471:29;1437:17264;7471:29;1437:17264;7471:29;:::i;:::-;;1437:17264;;;;;;7732:15;1437:17264;;;;7710:38;1437:17264;6639:10;7710:38;;1437:17264;;7151:239;6471:7;1437:17264;6639:10;1437:17264;;11483:11;1437:17264;;;;;;;;;;;;;;;;;;6471:7;1437:17264;;:::i;:::-;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;;;6639:10;1437:17264;;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;;7284:15;1437:17264;7258:23;;1437:17264;7334:12;7314:17;;;1437:17264;7151:239;;1437:17264;-1:-1:-1;;;1437:17264:24;;;;;;;;6849:117;-1:-1:-1;;;6927:27:24;;1437:17264;8928:27;6927;6854:49;;;;1437:17264;6854:49;1437:17264;6854:49;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1437:17264;;;;;;;;;6467:137;-1:-1:-1;;;6562:30:24;;1437:17264;6562:30;;6471:67;6517:10;;1437:17264;;6505:11;1437:17264;;;6505:33;1437:17264;;;6505:33;1437:17264;;6504:34;6471:67;;6370:87;-1:-1:-1;;;6419:26:24;;1437:17264;8241:26;6419;5615:76;-1:-1:-1;;;5665:26:24;;1437:17264;5665:26;;5482:66;-1:-1:-1;;;5524:24:24;;1437:17264;5524:24;;1437:17264;-1:-1:-1;;;1437:17264:24;;;;;;;;;;;;;;;;;;;;;;2254:29;1437:17264;;;;;;;;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;:::i;:::-;;;;2581:45;1437:17264;;;;;;2581:45;;;;1437:17264;2581:45;;;;1437:17264;2581:45;;;1437:17264;2581:45;;1437:17264;2581:45;;1437:17264;2581:45;;1437:17264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;2357:1;;:::i;1437:17264:24:-;;;;;;;;;;;;;18146:7;1437:17264;18043:23;;18142:18;;;;;;1437:17264;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;1437:17264:24;;;;18400:17;18443:13;;18458:18;;;;;;1437:17264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;-1:-1:-1;1437:17264:24;;;;;;;;;;;;;18478:3;18514:10;;;:::i;:::-;1437:17264;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;18186:11;1437:17264;;;;;18186:33;18502;1437:17264;;;;;18498:137;;18478:3;1437:17264;;18443:13;;18498:137;18583:10;;;;:::i;:::-;1437:17264;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;18612:7;1437:17264;;;;18186:33;1437:17264;;;;;18612:7;:::i;:::-;18498:137;;;;;1437:17264;-1:-1:-1;;;1437:17264:24;;;;;;;;18162:3;18198:10;;;:::i;:::-;1437:17264;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;18186:11;1437:17264;;;;;18186:33;;1437:17264;;;;;18182:87;;18162:3;1437:17264;;18127:13;;18182:87;18240:13;;1437:17264;18240:13;;:::i;:::-;18182:87;;;;;1437:17264;;;;;;;-1:-1:-1;;1437:17264:24;;;;13999:40;1437:17264;;;2303:62:0;;:::i;:::-;13939:10:24;1437:17264;;;13939:10;1437:17264;;;;;;;;;;13999:40;1437:17264;;;;;;;;;;;;;;;;;;2757:5;1437:17264;;;;;;;;;;;;;;;;;2174:28;1437:17264;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1437:17264:24;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;:::i;:::-;;;;2633:46;1437:17264;;;;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;1437:17264:24;;-1:-1:-1;;;;;;1437:17264:24;;;;;;;-1:-1:-1;;;;;1437:17264:24;3975:40:0;1437:17264:24;;3975:40:0;1437:17264:24;;;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;;;;;;2303:62:0;;:::i;:::-;13360:11:24;;;13356:57;;2860:2;13428:29;;13424:75;;13719:44;;1437:17264;;;13520:12;1437:17264;;;;;13604:23;1437:17264;13678:15;13652:23;1437:17264;;;13719:44;;;;1437:17264;;;;;;;;;;;;;;;;;;13424:75;-1:-1:-1;;;13466:33:24;;1437:17264;12919:33;13466;1437:17264;;;;;;;;;;;;;2303:62:0;;:::i;:::-;2357:1;;:::i;1437:17264:24:-;;;;;;;;;;;;;;;;2860:2;1437:17264;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;2357:1;;:::i;1437:17264:24:-;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15002:11;1437:17264;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;;;;;;;;;;;;;;1237:66:3;1437:17264:24;;;;;;;;;;;;;;;;;;;;;;;;;2901:36;1437:17264;;;;;;;;;;;;;;;;;;;;;;;;2094:32;1437:17264;;;2094:32;1437:17264;2094:32;1437:17264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;14392:13:24;1437:17264;14392:18;;14388:50;;14392:13;1437:17264;;;;;;;-1:-1:-1;;;14597:17:24;;1437:17264;;-1:-1:-1;;;;;1437:17264:24;;14597:17;1437:17264;;;;14597:17;;;;;;;;;;;1437:17264;-1:-1:-1;14626:4:24;-1:-1:-1;;;;;1437:17264:24;;;14597:34;14593:80;;-1:-1:-1;;;;;;;;;;;1437:17264:24;;;-1:-1:-1;;;;;1437:17264:24;;;;14694:31;;;;;1437:17264;;-1:-1:-1;;;14694:31:24;;-1:-1:-1;;;;;1437:17264:24;;;;;14694:31;;1437:17264;;;;;;;;;;;;;;;;;14694:31;;;;;;;;1437:17264;;14741:38;1437:17264;;;;;;;14763:15;14597:17;1437:17264;;;14741:38;1437:17264;;14694:31;;;;;:::i;:::-;1437:17264;;14694:31;;;;;1437:17264;;;;;;;;;14597:17;;;;;;;;;;;;;;;;;:::i;:::-;;;1437:17264;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;14597:17;;;;;;-1:-1:-1;14597:17:24;;;1437:17264;;;;;;;;;14388:50;-1:-1:-1;;;14419:19:24;;1437:17264;14419:19;;1437:17264;;;;;;;;;;;;;1859:37;1437:17264;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;;;;;;;;;;;;;;;2869:25;1437:17264;;;;;;;;;;;;;;;;;;;;5811:10;1437:17264;;5799:11;1437:17264;;;5799:33;1437:17264;;;5799:33;1437:17264;;;;5798:34;1437:17264;;5798:74;;1437:17264;5794:137;;1437:17264;;;;;;;;;;7978:24;7965:37;;;:66;;1437:17264;7961:132;;5811:10;1437:17264;;5799:11;1437:17264;;;;;;;8220:12;;;8216:51;;8358:37;;;:55;;1437:17264;8354:213;;1437:17264;;5799:33;1437:17264;8647:96;;1437:17264;;;;8784:16;1437:17264;;;;;;;8819:30;1437:17264;8819:30;1437:17264;8819:30;:::i;:::-;;1437:17264;;;;;-1:-1:-1;;;8867:37:24;;5811:10;1437:17264;8867:37;;1437:17264;;;;;;;;;;;;;;;;5811:10;;-1:-1:-1;;;;;1437:17264:24;8867:37;;;;;;;;;;;1437:17264;8866:38;;8862:105;;1437:17264;;;;;9022:15;1437:17264;;;;8992:46;1437:17264;5811:10;8992:46;;1437:17264;;8867:37;;;;1437:17264;8867:37;1437:17264;8867:37;;;;;;;:::i;:::-;;;;8647:96;8720:10;5811;8720;:::i;:::-;8647:96;;8354:213;8452:36;1437:17264;8452:23;;1437:17264;8478:10;1437:17264;8452:36;;:::i;:::-;8434:15;:54;8430:126;8354:213;8430:126;-1:-1:-1;;;8516:24:24;;1437:17264;8516:24;;8358:55;1437:17264;8399:10;1437:17264;8399:14;;8358:55;;8216:51;-1:-1:-1;;;8241:26:24;;1437:17264;8241:26;;7965:66;1437:17264;;8007:24;1437:17264;;8006:25;7965:66;;5794:137;-1:-1:-1;;;5896:23:24;;1437:17264;;5896:23;5798:74;5811:10;;1437:17264;;5799:11;1437:17264;;;;;;5836:36;5798:74;;1437:17264;;;;;;;;;;;;;;;;;;;;;;;5632:24;5619:37;;5615:76;;5482:66;;5811:10;1437:17264;;5799:11;1437:17264;;;5799:33;1437:17264;;;5799:33;1437:17264;;;;5798:34;1437:17264;;5798:74;;1437:17264;5794:137;;9259:10;5811;9259;:::i;:::-;5811;1437:17264;;5799:11;1437:17264;;;;;5632:24;9356:21;;1437:17264;;;9394:11;;9390:46;;5799:33;1437:17264;;;;;;;;;;;;;9508:3;9677:33;1437:17264;;9542:12;;;;;;:::i;:::-;1437:17264;;9603:19;:32;1437:17264;;;9603:32;:::i;:::-;1437:17264;;9646:20;1437:17264;;;9646:20;:::i;:::-;1437:17264;;9677:33;1437:17264;9677:33;:::i;:::-;;1437:17264;;;;;-1:-1:-1;;;;;1437:17264:24;9723:37;;;;;1437:17264;;-1:-1:-1;;;9723:37:24;;5811:10;1437:17264;9723:37;;1437:17264;;;;;;;;;;;;;;;;;;9723:37;;;;;;;;1437:17264;;;;;;;;;;;9776:42;1437:17264;5811:10;9776:42;;1437:17264;;9723:37;;;;;;;;:::i;:::-;;;;;1437:17264;-1:-1:-1;;;1437:17264:24;;;;;;;;9390:46;-1:-1:-1;;;9414:22:24;;1437:17264;9414:22;;5798:74;5811:10;;1437:17264;;5799:11;1437:17264;;;;;;5836:36;5798:74;;5482:66;-1:-1:-1;;;5524:24:24;;1437:17264;;5524:24;1437:17264;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;1437:17264:24;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1437:17264:24;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;2303:62:0;;:::i;:::-;12875:35:24;;12871:81;;1437:17264;13074:51;1437:17264;13003:14;1437:17264;;;-1:-1:-1;;;;;1437:17264:24;;;;;13003:14;1437:17264;;;;;;;;;;;;;;;;13074:51;1437:17264;;12871:81;-1:-1:-1;;;12919:33:24;;1437:17264;12919:33;;1437:17264;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1437:17264:24;;;;;-1:-1:-1;1437:17264:24;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;1437:17264:24;;;;;-1:-1:-1;1437:17264:24;;18146:7;1437:17264;;;;;;18146:7;-1:-1:-1;1437:17264:24;;-1:-1:-1;1437:17264:24;;;-1:-1:-1;1437:17264:24;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;17228:632;1437:17264;;;;;;-1:-1:-1;1437:17264:24;17361:11;1437:17264;;;-1:-1:-1;1437:17264:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17403:40;;;17228:632;17399:90;;;1437:17264;-1:-1:-1;1437:17264:24;;;;;;;;;17513:37;17509:106;;17639:10;1437:17264;17639:15;;17635:64;;17745:36;1437:17264;;17745:36;:::i;:::-;17800:15;:34;-1:-1:-1;17800:34:24;;17228:632::o;17635:64::-;17671:16;;1437:17264;17671:16;-1:-1:-1;17671:16:24;:::o;17509:106::-;1437:17264;;17575:24;1437:17264;;17567:36;-1:-1:-1;17567:36:24;:::o;17399:90::-;17460:17;-1:-1:-1;17460:17:24;-1:-1:-1;17460:17:24;:::o;17403:40::-;17424:19;;;17403:40;;;1437:17264;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;12390:313::-;1437:17264;12457:9;1437:17264;;;;;;;;12470:24;12457:37;;12453:50;;1437:17264;12616:33;1437:17264;12470:24;1437:17264;;12457:9;1437:17264;;;12457:9;1437:17264;;;12457:9;1437:17264;;;;;;;;:::i;:::-;;;;;;:::i;:::-;12616:33;12665:30;1437:17264;;;12679:15;1437:17264;;12665:30;12390:313::o;12453:50::-;12496:7;:::o;11987:335::-;1437:17264;12051:9;1437:17264;;;;;;;;12051:29;;12047:42;;12051:9;12116:24;12103:37;;12099:76;;1437:17264;;-1:-1:-1;;1437:17264:24;;;;;;12281:33;;1437:17264;;-1:-1:-1;;1437:17264:24;;;;;:::i;:::-;12281:33;11987:335::o;15839:698::-;;1437:17264;;;;;;;-1:-1:-1;1437:17264:24;16010:11;1437:17264;;;-1:-1:-1;1437:17264:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16042:45;;;15839:698;16038:111;;16184:12;;:32;1437:17264;16184:12;;:32;:::i;:::-;1437:17264;;;;16348:19;1437:17264;;;;;;;;-1:-1:-1;;;16247:228:24;;;;;1437:17264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;;;;;;;;16247:228;;;;;;;-1:-1:-1;16247:228:24;;;15839:698;1437:17264;;16488:41;15839:698;:::o;16247:228::-;;;;1437:17264;16247:228;;1437:17264;16247:228;;;;;;1437:17264;16247:228;;;:::i;:::-;;;1437:17264;;;;;16247:228;;;;;;;-1:-1:-1;16247:228:24;;;1437:17264;;;-1:-1:-1;1437:17264:24;;;;;16038:111;16104:33;-1:-1:-1;;;16104:33:24;-1:-1:-1;;;16104:33:24:o;16042:45::-;1437:17264;16063:19;1437:17264;16063:24;16042:45;;1437:17264;-1:-1:-1;;1437:17264:24;;;;;;;:::o;:::-;;;;;;;;;;;:::o;11695:237::-;1437:17264;11758:9;1437:17264;;;;;;;;11771:16;11758:29;;11754:42;;1437:17264;11891:33;1437:17264;11771:16;1437:17264;;11758:9;1437:17264;;;11758:9;1437:17264;;;11758:9;1437:17264;;;;;;;;:::i;16635:517::-;16709:19;1437:17264;16709:24;;16705:38;;16850:51;:12;1437:17264;16877:24;1437:17264;16850:51;;:::i;:::-;1437:17264;;16960:4;1437:17264;;;;;;16960:4;1437:17264;;;;;;;;;;;;;;17014:3;1437:17264;;;;;;;;;;;;;17118:3;1437:17264;;;;;;;;16635:517;:::o;16705:38::-;16735:8;1437:17264;16735:8;:::o;3405:215:0:-;-1:-1:-1;;;;;1437:17264:24;;3489:22:0;3485:91;;3604:8;;;:::i;:::-;3405:215::o;3485:91::-;3534:31;;;3509:1;3534:31;3509:1;3534:31;1437:17264:24;;3509:1:0;3534:31;2658:162;-1:-1:-1;;;;;;;;;;;1437:17264:24;-1:-1:-1;;;;;1437:17264:24;966:10:2;2717:23:0;2713:101;;2658:162::o;2713:101::-;2763:40;;;-1:-1:-1;2763:40:0;966:10:2;2763:40:0;1437:17264:24;;-1:-1:-1;2763:40:0;10740:682:24;1437:17264;;;;;;;-1:-1:-1;1437:17264:24;10829:11;1437:17264;;;-1:-1:-1;1437:17264:24;10894:17;;;;1437:17264;;;10878:12;;:33;;;:61;;;10740:682;10878:84;;;;10740:682;10874:123;;11032:32;1437:17264;10878:12;;11032:32;:::i;:::-;11092:14;1437:17264;;;11193:19;1437:17264;11227:12;1437:17264;11266:24;1437:17264;;;;-1:-1:-1;;;11092:235:24;;;;;1437:17264;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1437:17264:24;;;;;;;;;;;;;;;;11092:235;;;;;;;-1:-1:-1;11092:235:24;;;10740:682;11340:21;11092:14;11340:31;:21;;1437:17264;;;11340:31;:::i;:::-;1437:17264;;10878:12;1437:17264;;10740:682::o;11092:235::-;;;;1437:17264;11092:235;;1437:17264;11092:235;;;;;;1437:17264;11092:235;;;:::i;:::-;;;1437:17264;;;;;;11092:14;:235;;;;;-1:-1:-1;11092:235:24;;10874:123;10979:7;;;;:::o;10878:84::-;1437:17264;;;10943:19;10878:84;;:61;1437:17264;10915:19;1437:17264;10915:24;10878:61;;3774:248:0;-1:-1:-1;;;;;;;;;;;1437:17264:24;;-1:-1:-1;;;;;1437:17264:24;;;-1:-1:-1;;;;;;1437:17264:24;;;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3774:248::o;7082:141:1:-;1437:17264:24;-1:-1:-1;;;;;;;;;;;1437:17264:24;;;;7148:18:1;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:1;;-1:-1:-1;7189:17:1"
            },
            "methodIdentifiers": {
              "MAX_FEE_PERCENT()": "67d81740",
              "MAX_STAKERS()": "910956aa",
              "MIN_DEPOSIT()": "e1e158a5",
              "canWithdraw(address)": "19262d30",
              "claimRewards()": "372500ab",
              "collectedFees()": "9003adfe",
              "dappToken()": "5eb186f8",
              "deposit(uint256)": "b6b55f25",
              "distributeRewardsAll()": "db03e227",
              "emergencyStop()": "63a599a4",
              "emergencyWithdrawEnabled()": "5747e69f",
              "farmStartBlock()": "b507d70f",
              "farmState()": "ce2040c8",
              "getActiveStakers()": "9fb82db9",
              "getContractStats()": "dfe6b5d6",
              "getEstimatedAPY()": "ccaad55d",
              "getUserInfo(address)": "6386c1c7",
              "getVersion()": "0d8e6e2c",
              "initialize(address,address,address,address)": "f8c8765e",
              "lockPeriod()": "3fd8b02f",
              "lpToken()": "5fcbd285",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "pauseFarm()": "a113601b",
              "paused()": "5c975abb",
              "renounceOwnership()": "715018a6",
              "resumeFarm()": "6c7ecb78",
              "rewardConfig()": "4e94c285",
              "rewardStrategy()": "44c4aea9",
              "setEmergencyWithdrawEnabled(bool)": "c74ad493",
              "simulateRewards(address)": "7bbfffa5",
              "stakerIndex(address)": "78d60a5b",
              "stakers(uint256)": "fd5e6dd1",
              "stakersData(address)": "acb422c5",
              "totalRewardsDistributed()": "ee172546",
              "totalStakingBalance()": "e766c835",
              "transferOwnership(address)": "f2fde38b",
              "updateLockPeriod(uint256)": "91db7b0d",
              "updateRewardConfig(uint256,uint256,uint256)": "6f3ba889",
              "updateRewardStrategy(address)": "06309e4b",
              "withdraw()": "3ccfd60b",
              "withdrawFees()": "476343ee"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__EmergencyStop\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__FarmStopped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__InvalidConfiguration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__MaxStakersReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__NoFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__NoRewards\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__NotStaking\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__OnlyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__StillLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EmergencyStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"LockPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RewardConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum FarmState\",\"name\":\"oldState\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum FarmState\",\"name\":\"newState\",\"type\":\"uint8\"}],\"name\":\"StateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"StrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKERS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_DEPOSIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canWithdrawNow\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dappToken\",\"outputs\":[{\"internalType\":\"contract DappToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeRewardsAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyStop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmStartBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmState\",\"outputs\":[{\"internalType\":\"enum FarmState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"activeStakersList\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStakers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"enum FarmState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"activeStakers\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEstimatedAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasStaked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isStaking\",\"type\":\"bool\"}],\"internalType\":\"struct TokenFarm.Staker\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dappToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract LPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardStrategy\",\"outputs\":[{\"internalType\":\"contract IRewardStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setEmergencyWithdrawEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"simulateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakersData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasStaked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isStaking\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardsDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPeriod\",\"type\":\"uint256\"}],\"name\":\"updateLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"updateRewardConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRewardStrategy\",\"name\":\"_newStrategy\",\"type\":\"address\"}],\"name\":\"updateRewardStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Mauricio R Ferreyra\",\"details\":\"Contrato de farming de tokens con sistema de recompensas configurable\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"canWithdraw(address)\":{\"details\":\"Verifica si un usuario puede retirar\"},\"claimRewards()\":{\"details\":\"Reclama las recompensas pendientes\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"deposit(uint256)\":{\"details\":\"Deposita tokens LP para comenzar a farmear\",\"params\":{\"_amount\":\"Cantidad de tokens LP a depositar\"}},\"distributeRewardsAll()\":{\"details\":\"Distribuye recompensas a todos los stakers activos\"},\"emergencyStop()\":{\"details\":\"Activa el modo de emergencia\"},\"getActiveStakers()\":{\"details\":\"Obtiene la lista de todos los stakers activos\"},\"getContractStats()\":{\"details\":\"Obtiene estad\\u00edsticas del contrato\"},\"getEstimatedAPY()\":{\"details\":\"Calcula la APY estimada basada en la configuraci\\u00f3n actual\"},\"getUserInfo(address)\":{\"details\":\"Obtiene informaci\\u00f3n completa de un usuario\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pauseFarm()\":{\"details\":\"Pausa el farm (no permite nuevos dep\\u00f3sitos ni claims)\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resumeFarm()\":{\"details\":\"Reanuda el farm\"},\"setEmergencyWithdrawEnabled(bool)\":{\"details\":\"Habilita/deshabilita retiros de emergencia\"},\"simulateRewards(address)\":{\"details\":\"Simula las recompensas actuales y proyectadas\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateLockPeriod(uint256)\":{\"details\":\"Actualiza el per\\u00edodo de bloqueo\"},\"updateRewardConfig(uint256,uint256,uint256)\":{\"details\":\"Actualiza la configuraci\\u00f3n de recompensas\"},\"updateRewardStrategy(address)\":{\"details\":\"Actualiza la estrategia de recompensas\"},\"withdraw()\":{\"details\":\"Retira todos los tokens depositados\"},\"withdrawFees()\":{\"details\":\"Retira las comisiones acumuladas\"}},\"title\":\"TokenFarm\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenFarm.sol\":\"TokenFarm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DappToken.sol\":{\"keccak256\":\"0xe618a35cf7a07450a3d97d5132d7874782f3f3fa68debf02d5fb7cf0469a0bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7651149cdb34ffe25489dc41efe0699adaaac548b17d3dff6afd22824959bee3\",\"dweb:/ipfs/QmeLJuYwgb4eW38TVYfntgSzBsBPtpYd4NGAxCnS187SBj\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0xb47f69e847eccd98b83f058c327c3bea97cc6cefc308150de83697845feea545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0126f3a7ed94ec90cebb25c8d8df0ba373f62663596646eae79d599f2bea002\",\"dweb:/ipfs/QmZxzHS3yCMikp7cMNFMVCADWZXi9vx2M46xvViSmXddTB\"]},\"contracts/TokenFarm.sol\":{\"keccak256\":\"0xd204c217c0989ec1f96b47263b3a128c601911fa446c087c637b49577efdbc89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faeae6b662ff179f321a18b95579e0a8c8ce6b334e9c618f8a66388e75489b34\",\"dweb:/ipfs/QmcFTg1zG3TwnduwjechAW1pfnafYcg7eNpLAXVBStsx2c\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 2921,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "farmState",
                "offset": 0,
                "slot": "0",
                "type": "t_enum(FarmState)2821"
              },
              {
                "astId": 2924,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "dappToken",
                "offset": 1,
                "slot": "0",
                "type": "t_contract(DappToken)2630"
              },
              {
                "astId": 2927,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "lpToken",
                "offset": 0,
                "slot": "1",
                "type": "t_contract(LPToken)2669"
              },
              {
                "astId": 2930,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "rewardStrategy",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(IRewardStrategy)2839"
              },
              {
                "astId": 2942,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "rewardConfig",
                "offset": 0,
                "slot": "3",
                "type": "t_struct(RewardConfig)2939_storage"
              },
              {
                "astId": 2944,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "totalStakingBalance",
                "offset": 0,
                "slot": "7",
                "type": "t_uint256"
              },
              {
                "astId": 2946,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "collectedFees",
                "offset": 0,
                "slot": "8",
                "type": "t_uint256"
              },
              {
                "astId": 2948,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "totalRewardsDistributed",
                "offset": 0,
                "slot": "9",
                "type": "t_uint256"
              },
              {
                "astId": 2950,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "farmStartBlock",
                "offset": 0,
                "slot": "10",
                "type": "t_uint256"
              },
              {
                "astId": 2968,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "stakers",
                "offset": 0,
                "slot": "11",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 2973,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "stakersData",
                "offset": 0,
                "slot": "12",
                "type": "t_mapping(t_address,t_struct(Staker)2965_storage)"
              },
              {
                "astId": 2977,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "stakerIndex",
                "offset": 0,
                "slot": "13",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 2988,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "lockPeriod",
                "offset": 0,
                "slot": "14",
                "type": "t_uint256"
              },
              {
                "astId": 2990,
                "contract": "contracts/TokenFarm.sol:TokenFarm",
                "label": "emergencyWithdrawEnabled",
                "offset": 0,
                "slot": "15",
                "type": "t_bool"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_contract(DappToken)2630": {
                "encoding": "inplace",
                "label": "contract DappToken",
                "numberOfBytes": "20"
              },
              "t_contract(IRewardStrategy)2839": {
                "encoding": "inplace",
                "label": "contract IRewardStrategy",
                "numberOfBytes": "20"
              },
              "t_contract(LPToken)2669": {
                "encoding": "inplace",
                "label": "contract LPToken",
                "numberOfBytes": "20"
              },
              "t_enum(FarmState)2821": {
                "encoding": "inplace",
                "label": "enum FarmState",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_struct(Staker)2965_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct TokenFarm.Staker)",
                "numberOfBytes": "32",
                "value": "t_struct(Staker)2965_storage"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_struct(RewardConfig)2939_storage": {
                "encoding": "inplace",
                "label": "struct TokenFarm.RewardConfig",
                "members": [
                  {
                    "astId": 2932,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "minPerBlock",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2934,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "maxPerBlock",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2936,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "feePercent",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2938,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "lastUpdate",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "128"
              },
              "t_struct(Staker)2965_storage": {
                "encoding": "inplace",
                "label": "struct TokenFarm.Staker",
                "members": [
                  {
                    "astId": 2952,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "balance",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2954,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "checkpoint",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2956,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "pendingRewards",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2958,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "totalClaimed",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2960,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "depositTimestamp",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2962,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "hasStaked",
                    "offset": 0,
                    "slot": "5",
                    "type": "t_bool"
                  },
                  {
                    "astId": 2964,
                    "contract": "contracts/TokenFarm.sol:TokenFarm",
                    "label": "isStaking",
                    "offset": 1,
                    "slot": "5",
                    "type": "t_bool"
                  }
                ],
                "numberOfBytes": "192"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          }
        }
      },
      "contracts/TokenFarmV2.sol": {
        "ITokenFarm": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "deposit(uint256)": "b6b55f25"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenFarmV2.sol\":\"ITokenFarm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DappToken.sol\":{\"keccak256\":\"0xe618a35cf7a07450a3d97d5132d7874782f3f3fa68debf02d5fb7cf0469a0bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7651149cdb34ffe25489dc41efe0699adaaac548b17d3dff6afd22824959bee3\",\"dweb:/ipfs/QmeLJuYwgb4eW38TVYfntgSzBsBPtpYd4NGAxCnS187SBj\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0xb47f69e847eccd98b83f058c327c3bea97cc6cefc308150de83697845feea545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0126f3a7ed94ec90cebb25c8d8df0ba373f62663596646eae79d599f2bea002\",\"dweb:/ipfs/QmZxzHS3yCMikp7cMNFMVCADWZXi9vx2M46xvViSmXddTB\"]},\"contracts/TokenFarm.sol\":{\"keccak256\":\"0xd204c217c0989ec1f96b47263b3a128c601911fa446c087c637b49577efdbc89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faeae6b662ff179f321a18b95579e0a8c8ce6b334e9c618f8a66388e75489b34\",\"dweb:/ipfs/QmcFTg1zG3TwnduwjechAW1pfnafYcg7eNpLAXVBStsx2c\"]},\"contracts/TokenFarmV2.sol\":{\"keccak256\":\"0x578c3469a368f5c7a48c38093bec55488f629045f42c94da1a5985d9e361f3d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dbfa5f1cd2df140f56d6f25bfd7deda0a6017eed240751c5eca0f5a3166836f\",\"dweb:/ipfs/QmQ6vf1VXEWZ4xugCA2PmVYB7uh4X8HPuaqosVRCj6d2Ye\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        },
        "TokenFarmV2": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidFeeValue",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInitialization",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotInitializing",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__EmergencyStop",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__FarmStopped",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__InvalidAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__InvalidConfiguration",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__MaxStakersReached",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__NoFees",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__NoRewards",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__NotStaking",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__OnlyOwner",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__StillLocked",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "TokenFarm__TransferFailed",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "EmergencyStop",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newCollector",
                  "type": "address"
                }
              ],
              "name": "FeeCollectorUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newWithdrawFee",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newClaimFee",
                  "type": "uint256"
                }
              ],
              "name": "FeesUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "FeesWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "collector",
                  "type": "address"
                }
              ],
              "name": "FeesWithdrawnV2",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "version",
                  "type": "uint64"
                }
              ],
              "name": "Initialized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "oldPeriod",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newPeriod",
                  "type": "uint256"
                }
              ],
              "name": "LockPeriodUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newLockPeriod",
                  "type": "uint256"
                }
              ],
              "name": "LockPeriodUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "collector",
                  "type": "address"
                }
              ],
              "name": "LpFeesWithdrawn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "name": "RewardConfigUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newReward",
                  "type": "uint256"
                }
              ],
              "name": "RewardPerBlockUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "netAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "name": "RewardsClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                }
              ],
              "name": "RewardsClaimedV2",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalUsers",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "RewardsDistributed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "enum FarmState",
                  "name": "oldState",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "enum FarmState",
                  "name": "newState",
                  "type": "uint8"
                }
              ],
              "name": "StateChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "oldStrategy",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "newStrategy",
                  "type": "address"
                }
              ],
              "name": "StrategyUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "Withdraw",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "BASIS_POINTS",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_CLAIM_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_FEE_PERCENT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_STAKERS",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MAX_WITHDRAW_FEE",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MIN_DEPOSIT",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "canWithdraw",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "canWithdrawNow",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "unlockTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimRewards",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collectedDappFees",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collectedFees",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collectedLpFees",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dappToken",
              "outputs": [
                {
                  "internalType": "contract DappToken",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "deposit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "distributeRewardsAll",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyStop",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "emergencyWithdrawEnabled",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "farmStartBlock",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "farmState",
              "outputs": [
                {
                  "internalType": "enum FarmState",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeCollector",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getActiveStakers",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "activeStakersList",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getContractStats",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalStakers",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalStaked",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalFees",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalRewards",
                  "type": "uint256"
                },
                {
                  "internalType": "enum FarmState",
                  "name": "state",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "activeStakers",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getEstimatedAPY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFeeInfo",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_withdrawFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_claimFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_collectedLpFees",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_collectedDappFees",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_feeCollector",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "userAddr",
                  "type": "address"
                }
              ],
              "name": "getUserInfo",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "balance",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "checkpoint",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "pendingRewards",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "totalClaimed",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "depositTimestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "hasStaked",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isStaking",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct TokenFarm.Staker",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getVersion",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_dappToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_lpToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_strategy",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_withdrawFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_claimFee",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "_feeCollector",
                  "type": "address"
                }
              ],
              "name": "initializeV2",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lockPeriod",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lpToken",
              "outputs": [
                {
                  "internalType": "contract LPToken",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pauseFarm",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "resumeFarm",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardConfig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "minPerBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxPerBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feePercent",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastUpdate",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardPerBlock",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardStrategy",
              "outputs": [
                {
                  "internalType": "contract IRewardStrategy",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "_enabled",
                  "type": "bool"
                }
              ],
              "name": "setEmergencyWithdrawEnabled",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_lockPeriod",
                  "type": "uint256"
                }
              ],
              "name": "setLockPeriod",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_rewardPerBlock",
                  "type": "uint256"
                }
              ],
              "name": "setRewardPerBlock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                }
              ],
              "name": "simulateRewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "pendingRewards",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "projectedRewards",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "stakerIndex",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "stakers",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "stakersData",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "checkpoint",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pendingRewards",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "depositTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "hasStaked",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isStaking",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalRewardsDistributed",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalStakingBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newCollector",
                  "type": "address"
                }
              ],
              "name": "updateFeeCollector",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_withdrawFee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_claimFee",
                  "type": "uint256"
                }
              ],
              "name": "updateFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_newPeriod",
                  "type": "uint256"
                }
              ],
              "name": "updateLockPeriod",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_max",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_feePercent",
                  "type": "uint256"
                }
              ],
              "name": "updateRewardConfig",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IRewardStrategy",
                  "name": "_newStrategy",
                  "type": "address"
                }
              ],
              "name": "updateRewardStrategy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdrawLpFees",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "fun_disableInitializers": {
                  "entryPoint": 40,
                  "id": 416,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234602357600e6028565b60146028565b60405161266390816100e58239f35b600080fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c1660d3576002600160401b03196001600160401b03821601606e5750565b6001600160401b0319166001600160401b039081177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1565b63f92ee8a960e01b60005260046000fdfe608080604052600436101561001357600080fd5b60003560e01c90816202eab714611d315750806306309e4b14611cae57806306fdde0314611c565780630d8e6e2c14611c125780631568b16914611bf457806319262d3014611bc35780631f51bf0c14611aab57806325b500eb146119f157806326712743146119d3578063372500ab146117b35780633ccfd60b1461149a5780633fd8b02f1461147c57806344c4aea91461145357806346800f751461082e578063476343ee146113745780634e94c2851461133d5780635747e69f1461131a5780635c975abb146112d85780635eb186f8146112ab5780635fcbd285146112825780636386c1c71461118a57806363a599a41461116957806367d817401461114d5780636c7ecb781461112c5780636db79437146110975780636f3ba88914610ffe578063715018a614610f94578063779972da14610f5c57806378d60a5b14610f225780637bbfffa514610ef35780638ae39cac14610ed55780638da5cb5b14610e9f5780639003adfe14610e81578063910956aa1461060457806391db7b0d14610e2d57806399d32fc414610e0f5780639fb82db914610c7e578063a113601b14610c5d578063acb422c514610bda578063b507d70f14610bbc578063b6b55f25146109aa578063bb872b4a14610989578063c415b95c14610960578063c74ad49314610927578063ccaad55d14610904578063ce2040c8146108dc578063d2c35ce814610833578063d4b0de2f1461082e578063db03e227146106d9578063dfe6b5d61461062b578063e1e158a514610609578063e1f1c4a714610604578063e766c835146105e6578063e941fa78146105c8578063ee172546146105aa578063f2fde38b1461057f578063f8c8765e146102e35763fd5e6dd11461029c57600080fd5b346102de5760203660031901126102de57600435600b548110156102de576102c5602091611e73565b905460405160039290921b1c6001600160a01b03168152f35b600080fd5b346102de5760803660031901126102de576102fc611e00565b6024356001600160a01b03811691908290036102de5761031a611e16565b606435906001600160a01b03821682036102de5760008051602061260e833981519152549367ffffffffffffffff60ff8660401c1615951680159081610577575b600114908161056d575b159081610564575b506105535784600167ffffffffffffffff1960008051602061260e83398151915254161760008051602061260e83398151915255610521575b6103ae6125bf565b6103b66125bf565b6103be6125bf565b6103c78361237f565b6103cf6125bf565b6103d76125bf565b60ff196000541660005543600a55600160ff19600f541617600f5560405193608085019480861067ffffffffffffffff87111761050b576104b19560405267016345785d8a00008152670de0b6b3a764000060208201526002604082015260604291015267016345785d8a0000600355670de0b6b3a764000060045560026005554260065560005490610100600160a81b039060081b1690610100600160a81b031916176000556001600160601b0360a01b600154161760015560018060a01b03166001600160601b0360a01b6002541617600255612460565b6104b757005b60ff60401b1960008051602061260e833981519152541660008051602061260e833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b634e487b7160e01b600052604160045260246000fd5b600160401b60ff60401b1960008051602061260e83398151915254161760008051602061260e833981519152556103a6565b63f92ee8a960e01b60005260046000fd5b9050158661036d565b303b159150610365565b86915061035b565b346102de5760203660031901126102de576105a861059b611e00565b6105a36123af565b61237f565b005b346102de5760003660031901126102de576020600954604051908152f35b346102de5760003660031901126102de576020601054604051908152f35b346102de5760003660031901126102de576020600754604051908152f35b611e49565b346102de5760003660031901126102de57602060405166038d7ea4c680008152f35b346102de5760003660031901126102de57600080600b54905b818110610689575060c0916106826007546008546009549060ff60005416926040519687526020870152604086015260608501526080840190611e66565b60a0820152f35b61069281611e73565b60018060a01b0391549060031b1c16600052600c60205260ff60056040600020015460081c166106c5575b600101610644565b916106d160019161228d565b9290506106bd565b346102de5760003660031901126102de576106f26123af565b60ff6000541660038110156108185780610807576002600091146107f8578080805b600b548110156107ad5761072781611e73565b905460039190911b1c6001600160a01b0316808552600c602052604085206005015460081c60ff1661075d575b50600101610714565b6107a0600192939461079a836107a6948952600c602052600260408a20015490610786816124b6565b8952600c602052600260408a200154612045565b90611e8e565b9361228d565b9190610754565b507f6ae8ee960d83517f7fa993ad7a0e16e33d9655a23ff41eefc62bdb289c7a8e5f916107f26040519283924291846040919493926060820195825260208201520152565b0390a180f35b633435875f60e11b8152600490fd5b63566498c160e11b60005260046000fd5b634e487b7160e01b600052602160045260246000fd5b611e2c565b346102de5760203660031901126102de5761084c611e00565b6000805160206125ee833981519152546001600160a01b031633036108cc576001600160a01b031680156108bb576020817fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f926001600160601b0360a01b6012541617601255604051908152a1005b63e6c4247b60e01b60005260046000fd5b6282b42960e81b60005260046000fd5b346102de5760003660031901126102de57602060ff600054166109026040518092611e66565bf35b346102de5760003660031901126102de57602061091f612311565b604051908152f35b346102de5760203660031901126102de576004358015158091036102de5761094d6123af565b60ff8019600f5416911617600f55600080f35b346102de5760003660031901126102de576012546040516001600160a01b039091168152602090f35b346102de5760203660031901126102de576109a26123af565b600435601555005b346102de5760203660031901126102de576004356109c7336123e5565b66038d7ea4c680008110610b8657612710600b54101580610b6a575b610b59576001546040516323b872dd60e01b81523360048201523060248201526044810183905290602090829060649082906000906001600160a01b03165af1908115610b4d57600091610b1e575b5015610b0d5733600052600c6020526040600020906005820160ff81541615610abc575b610a61828454611e8e565b835561010061ff0019825416179055610a7c81600754611e8e565b6007556040519081524260208201527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560403392a2600143910155600080f35b600b54600160401b81101561050b57806001610adb9201600b55611e73565b81546001600160a01b0360039290921b91821b19163390911b179055805460ff19166001178155426004840155610a56565b63f45377a960e01b60005260046000fd5b610b40915060203d602011610b46575b610b388183611d95565b810190611fbc565b82610a32565b503d610b2e565b6040513d6000823e3d90fd5b634f26e78960e01b60005260046000fd5b5033600052600c60205260ff60056040600020015416156109e3565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b346102de5760003660031901126102de576020600a54604051908152f35b346102de5760203660031901126102de576001600160a01b03610bfb611e00565b16600052600c60205260e0604060002060ff815491600181015490600281015460038201549060056004840154930154936040519687526020870152604086015260608501526080840152818116151560a084015260081c16151560c0820152f35b346102de5760003660031901126102de57610c766123af565b6105a86122b4565b346102de5760003660031901126102de57600080600b54905b818110610dbf5750610cc1610cab8361229c565b92610cb96040519485611d95565b80845261229c565b602083019190601f190136833760009060005b818110610d295783856040519182916020830190602084525180915260408301919060005b818110610d07575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610cf9565b610d3281611e73565b60018060a01b0391549060031b1c16600052600c60205260ff60056040600020015460081c16610d65575b600101610cd4565b91610d6f83611e73565b9054865160039290921b1c6001600160a01b031690821015610da95781610da191602060019460051b8901015261228d565b929050610d5d565b634e487b7160e01b600052603260045260246000fd5b610dc881611e73565b60018060a01b0391549060031b1c16600052600c60205260ff60056040600020015460081c16610dfb575b600101610c97565b91610e0760019161228d565b929050610df3565b346102de5760003660031901126102de576020601154604051908152f35b346102de5760203660031901126102de577f5dd7b309b7bc5010d9c96159ee535a428121d6803cb847792402fffccaf1569a6040600435610e6c6123af565b600e549080600e5582519182526020820152a1005b346102de5760003660031901126102de576020600854604051908152f35b346102de5760003660031901126102de576000805160206125ee833981519152546040516001600160a01b039091168152602090f35b346102de5760003660031901126102de576020601554604051908152f35b346102de5760203660031901126102de576040610f16610f11611e00565b61214b565b82519182526020820152f35b346102de5760203660031901126102de576001600160a01b03610f43611e00565b16600052600d6020526020604060002054604051908152f35b346102de5760203660031901126102de576000805160206125ee833981519152546001600160a01b031633036108cc57600435600e55005b346102de5760003660031901126102de57610fad6123af565b6000805160206125ee83398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102de5760603660031901126102de576044356024356004356110206123af565b8181116110865760328311611086576110817f81376037ed87033d6b5601a7c8806a8a7a2649525c23fe62315eb82c39c7e2479382600355836004558060055542600655604051938493846040919493926060820195825260208201520152565b0390a1005b631a67164160e21b60005260046000fd5b346102de5760403660031901126102de576000805160206125ee8339815191525460043590602435906001600160a01b031633036108cc576103e8821161111b576103e8811161111b57816040917f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1936010558060115582519182526020820152a1005b63ac98d7e160e01b60005260046000fd5b346102de5760003660031901126102de576111456123af565b6105a86120e9565b346102de5760003660031901126102de57602060405160328152f35b346102de5760003660031901126102de576111826123af565b6105a8612052565b346102de5760203660031901126102de576111a3611e00565b600060c06040516111b381611d79565b8281528260208201528260408201528260608201528260808201528260a0820152015260018060a01b0316600052600c60205260e06040600020604051906111fa82611d79565b805491828152600182015491602082019283526002810154604083019081526003820154906060840191825260056004840154936080860194855201549460ff60c060a087019682891615158852019660081c161515865260405196875251602087015251604086015251606085015251608084015251151560a083015251151560c0820152f35b346102de5760003660031901126102de576001546040516001600160a01b039091168152602090f35b346102de5760003660031901126102de5760005460405160089190911c6001600160a01b03168152602090f35b346102de5760003660031901126102de57602060ff7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330054166040519015158152f35b346102de5760003660031901126102de57602060ff600f54166040519015158152f35b346102de5760003660031901126102de57608060035460045460055460065491604051938452602084015260408301526060820152f35b346102de5760003660031901126102de5761138d6123af565b60145461139b811515611f86565b60006014819055805460125460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018590529260209284926044928492909160089190911c165af18015610b4d576113f991600091611434575b50611fd4565b6012546040519182526001600160a01b0316907f1d1349746d782d6dfc3ee165ba93babd914b7585e3d3e5497614f9fe0eb3fc1c90602090a2005b61144d915060203d602011610b4657610b388183611d95565b836113f3565b346102de5760003660031901126102de576002546040516001600160a01b039091168152602090f35b346102de5760003660031901126102de576020600e54604051908152f35b346102de5760003660031901126102de5733600052600c60205260ff60056040600020015460081c1615801561179d575b61178c5760ff60005416600381101561081857600214808061177f575b61176e5733600052600c6020526040600020805491821561175d571560008180611752575b61172b575b50611615575b806000600592550161ff0019815416905561153581600754612045565b6007558060ff60005416600381101561081857600214158061160a575b6115d9575b5060015460405163a9059cbb60e01b81523360048201526024810183905290602090829060449082906000906001600160a01b03165af18015610b4d576115a5916000916114345750611fd4565b6040519081524260208201527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56860403392a2005b90506116016115f86127106115f060105485612012565b048093612045565b91601354611e8e565b60135581611557565b506010541515611552565b61161e336123e5565b600281019081549182611634575b509050611518565b61167e61271061164660115486612012565b049360006116548683612045565b935560038401611665848254611e8e565b905561167385601454611e8e565b601455600954611e8e565b6009556000805460405163a9059cbb60e01b8152336004820152602481018490529491602091869160449183919060081c6001600160a01b03165af1938415610b4d576005946116d59160009161170c5750611fd4565b60405191825260208201527feb6ddaf71011472a18676020a53f58d8146f6997849d9b61afe146fe79ab0bd960403392a28361162c565b611725915060203d602011610b4657610b388183611d95565b876113f3565b61173c6004840154600e5490611e8e565b42101561151257631958598b60e01b8152600490fd5b50600e54151561150d565b638339c1ad60e01b60005260046000fd5b633435875f60e11b60005260046000fd5b5060ff600f5416156114e8565b6327b9597960e01b60005260046000fd5b5033600052600c602052604060002054156114cb565b346102de5760003660031901126102de5760ff60005416600381101561081857610807576117e0336123e5565b33600052600c6020526040600020600281019081549081156119a15761271061180b60115484612012565b04916118178382612045565b6000546040516370a0823160e01b8152306004820152919591906020908290602490829060081c6001600160a01b03165afa8015610b4d57869160009161196c575b5010611927576118839260006003925501611875858254611e8e565b905561167383601454611e8e565b6009556000805460405163a9059cbb60e01b81523360048201526024810185905291602091839160449183919060081c6001600160a01b03165af18015610b4d576118d5916000916119085750611fd4565b60405191825260208201527feb6ddaf71011472a18676020a53f58d8146f6997849d9b61afe146fe79ab0bd960403392a2005b611921915060203d602011610b4657610b388183611d95565b846113f3565b60405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606490fd5b9150506020813d602011611999575b8161198860209383611d95565b810103126102de5785905187611859565b3d915061197b565b60405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b6044820152606490fd5b346102de5760003660031901126102de576020601454604051908152f35b346102de5760003660031901126102de57611a0a6123af565b601354611a18811515611f86565b6000601381905560015460125460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905292602092849260449284929091165af18015610b4d57611a70916000916114345750611fd4565b6012546040519182526001600160a01b0316907f1e2e6257ac7187b1133b17d3e1e24c28bc4f84273e03229e9fac633c1705dc5f90602090a2005b346102de5760603660031901126102de57602435600435611aca611e16565b9160008051602061260e8339815191525460ff8160401c16908115611bad575b5061055357600267ffffffffffffffff1960008051602061260e83398151915254161760008051602061260e8339815191525560ff60401b1960008051602061260e8339815191525416926103e8831161111b576103e8821161111b576001600160a01b03169182156108bb576010556011556001600160601b0360a01b601254161760125560008051602061260e833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160028152a1005b6002915067ffffffffffffffff16101584611aea565b346102de5760203660031901126102de576040611be6611be1611e00565b611eb1565b825191151582526020820152f35b346102de5760003660031901126102de576020601354604051908152f35b346102de5760003660031901126102de57611c52604051611c34604082611d95565b60058152640322e302e360dc1b602082015260405191829182611db7565b0390f35b346102de5760003660031901126102de57611c52604051611c78604082611d95565b601781527f50726f706f7274696f6e616c20546f6b656e204661726d000000000000000000602082015260405191829182611db7565b346102de5760203660031901126102de576004356001600160a01b038116908190036102de57611cdc6123af565b80156110865760407fe4cec16b1a7e6b7979e923da619a8b1e5fd0f0fb6e5c1cf647f350430ee61ca99160025490806001600160601b0360a01b83161760025582519160018060a01b031682526020820152a1005b346102de5760003660031901126102de576010546011546013546014546012549385526020850192909252604084015260608301526001600160a01b0316608082015260a090f35b60e0810190811067ffffffffffffffff82111761050b57604052565b90601f8019910116810190811067ffffffffffffffff82111761050b57604052565b91909160208152825180602083015260005b818110611dea575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201611dc9565b600435906001600160a01b03821682036102de57565b604435906001600160a01b03821682036102de57565b346102de5760003660031901126102de5760206040516103e88152f35b346102de5760003660031901126102de5760206040516127108152f35b9060038210156108185752565b600b54811015610da957600b60005260206000200190600090565b91908201809211611e9b57565b634e487b7160e01b600052601160045260246000fd5b60018060a01b0316600052600c602052604060002060c0604051611ed481611d79565b82549081815260018401546020820152600284015460408201526003840154606082015260ff6005600486015495608084019687520154818116151560a084015260081c1615908115938491015291611f7d575b50611f745760ff60005416600381101561081857600214611f6757600e548015611f5d57611f569151611e8e565b4281111591565b5050600190600090565b5060ff600f541690600090565b50600090600090565b90501538611f28565b15611f8d57565b60405162461bcd60e51b81526020600482015260076024820152664e6f206665657360c81b6044820152606490fd5b908160209103126102de575180151581036102de5790565b15611fdb57565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b81810292918115918404141715611e9b57565b811561202f570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211611e9b57565b60ff60005416600381101561081857600281146120e65760407fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d891600260ff1960005416176000556120b960ff600054166120af84518094611e66565b6020830190611e66565ba17f1e8ac57e9803840915f0284b77b570a882fb2db69108ac8eba578bb30fcaf1526020604051428152a1565b50565b60ff6000541660038110156108185780156120e6576000600282146107f857805460ff19169055604080517fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d892612148906000906120af908490611e66565ba1565b9060018060a01b038216600052600c602052604060002060405161216e81611d79565b815481526001820154806020830152600283015460ff6005604085019583875260038101546060870152600481015460808701520154818116151560a086015260081c16158015908160c086015290612283575b6122785750906121d460209243612045565b60025491516007546003546004805460405163a0acbec360e01b81529182019590955260248101939093526044830191909152606482015260848101919091526001600160a01b0395861660a482015294859160c4918391165afa928315610b4d57600093612244575b50519190565b9092506020813d602011612270575b8161226060209383611d95565b810103126102de5751913861223e565b3d9150612253565b945060009392505050565b50600754156121c2565b6000198114611e9b5760010190565b67ffffffffffffffff811161050b5760051b60200190565b60ff60005416600381101561081857600181146120e65760407fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d891600160ff19600054161760005561214860ff600054166120af84518094611e66565b60075480156123795761232960035460045490611e8e565b60011c906117708202918083046117701481151715611e9b5762216ab081029280840461016d1490151715611e9b57630d0dacc0029180830460641490151715611e9b5761237691612025565b90565b50600090565b6001600160a01b038116156123995761239790612460565b565b631e4fbdf760e01b600052600060045260246000fd5b6000805160206125ee833981519152546001600160a01b031633036123d057565b63118cdaa760e01b6000523360045260246000fd5b60018060a01b0316600052600c60205260406000206001810190815480431180612456575b61241357505050565b600261244561243c61243461242b61244f9543612045565b60155490612012565b855490612012565b60075490612025565b9201918254611e8e565b9055439055565b508154151561240a565b6000805160206125ee83398151915280546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b60018060a01b038116600052600c602052604060002090600182019182548043118015906125b5575b80156125ac575b6125a6576124f660209143612045565b60025483546007546003546004805460405163a0acbec360e01b81529182019690965260248101939093526044830191909152606482015260848101929092526001600160a01b0394851660a48301529093849160c4918391165afa918215610b4d57600092612571575b50600261244f9101918254611e8e565b9091506020813d60201161259e575b8161258d60209383611d95565b810103126102de5751906002612561565b3d9150612580565b50505050565b508154156124e6565b50600754156124df565b60ff60008051602061260e8339815191525460401c16156125dc57565b631afcd79f60e31b60005260046000fdfe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212204ce0a3828bf3b58b37c61157fed076d480b23b75eff009dcc797b27a80df779164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x23 JUMPI PUSH1 0xE PUSH1 0x28 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2663 SWAP1 DUP2 PUSH2 0xE5 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND PUSH1 0xD3 JUMPI PUSH1 0x2 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND ADD PUSH1 0x6E JUMPI POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 SWAP1 LOG1 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x2EAB7 EQ PUSH2 0x1D31 JUMPI POP DUP1 PUSH4 0x6309E4B EQ PUSH2 0x1CAE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C56 JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x1C12 JUMPI DUP1 PUSH4 0x1568B169 EQ PUSH2 0x1BF4 JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x1BC3 JUMPI DUP1 PUSH4 0x1F51BF0C EQ PUSH2 0x1AAB JUMPI DUP1 PUSH4 0x25B500EB EQ PUSH2 0x19F1 JUMPI DUP1 PUSH4 0x26712743 EQ PUSH2 0x19D3 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x17B3 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x149A JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x147C JUMPI DUP1 PUSH4 0x44C4AEA9 EQ PUSH2 0x1453 JUMPI DUP1 PUSH4 0x46800F75 EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x1374 JUMPI DUP1 PUSH4 0x4E94C285 EQ PUSH2 0x133D JUMPI DUP1 PUSH4 0x5747E69F EQ PUSH2 0x131A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x12D8 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x12AB JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x1282 JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x118A JUMPI DUP1 PUSH4 0x63A599A4 EQ PUSH2 0x1169 JUMPI DUP1 PUSH4 0x67D81740 EQ PUSH2 0x114D JUMPI DUP1 PUSH4 0x6C7ECB78 EQ PUSH2 0x112C JUMPI DUP1 PUSH4 0x6DB79437 EQ PUSH2 0x1097 JUMPI DUP1 PUSH4 0x6F3BA889 EQ PUSH2 0xFFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF94 JUMPI DUP1 PUSH4 0x779972DA EQ PUSH2 0xF5C JUMPI DUP1 PUSH4 0x78D60A5B EQ PUSH2 0xF22 JUMPI DUP1 PUSH4 0x7BBFFFA5 EQ PUSH2 0xEF3 JUMPI DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0xED5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE9F JUMPI DUP1 PUSH4 0x9003ADFE EQ PUSH2 0xE81 JUMPI DUP1 PUSH4 0x910956AA EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x91DB7B0D EQ PUSH2 0xE2D JUMPI DUP1 PUSH4 0x99D32FC4 EQ PUSH2 0xE0F JUMPI DUP1 PUSH4 0x9FB82DB9 EQ PUSH2 0xC7E JUMPI DUP1 PUSH4 0xA113601B EQ PUSH2 0xC5D JUMPI DUP1 PUSH4 0xACB422C5 EQ PUSH2 0xBDA JUMPI DUP1 PUSH4 0xB507D70F EQ PUSH2 0xBBC JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x9AA JUMPI DUP1 PUSH4 0xBB872B4A EQ PUSH2 0x989 JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x960 JUMPI DUP1 PUSH4 0xC74AD493 EQ PUSH2 0x927 JUMPI DUP1 PUSH4 0xCCAAD55D EQ PUSH2 0x904 JUMPI DUP1 PUSH4 0xCE2040C8 EQ PUSH2 0x8DC JUMPI DUP1 PUSH4 0xD2C35CE8 EQ PUSH2 0x833 JUMPI DUP1 PUSH4 0xD4B0DE2F EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xDB03E227 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xE1E158A5 EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xE766C835 EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xE941FA78 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0xEE172546 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x2E3 JUMPI PUSH4 0xFD5E6DD1 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x2C5 PUSH1 0x20 SWAP2 PUSH2 0x1E73 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x2FC PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x2DE JUMPI PUSH2 0x31A PUSH2 0x1E16 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xFF DUP7 PUSH1 0x40 SHR AND ISZERO SWAP6 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x577 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x56D JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x564 JUMPI JUMPDEST POP PUSH2 0x553 JUMPI DUP5 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x521 JUMPI JUMPDEST PUSH2 0x3AE PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x3B6 PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x3C7 DUP4 PUSH2 0x237F JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x25BF JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE NUMBER PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xF SLOAD AND OR PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 DUP6 ADD SWAP5 DUP1 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x50B JUMPI PUSH2 0x4B1 SWAP6 PUSH1 0x40 MSTORE PUSH8 0x16345785D8A0000 DUP2 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 TIMESTAMP SWAP2 ADD MSTORE PUSH8 0x16345785D8A0000 PUSH1 0x3 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE PUSH1 0x2 PUSH1 0x5 SSTORE TIMESTAMP PUSH1 0x6 SSTORE PUSH1 0x0 SLOAD SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL AND SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x4B7 JUMPI STOP JUMPDEST PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x3A6 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO DUP7 PUSH2 0x36D JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x365 JUMP JUMPDEST DUP7 SWAP2 POP PUSH2 0x35B JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x5A8 PUSH2 0x59B PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x5A3 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x237F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1E49 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH7 0x38D7EA4C68000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 PUSH1 0xB SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x689 JUMPI POP PUSH1 0xC0 SWAP2 PUSH2 0x682 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP1 PUSH1 0xFF PUSH1 0x0 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0x6C5 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x644 JUMP JUMPDEST SWAP2 PUSH2 0x6D1 PUSH1 0x1 SWAP2 PUSH2 0x228D JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x6BD JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x6F2 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI DUP1 PUSH2 0x807 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP2 EQ PUSH2 0x7F8 JUMPI DUP1 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x7AD JUMPI PUSH2 0x727 DUP2 PUSH2 0x1E73 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP6 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0x75D JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x714 JUMP JUMPDEST PUSH2 0x7A0 PUSH1 0x1 SWAP3 SWAP4 SWAP5 PUSH2 0x79A DUP4 PUSH2 0x7A6 SWAP5 DUP10 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x786 DUP2 PUSH2 0x24B6 JUMP JUMPDEST DUP10 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD PUSH2 0x2045 JUMP JUMPDEST SWAP1 PUSH2 0x1E8E JUMP JUMPDEST SWAP4 PUSH2 0x228D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x754 JUMP JUMPDEST POP PUSH32 0x6AE8EE960D83517F7FA993AD7A0E16E33D9655A23FF41EEFC62BDB289C7A8E5F SWAP2 PUSH2 0x7F2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x3435875F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x566498C1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E2C JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x84C PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x8CC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x20 DUP2 PUSH32 0xE5693914D19C789BDEE50A362998C0BC8D035A835F9871DA5D51152F0582C34F SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x12 SLOAD AND OR PUSH1 0x12 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x82B429 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH2 0x902 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1E66 JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH2 0x91F PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x2DE JUMPI PUSH2 0x94D PUSH2 0x23AF JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xF SLOAD AND SWAP2 AND OR PUSH1 0xF SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x9A2 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x15 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x9C7 CALLER PUSH2 0x23E5 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP2 LT PUSH2 0xB86 JUMPI PUSH2 0x2710 PUSH1 0xB SLOAD LT ISZERO DUP1 PUSH2 0xB6A JUMPI JUMPDEST PUSH2 0xB59 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 SWAP2 PUSH2 0xB1E JUMPI JUMPDEST POP ISZERO PUSH2 0xB0D JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD PUSH1 0xFF DUP2 SLOAD AND ISZERO PUSH2 0xABC JUMPI JUMPDEST PUSH2 0xA61 DUP3 DUP5 SLOAD PUSH2 0x1E8E JUMP JUMPDEST DUP4 SSTORE PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xA7C DUP2 PUSH1 0x7 SLOAD PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 NUMBER SWAP2 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x50B JUMPI DUP1 PUSH1 0x1 PUSH2 0xADB SWAP3 ADD PUSH1 0xB SSTORE PUSH2 0x1E73 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE TIMESTAMP PUSH1 0x4 DUP5 ADD SSTORE PUSH2 0xA56 JUMP JUMPDEST PUSH4 0xF45377A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB40 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB46 JUMPI JUMPDEST PUSH2 0xB38 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1FBC JUMP JUMPDEST DUP3 PUSH2 0xA32 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4F26E789 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBFB PUSH2 0x1E00 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0xC76 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x5A8 PUSH2 0x22B4 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 PUSH1 0xB SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xDBF JUMPI POP PUSH2 0xCC1 PUSH2 0xCAB DUP4 PUSH2 0x229C JUMP JUMPDEST SWAP3 PUSH2 0xCB9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1D95 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x229C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x0 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD29 JUMPI DUP4 DUP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD07 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xD32 DUP2 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0xD65 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xCD4 JUMP JUMPDEST SWAP2 PUSH2 0xD6F DUP4 PUSH2 0x1E73 JUMP JUMPDEST SWAP1 SLOAD DUP7 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 LT ISZERO PUSH2 0xDA9 JUMPI DUP2 PUSH2 0xDA1 SWAP2 PUSH1 0x20 PUSH1 0x1 SWAP5 PUSH1 0x5 SHL DUP10 ADD ADD MSTORE PUSH2 0x228D JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xD5D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xDC8 DUP2 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0xDFB JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xC97 JUMP JUMPDEST SWAP2 PUSH2 0xE07 PUSH1 0x1 SWAP2 PUSH2 0x228D JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xDF3 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH32 0x5DD7B309B7BC5010D9C96159EE535A428121D6803CB847792402FFFCCAF1569A PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0xE6C PUSH2 0x23AF JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 DUP1 PUSH1 0xE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x40 PUSH2 0xF16 PUSH2 0xF11 PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x214B JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF43 PUSH2 0x1E00 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x8CC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xE SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0xFAD PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1020 PUSH2 0x23AF JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x1086 JUMPI PUSH1 0x32 DUP4 GT PUSH2 0x1086 JUMPI PUSH2 0x1081 PUSH32 0x81376037ED87033D6B5601A7C8806A8A7A2649525C23FE62315EB82C39C7E247 SWAP4 DUP3 PUSH1 0x3 SSTORE DUP4 PUSH1 0x4 SSTORE DUP1 PUSH1 0x5 SSTORE TIMESTAMP PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST PUSH4 0x1A671641 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x8CC JUMPI PUSH2 0x3E8 DUP3 GT PUSH2 0x111B JUMPI PUSH2 0x3E8 DUP2 GT PUSH2 0x111B JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH32 0x5C6323BF1C2D7AAEA2C091A4751C1C87AF7F2864650C336507A77D0557AF37A1 SWAP4 PUSH1 0x10 SSTORE DUP1 PUSH1 0x11 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH4 0xAC98D7E1 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x1145 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x5A8 PUSH2 0x20E9 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x1182 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x5A8 PUSH2 0x2052 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x11A3 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 PUSH1 0x40 MLOAD PUSH2 0x11B3 DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x11FA DUP3 PUSH2 0x1D79 JUMP JUMPDEST DUP1 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x60 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP7 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP5 PUSH1 0xFF PUSH1 0xC0 PUSH1 0xA0 DUP8 ADD SWAP7 DUP3 DUP10 AND ISZERO ISZERO DUP9 MSTORE ADD SWAP7 PUSH1 0x8 SHR AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE MLOAD PUSH1 0x20 DUP8 ADD MSTORE MLOAD PUSH1 0x40 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xF SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x80 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x138D PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x139B DUP2 ISZERO ISZERO PUSH2 0x1F86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH1 0x44 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR AND GAS CALL DUP1 ISZERO PUSH2 0xB4D JUMPI PUSH2 0x13F9 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1434 JUMPI JUMPDEST POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x1D1349746D782D6DFC3EE165BA93BABD914B7585E3D3E5497614F9FE0EB3FC1C SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH2 0x144D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB46 JUMPI PUSH2 0xB38 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP4 PUSH2 0x13F3 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO DUP1 ISZERO PUSH2 0x179D JUMPI JUMPDEST PUSH2 0x178C JUMPI PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x2 EQ DUP1 DUP1 PUSH2 0x177F JUMPI JUMPDEST PUSH2 0x176E JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x175D JUMPI ISZERO PUSH1 0x0 DUP2 DUP1 PUSH2 0x1752 JUMPI JUMPDEST PUSH2 0x172B JUMPI JUMPDEST POP PUSH2 0x1615 JUMPI JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x5 SWAP3 SSTORE ADD PUSH2 0xFF00 NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x1535 DUP2 PUSH1 0x7 SLOAD PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x7 SSTORE DUP1 PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x2 EQ ISZERO DUP1 PUSH2 0x160A JUMPI JUMPDEST PUSH2 0x15D9 JUMPI JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xB4D JUMPI PUSH2 0x15A5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1434 JUMPI POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST SWAP1 POP PUSH2 0x1601 PUSH2 0x15F8 PUSH2 0x2710 PUSH2 0x15F0 PUSH1 0x10 SLOAD DUP6 PUSH2 0x2012 JUMP JUMPDEST DIV DUP1 SWAP4 PUSH2 0x2045 JUMP JUMPDEST SWAP2 PUSH1 0x13 SLOAD PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x13 SSTORE DUP2 PUSH2 0x1557 JUMP JUMPDEST POP PUSH1 0x10 SLOAD ISZERO ISZERO PUSH2 0x1552 JUMP JUMPDEST PUSH2 0x161E CALLER PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 DUP3 PUSH2 0x1634 JUMPI JUMPDEST POP SWAP1 POP PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x167E PUSH2 0x2710 PUSH2 0x1646 PUSH1 0x11 SLOAD DUP7 PUSH2 0x2012 JUMP JUMPDEST DIV SWAP4 PUSH1 0x0 PUSH2 0x1654 DUP7 DUP4 PUSH2 0x2045 JUMP JUMPDEST SWAP4 SSTORE PUSH1 0x3 DUP5 ADD PUSH2 0x1665 DUP5 DUP3 SLOAD PUSH2 0x1E8E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1673 DUP6 PUSH1 0x14 SLOAD PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x14 SSTORE PUSH1 0x9 SLOAD PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP2 PUSH1 0x20 SWAP2 DUP7 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0xB4D JUMPI PUSH1 0x5 SWAP5 PUSH2 0x16D5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x170C JUMPI POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xEB6DDAF71011472A18676020A53F58D8146F6997849D9B61AFE146FE79AB0BD9 PUSH1 0x40 CALLER SWAP3 LOG2 DUP4 PUSH2 0x162C JUMP JUMPDEST PUSH2 0x1725 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB46 JUMPI PUSH2 0xB38 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP8 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x173C PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xE SLOAD SWAP1 PUSH2 0x1E8E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1512 JUMPI PUSH4 0x1958598B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD ISZERO ISZERO PUSH2 0x150D JUMP JUMPDEST PUSH4 0x8339C1AD PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x3435875F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0xF SLOAD AND ISZERO PUSH2 0x14E8 JUMP JUMPDEST PUSH4 0x27B95979 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x14CB JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH2 0x807 JUMPI PUSH2 0x17E0 CALLER PUSH2 0x23E5 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP1 DUP2 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x2710 PUSH2 0x180B PUSH1 0x11 SLOAD DUP5 PUSH2 0x2012 JUMP JUMPDEST DIV SWAP2 PUSH2 0x1817 DUP4 DUP3 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP6 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0xB4D JUMPI DUP7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x196C JUMPI JUMPDEST POP LT PUSH2 0x1927 JUMPI PUSH2 0x1883 SWAP3 PUSH1 0x0 PUSH1 0x3 SWAP3 SSTORE ADD PUSH2 0x1875 DUP6 DUP3 SLOAD PUSH2 0x1E8E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1673 DUP4 PUSH1 0x14 SLOAD PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xB4D JUMPI PUSH2 0x18D5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1908 JUMPI POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xEB6DDAF71011472A18676020A53F58D8146F6997849D9B61AFE146FE79AB0BD9 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH2 0x1921 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB46 JUMPI PUSH2 0xB38 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP5 PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1999 JUMPI JUMPDEST DUP2 PUSH2 0x1988 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2DE JUMPI DUP6 SWAP1 MLOAD DUP8 PUSH2 0x1859 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x197B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E6F2072657761726473 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x1A0A PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x1A18 DUP2 ISZERO ISZERO PUSH2 0x1F86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH1 0x44 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0xB4D JUMPI PUSH2 0x1A70 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1434 JUMPI POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x1E2E6257AC7187B1133B17D3E1E24C28BC4F84273E03229E9FAC633C1705DC5F SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1ACA PUSH2 0x1E16 JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND SWAP1 DUP2 ISZERO PUSH2 0x1BAD JUMPI JUMPDEST POP PUSH2 0x553 JUMPI PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND SWAP3 PUSH2 0x3E8 DUP4 GT PUSH2 0x111B JUMPI PUSH2 0x3E8 DUP3 GT PUSH2 0x111B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x10 SSTORE PUSH1 0x11 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x12 SLOAD AND OR PUSH1 0x12 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x2 SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO DUP5 PUSH2 0x1AEA JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x40 PUSH2 0x1BE6 PUSH2 0x1BE1 PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x1EB1 JUMP JUMPDEST DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x1C52 PUSH1 0x40 MLOAD PUSH2 0x1C34 PUSH1 0x40 DUP3 PUSH2 0x1D95 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x322E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x1C52 PUSH1 0x40 MLOAD PUSH2 0x1C78 PUSH1 0x40 DUP3 PUSH2 0x1D95 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x50726F706F7274696F6E616C20546F6B656E204661726D000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2DE JUMPI PUSH2 0x1CDC PUSH2 0x23AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1086 JUMPI PUSH1 0x40 PUSH32 0xE4CEC16B1A7E6B7979E923DA619A8B1E5FD0F0FB6E5C1CF647F350430EE61CA9 SWAP2 PUSH1 0x2 SLOAD SWAP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 AND OR PUSH1 0x2 SSTORE DUP3 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x12 SLOAD SWAP4 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 SWAP1 RETURN JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1DEA JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2DE JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2DE JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x818 JUMPI MSTORE JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xDA9 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1E9B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xC0 PUSH1 0x40 MLOAD PUSH2 0x1ED4 DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP3 SLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 PUSH1 0x80 DUP5 ADD SWAP7 DUP8 MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO SWAP1 DUP2 ISZERO SWAP4 DUP5 SWAP2 ADD MSTORE SWAP2 PUSH2 0x1F7D JUMPI JUMPDEST POP PUSH2 0x1F74 JUMPI PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x2 EQ PUSH2 0x1F67 JUMPI PUSH1 0xE SLOAD DUP1 ISZERO PUSH2 0x1F5D JUMPI PUSH2 0x1F56 SWAP2 MLOAD PUSH2 0x1E8E JUMP JUMPDEST TIMESTAMP DUP2 GT ISZERO SWAP2 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x1F28 JUMP JUMPDEST ISZERO PUSH2 0x1F8D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F2066656573 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2DE JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2DE JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1FDB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1E9B JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x202F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1E9B JUMPI JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x20E6 JUMPI PUSH1 0x40 PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP2 PUSH1 0x2 PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x20B9 PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH2 0x20AF DUP5 MLOAD DUP1 SWAP5 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1E66 JUMP JUMPDEST LOG1 PUSH32 0x1E8AC57E9803840915F0284B77B570A882FB2DB69108AC8EBA578BB30FCAF152 PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI DUP1 ISZERO PUSH2 0x20E6 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 EQ PUSH2 0x7F8 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP3 PUSH2 0x2148 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x20AF SWAP1 DUP5 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST LOG1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x216E DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 DUP6 ADD SWAP6 DUP4 DUP8 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO DUP1 ISZERO SWAP1 DUP2 PUSH1 0xC0 DUP7 ADD MSTORE SWAP1 PUSH2 0x2283 JUMPI JUMPDEST PUSH2 0x2278 JUMPI POP SWAP1 PUSH2 0x21D4 PUSH1 0x20 SWAP3 NUMBER PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA0ACBEC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0xA4 DUP3 ADD MSTORE SWAP5 DUP6 SWAP2 PUSH1 0xC4 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 SWAP4 PUSH2 0x2244 JUMPI JUMPDEST POP MLOAD SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2270 JUMPI JUMPDEST DUP2 PUSH2 0x2260 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2DE JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x223E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2253 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x7 SLOAD ISZERO PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1E9B JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x50B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x20E6 JUMPI PUSH1 0x40 PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP2 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x2148 PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH2 0x20AF DUP5 MLOAD DUP1 SWAP5 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x2379 JUMPI PUSH2 0x2329 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x1 SHR SWAP1 PUSH2 0x1770 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH2 0x1770 EQ DUP2 ISZERO OR ISZERO PUSH2 0x1E9B JUMPI PUSH3 0x216AB0 DUP2 MUL SWAP3 DUP1 DUP5 DIV PUSH2 0x16D EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1E9B JUMPI PUSH4 0xD0DACC0 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1E9B JUMPI PUSH2 0x2376 SWAP2 PUSH2 0x2025 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2399 JUMPI PUSH2 0x2397 SWAP1 PUSH2 0x2460 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x23D0 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 ADD SWAP1 DUP2 SLOAD DUP1 NUMBER GT DUP1 PUSH2 0x2456 JUMPI JUMPDEST PUSH2 0x2413 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2445 PUSH2 0x243C PUSH2 0x2434 PUSH2 0x242B PUSH2 0x244F SWAP6 NUMBER PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 PUSH2 0x2012 JUMP JUMPDEST DUP6 SLOAD SWAP1 PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP3 ADD SWAP2 DUP3 SLOAD PUSH2 0x1E8E JUMP JUMPDEST SWAP1 SSTORE NUMBER SWAP1 SSTORE JUMP JUMPDEST POP DUP2 SLOAD ISZERO ISZERO PUSH2 0x240A JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP2 DUP3 SLOAD DUP1 NUMBER GT DUP1 ISZERO SWAP1 PUSH2 0x25B5 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x25AC JUMPI JUMPDEST PUSH2 0x25A6 JUMPI PUSH2 0x24F6 PUSH1 0x20 SWAP2 NUMBER PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP4 SLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA0ACBEC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP4 DUP5 SWAP2 PUSH1 0xC4 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2571 JUMPI JUMPDEST POP PUSH1 0x2 PUSH2 0x244F SWAP2 ADD SWAP2 DUP3 SLOAD PUSH2 0x1E8E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x259E JUMPI JUMPDEST DUP2 PUSH2 0x258D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2DE JUMPI MLOAD SWAP1 PUSH1 0x2 PUSH2 0x2561 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2580 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP DUP2 SLOAD ISZERO PUSH2 0x24E6 JUMP JUMPDEST POP PUSH1 0x7 SLOAD ISZERO PUSH2 0x24DF JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x25DC JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x706673582212204CE0A3 DUP3 DUP12 RETURN 0xB5 DUP12 CALLDATACOPY 0xC6 GT JUMPI INVALID 0xD0 PUSH23 0xD480B23B75EFF009DCC797B27A80DF779164736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "389:8739:25:-:0;;;;;;4178:55:24;;:::i;:::-;1532::25;;:::i;:::-;389:8739;;;;;;;;;;;;;7709:422:1;3147:66;389:8739:25;;;;;;7894:76:1;;-1:-1:-1;;;;;;;;;;;389:8739:25;;7983:34:1;7979:146;;7709:422;:::o;7979:146::-;-1:-1:-1;;;;;;389:8739:25;-1:-1:-1;;;;;389:8739:25;;;3147:66:1;389:8739:25;;;;;;8085:29:1;;389:8739:25;;8085:29:1;7709:422::o;7894:76::-;7936:23;;;-1:-1:-1;7936:23:1;;-1:-1:-1;7936:23:1"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 7702,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_28097": {
                  "entryPoint": 7680,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 8124,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_enum_FarmState": {
                  "entryPoint": 7782,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_string": {
                  "entryPoint": 7607,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_uint256_uint256_uint256_uint256_uint256_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 8860,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 7822,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 8229,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 8210,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 8261,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "external_fun_MAX_CLAIM_FEE": {
                  "entryPoint": 7724,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_MAX_STAKERS": {
                  "entryPoint": 7753,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 7573,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_28101": {
                  "entryPoint": 7545,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_canWithdraw": {
                  "entryPoint": 7857,
                  "id": 4261,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "fun_checkInitializing": {
                  "entryPoint": 9663,
                  "id": 370,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 9135,
                  "id": 122,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_emergencyStop_inner": {
                  "entryPoint": 8274,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_getEstimatedAPY": {
                  "entryPoint": 8977,
                  "id": 4196,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_pauseFarm_inner": {
                  "entryPoint": 8884,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_resumeFarm_inner": {
                  "entryPoint": 8425,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_simulateRewards": {
                  "entryPoint": 8523,
                  "id": 4153,
                  "parameterSlots": 1,
                  "returnSlots": 2
                },
                "fun_transferOwnership": {
                  "entryPoint": 9312,
                  "id": 193,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_inner": {
                  "entryPoint": 9087,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_updateRewards": {
                  "entryPoint": 9398,
                  "id": 3725,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_updateUserRewards": {
                  "entryPoint": 9189,
                  "id": 4651,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 8845,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_25ad": {
                  "entryPoint": 8148,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_5e8d": {
                  "entryPoint": 8070,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "storage_array_index_access_address_dyn": {
                  "entryPoint": 7795,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 2
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816202eab714611d315750806306309e4b14611cae57806306fdde0314611c565780630d8e6e2c14611c125780631568b16914611bf457806319262d3014611bc35780631f51bf0c14611aab57806325b500eb146119f157806326712743146119d3578063372500ab146117b35780633ccfd60b1461149a5780633fd8b02f1461147c57806344c4aea91461145357806346800f751461082e578063476343ee146113745780634e94c2851461133d5780635747e69f1461131a5780635c975abb146112d85780635eb186f8146112ab5780635fcbd285146112825780636386c1c71461118a57806363a599a41461116957806367d817401461114d5780636c7ecb781461112c5780636db79437146110975780636f3ba88914610ffe578063715018a614610f94578063779972da14610f5c57806378d60a5b14610f225780637bbfffa514610ef35780638ae39cac14610ed55780638da5cb5b14610e9f5780639003adfe14610e81578063910956aa1461060457806391db7b0d14610e2d57806399d32fc414610e0f5780639fb82db914610c7e578063a113601b14610c5d578063acb422c514610bda578063b507d70f14610bbc578063b6b55f25146109aa578063bb872b4a14610989578063c415b95c14610960578063c74ad49314610927578063ccaad55d14610904578063ce2040c8146108dc578063d2c35ce814610833578063d4b0de2f1461082e578063db03e227146106d9578063dfe6b5d61461062b578063e1e158a514610609578063e1f1c4a714610604578063e766c835146105e6578063e941fa78146105c8578063ee172546146105aa578063f2fde38b1461057f578063f8c8765e146102e35763fd5e6dd11461029c57600080fd5b346102de5760203660031901126102de57600435600b548110156102de576102c5602091611e73565b905460405160039290921b1c6001600160a01b03168152f35b600080fd5b346102de5760803660031901126102de576102fc611e00565b6024356001600160a01b03811691908290036102de5761031a611e16565b606435906001600160a01b03821682036102de5760008051602061260e833981519152549367ffffffffffffffff60ff8660401c1615951680159081610577575b600114908161056d575b159081610564575b506105535784600167ffffffffffffffff1960008051602061260e83398151915254161760008051602061260e83398151915255610521575b6103ae6125bf565b6103b66125bf565b6103be6125bf565b6103c78361237f565b6103cf6125bf565b6103d76125bf565b60ff196000541660005543600a55600160ff19600f541617600f5560405193608085019480861067ffffffffffffffff87111761050b576104b19560405267016345785d8a00008152670de0b6b3a764000060208201526002604082015260604291015267016345785d8a0000600355670de0b6b3a764000060045560026005554260065560005490610100600160a81b039060081b1690610100600160a81b031916176000556001600160601b0360a01b600154161760015560018060a01b03166001600160601b0360a01b6002541617600255612460565b6104b757005b60ff60401b1960008051602061260e833981519152541660008051602061260e833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b634e487b7160e01b600052604160045260246000fd5b600160401b60ff60401b1960008051602061260e83398151915254161760008051602061260e833981519152556103a6565b63f92ee8a960e01b60005260046000fd5b9050158661036d565b303b159150610365565b86915061035b565b346102de5760203660031901126102de576105a861059b611e00565b6105a36123af565b61237f565b005b346102de5760003660031901126102de576020600954604051908152f35b346102de5760003660031901126102de576020601054604051908152f35b346102de5760003660031901126102de576020600754604051908152f35b611e49565b346102de5760003660031901126102de57602060405166038d7ea4c680008152f35b346102de5760003660031901126102de57600080600b54905b818110610689575060c0916106826007546008546009549060ff60005416926040519687526020870152604086015260608501526080840190611e66565b60a0820152f35b61069281611e73565b60018060a01b0391549060031b1c16600052600c60205260ff60056040600020015460081c166106c5575b600101610644565b916106d160019161228d565b9290506106bd565b346102de5760003660031901126102de576106f26123af565b60ff6000541660038110156108185780610807576002600091146107f8578080805b600b548110156107ad5761072781611e73565b905460039190911b1c6001600160a01b0316808552600c602052604085206005015460081c60ff1661075d575b50600101610714565b6107a0600192939461079a836107a6948952600c602052600260408a20015490610786816124b6565b8952600c602052600260408a200154612045565b90611e8e565b9361228d565b9190610754565b507f6ae8ee960d83517f7fa993ad7a0e16e33d9655a23ff41eefc62bdb289c7a8e5f916107f26040519283924291846040919493926060820195825260208201520152565b0390a180f35b633435875f60e11b8152600490fd5b63566498c160e11b60005260046000fd5b634e487b7160e01b600052602160045260246000fd5b611e2c565b346102de5760203660031901126102de5761084c611e00565b6000805160206125ee833981519152546001600160a01b031633036108cc576001600160a01b031680156108bb576020817fe5693914d19c789bdee50a362998c0bc8d035a835f9871da5d51152f0582c34f926001600160601b0360a01b6012541617601255604051908152a1005b63e6c4247b60e01b60005260046000fd5b6282b42960e81b60005260046000fd5b346102de5760003660031901126102de57602060ff600054166109026040518092611e66565bf35b346102de5760003660031901126102de57602061091f612311565b604051908152f35b346102de5760203660031901126102de576004358015158091036102de5761094d6123af565b60ff8019600f5416911617600f55600080f35b346102de5760003660031901126102de576012546040516001600160a01b039091168152602090f35b346102de5760203660031901126102de576109a26123af565b600435601555005b346102de5760203660031901126102de576004356109c7336123e5565b66038d7ea4c680008110610b8657612710600b54101580610b6a575b610b59576001546040516323b872dd60e01b81523360048201523060248201526044810183905290602090829060649082906000906001600160a01b03165af1908115610b4d57600091610b1e575b5015610b0d5733600052600c6020526040600020906005820160ff81541615610abc575b610a61828454611e8e565b835561010061ff0019825416179055610a7c81600754611e8e565b6007556040519081524260208201527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560403392a2600143910155600080f35b600b54600160401b81101561050b57806001610adb9201600b55611e73565b81546001600160a01b0360039290921b91821b19163390911b179055805460ff19166001178155426004840155610a56565b63f45377a960e01b60005260046000fd5b610b40915060203d602011610b46575b610b388183611d95565b810190611fbc565b82610a32565b503d610b2e565b6040513d6000823e3d90fd5b634f26e78960e01b60005260046000fd5b5033600052600c60205260ff60056040600020015416156109e3565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b346102de5760003660031901126102de576020600a54604051908152f35b346102de5760203660031901126102de576001600160a01b03610bfb611e00565b16600052600c60205260e0604060002060ff815491600181015490600281015460038201549060056004840154930154936040519687526020870152604086015260608501526080840152818116151560a084015260081c16151560c0820152f35b346102de5760003660031901126102de57610c766123af565b6105a86122b4565b346102de5760003660031901126102de57600080600b54905b818110610dbf5750610cc1610cab8361229c565b92610cb96040519485611d95565b80845261229c565b602083019190601f190136833760009060005b818110610d295783856040519182916020830190602084525180915260408301919060005b818110610d07575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610cf9565b610d3281611e73565b60018060a01b0391549060031b1c16600052600c60205260ff60056040600020015460081c16610d65575b600101610cd4565b91610d6f83611e73565b9054865160039290921b1c6001600160a01b031690821015610da95781610da191602060019460051b8901015261228d565b929050610d5d565b634e487b7160e01b600052603260045260246000fd5b610dc881611e73565b60018060a01b0391549060031b1c16600052600c60205260ff60056040600020015460081c16610dfb575b600101610c97565b91610e0760019161228d565b929050610df3565b346102de5760003660031901126102de576020601154604051908152f35b346102de5760203660031901126102de577f5dd7b309b7bc5010d9c96159ee535a428121d6803cb847792402fffccaf1569a6040600435610e6c6123af565b600e549080600e5582519182526020820152a1005b346102de5760003660031901126102de576020600854604051908152f35b346102de5760003660031901126102de576000805160206125ee833981519152546040516001600160a01b039091168152602090f35b346102de5760003660031901126102de576020601554604051908152f35b346102de5760203660031901126102de576040610f16610f11611e00565b61214b565b82519182526020820152f35b346102de5760203660031901126102de576001600160a01b03610f43611e00565b16600052600d6020526020604060002054604051908152f35b346102de5760203660031901126102de576000805160206125ee833981519152546001600160a01b031633036108cc57600435600e55005b346102de5760003660031901126102de57610fad6123af565b6000805160206125ee83398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102de5760603660031901126102de576044356024356004356110206123af565b8181116110865760328311611086576110817f81376037ed87033d6b5601a7c8806a8a7a2649525c23fe62315eb82c39c7e2479382600355836004558060055542600655604051938493846040919493926060820195825260208201520152565b0390a1005b631a67164160e21b60005260046000fd5b346102de5760403660031901126102de576000805160206125ee8339815191525460043590602435906001600160a01b031633036108cc576103e8821161111b576103e8811161111b57816040917f5c6323bf1c2d7aaea2c091a4751c1c87af7f2864650c336507a77d0557af37a1936010558060115582519182526020820152a1005b63ac98d7e160e01b60005260046000fd5b346102de5760003660031901126102de576111456123af565b6105a86120e9565b346102de5760003660031901126102de57602060405160328152f35b346102de5760003660031901126102de576111826123af565b6105a8612052565b346102de5760203660031901126102de576111a3611e00565b600060c06040516111b381611d79565b8281528260208201528260408201528260608201528260808201528260a0820152015260018060a01b0316600052600c60205260e06040600020604051906111fa82611d79565b805491828152600182015491602082019283526002810154604083019081526003820154906060840191825260056004840154936080860194855201549460ff60c060a087019682891615158852019660081c161515865260405196875251602087015251604086015251606085015251608084015251151560a083015251151560c0820152f35b346102de5760003660031901126102de576001546040516001600160a01b039091168152602090f35b346102de5760003660031901126102de5760005460405160089190911c6001600160a01b03168152602090f35b346102de5760003660031901126102de57602060ff7fcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f0330054166040519015158152f35b346102de5760003660031901126102de57602060ff600f54166040519015158152f35b346102de5760003660031901126102de57608060035460045460055460065491604051938452602084015260408301526060820152f35b346102de5760003660031901126102de5761138d6123af565b60145461139b811515611f86565b60006014819055805460125460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018590529260209284926044928492909160089190911c165af18015610b4d576113f991600091611434575b50611fd4565b6012546040519182526001600160a01b0316907f1d1349746d782d6dfc3ee165ba93babd914b7585e3d3e5497614f9fe0eb3fc1c90602090a2005b61144d915060203d602011610b4657610b388183611d95565b836113f3565b346102de5760003660031901126102de576002546040516001600160a01b039091168152602090f35b346102de5760003660031901126102de576020600e54604051908152f35b346102de5760003660031901126102de5733600052600c60205260ff60056040600020015460081c1615801561179d575b61178c5760ff60005416600381101561081857600214808061177f575b61176e5733600052600c6020526040600020805491821561175d571560008180611752575b61172b575b50611615575b806000600592550161ff0019815416905561153581600754612045565b6007558060ff60005416600381101561081857600214158061160a575b6115d9575b5060015460405163a9059cbb60e01b81523360048201526024810183905290602090829060449082906000906001600160a01b03165af18015610b4d576115a5916000916114345750611fd4565b6040519081524260208201527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56860403392a2005b90506116016115f86127106115f060105485612012565b048093612045565b91601354611e8e565b60135581611557565b506010541515611552565b61161e336123e5565b600281019081549182611634575b509050611518565b61167e61271061164660115486612012565b049360006116548683612045565b935560038401611665848254611e8e565b905561167385601454611e8e565b601455600954611e8e565b6009556000805460405163a9059cbb60e01b8152336004820152602481018490529491602091869160449183919060081c6001600160a01b03165af1938415610b4d576005946116d59160009161170c5750611fd4565b60405191825260208201527feb6ddaf71011472a18676020a53f58d8146f6997849d9b61afe146fe79ab0bd960403392a28361162c565b611725915060203d602011610b4657610b388183611d95565b876113f3565b61173c6004840154600e5490611e8e565b42101561151257631958598b60e01b8152600490fd5b50600e54151561150d565b638339c1ad60e01b60005260046000fd5b633435875f60e11b60005260046000fd5b5060ff600f5416156114e8565b6327b9597960e01b60005260046000fd5b5033600052600c602052604060002054156114cb565b346102de5760003660031901126102de5760ff60005416600381101561081857610807576117e0336123e5565b33600052600c6020526040600020600281019081549081156119a15761271061180b60115484612012565b04916118178382612045565b6000546040516370a0823160e01b8152306004820152919591906020908290602490829060081c6001600160a01b03165afa8015610b4d57869160009161196c575b5010611927576118839260006003925501611875858254611e8e565b905561167383601454611e8e565b6009556000805460405163a9059cbb60e01b81523360048201526024810185905291602091839160449183919060081c6001600160a01b03165af18015610b4d576118d5916000916119085750611fd4565b60405191825260208201527feb6ddaf71011472a18676020a53f58d8146f6997849d9b61afe146fe79ab0bd960403392a2005b611921915060203d602011610b4657610b388183611d95565b846113f3565b60405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606490fd5b9150506020813d602011611999575b8161198860209383611d95565b810103126102de5785905187611859565b3d915061197b565b60405162461bcd60e51b815260206004820152600a6024820152694e6f207265776172647360b01b6044820152606490fd5b346102de5760003660031901126102de576020601454604051908152f35b346102de5760003660031901126102de57611a0a6123af565b601354611a18811515611f86565b6000601381905560015460125460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905292602092849260449284929091165af18015610b4d57611a70916000916114345750611fd4565b6012546040519182526001600160a01b0316907f1e2e6257ac7187b1133b17d3e1e24c28bc4f84273e03229e9fac633c1705dc5f90602090a2005b346102de5760603660031901126102de57602435600435611aca611e16565b9160008051602061260e8339815191525460ff8160401c16908115611bad575b5061055357600267ffffffffffffffff1960008051602061260e83398151915254161760008051602061260e8339815191525560ff60401b1960008051602061260e8339815191525416926103e8831161111b576103e8821161111b576001600160a01b03169182156108bb576010556011556001600160601b0360a01b601254161760125560008051602061260e833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160028152a1005b6002915067ffffffffffffffff16101584611aea565b346102de5760203660031901126102de576040611be6611be1611e00565b611eb1565b825191151582526020820152f35b346102de5760003660031901126102de576020601354604051908152f35b346102de5760003660031901126102de57611c52604051611c34604082611d95565b60058152640322e302e360dc1b602082015260405191829182611db7565b0390f35b346102de5760003660031901126102de57611c52604051611c78604082611d95565b601781527f50726f706f7274696f6e616c20546f6b656e204661726d000000000000000000602082015260405191829182611db7565b346102de5760203660031901126102de576004356001600160a01b038116908190036102de57611cdc6123af565b80156110865760407fe4cec16b1a7e6b7979e923da619a8b1e5fd0f0fb6e5c1cf647f350430ee61ca99160025490806001600160601b0360a01b83161760025582519160018060a01b031682526020820152a1005b346102de5760003660031901126102de576010546011546013546014546012549385526020850192909252604084015260608301526001600160a01b0316608082015260a090f35b60e0810190811067ffffffffffffffff82111761050b57604052565b90601f8019910116810190811067ffffffffffffffff82111761050b57604052565b91909160208152825180602083015260005b818110611dea575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201611dc9565b600435906001600160a01b03821682036102de57565b604435906001600160a01b03821682036102de57565b346102de5760003660031901126102de5760206040516103e88152f35b346102de5760003660031901126102de5760206040516127108152f35b9060038210156108185752565b600b54811015610da957600b60005260206000200190600090565b91908201809211611e9b57565b634e487b7160e01b600052601160045260246000fd5b60018060a01b0316600052600c602052604060002060c0604051611ed481611d79565b82549081815260018401546020820152600284015460408201526003840154606082015260ff6005600486015495608084019687520154818116151560a084015260081c1615908115938491015291611f7d575b50611f745760ff60005416600381101561081857600214611f6757600e548015611f5d57611f569151611e8e565b4281111591565b5050600190600090565b5060ff600f541690600090565b50600090600090565b90501538611f28565b15611f8d57565b60405162461bcd60e51b81526020600482015260076024820152664e6f206665657360c81b6044820152606490fd5b908160209103126102de575180151581036102de5790565b15611fdb57565b60405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606490fd5b81810292918115918404141715611e9b57565b811561202f570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211611e9b57565b60ff60005416600381101561081857600281146120e65760407fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d891600260ff1960005416176000556120b960ff600054166120af84518094611e66565b6020830190611e66565ba17f1e8ac57e9803840915f0284b77b570a882fb2db69108ac8eba578bb30fcaf1526020604051428152a1565b50565b60ff6000541660038110156108185780156120e6576000600282146107f857805460ff19169055604080517fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d892612148906000906120af908490611e66565ba1565b9060018060a01b038216600052600c602052604060002060405161216e81611d79565b815481526001820154806020830152600283015460ff6005604085019583875260038101546060870152600481015460808701520154818116151560a086015260081c16158015908160c086015290612283575b6122785750906121d460209243612045565b60025491516007546003546004805460405163a0acbec360e01b81529182019590955260248101939093526044830191909152606482015260848101919091526001600160a01b0395861660a482015294859160c4918391165afa928315610b4d57600093612244575b50519190565b9092506020813d602011612270575b8161226060209383611d95565b810103126102de5751913861223e565b3d9150612253565b945060009392505050565b50600754156121c2565b6000198114611e9b5760010190565b67ffffffffffffffff811161050b5760051b60200190565b60ff60005416600381101561081857600181146120e65760407fe8a97ea87e4388fa22d496b95a8ed5ced6717f49790318de2b928aaf37a021d891600160ff19600054161760005561214860ff600054166120af84518094611e66565b60075480156123795761232960035460045490611e8e565b60011c906117708202918083046117701481151715611e9b5762216ab081029280840461016d1490151715611e9b57630d0dacc0029180830460641490151715611e9b5761237691612025565b90565b50600090565b6001600160a01b038116156123995761239790612460565b565b631e4fbdf760e01b600052600060045260246000fd5b6000805160206125ee833981519152546001600160a01b031633036123d057565b63118cdaa760e01b6000523360045260246000fd5b60018060a01b0316600052600c60205260406000206001810190815480431180612456575b61241357505050565b600261244561243c61243461242b61244f9543612045565b60155490612012565b855490612012565b60075490612025565b9201918254611e8e565b9055439055565b508154151561240a565b6000805160206125ee83398151915280546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b60018060a01b038116600052600c602052604060002090600182019182548043118015906125b5575b80156125ac575b6125a6576124f660209143612045565b60025483546007546003546004805460405163a0acbec360e01b81529182019690965260248101939093526044830191909152606482015260848101929092526001600160a01b0394851660a48301529093849160c4918391165afa918215610b4d57600092612571575b50600261244f9101918254611e8e565b9091506020813d60201161259e575b8161258d60209383611d95565b810103126102de5751906002612561565b3d9150612580565b50505050565b508154156124e6565b50600754156124df565b60ff60008051602061260e8339815191525460401c16156125dc57565b631afcd79f60e31b60005260046000fdfe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212204ce0a3828bf3b58b37c61157fed076d480b23b75eff009dcc797b27a80df779164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x2EAB7 EQ PUSH2 0x1D31 JUMPI POP DUP1 PUSH4 0x6309E4B EQ PUSH2 0x1CAE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C56 JUMPI DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x1C12 JUMPI DUP1 PUSH4 0x1568B169 EQ PUSH2 0x1BF4 JUMPI DUP1 PUSH4 0x19262D30 EQ PUSH2 0x1BC3 JUMPI DUP1 PUSH4 0x1F51BF0C EQ PUSH2 0x1AAB JUMPI DUP1 PUSH4 0x25B500EB EQ PUSH2 0x19F1 JUMPI DUP1 PUSH4 0x26712743 EQ PUSH2 0x19D3 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x17B3 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x149A JUMPI DUP1 PUSH4 0x3FD8B02F EQ PUSH2 0x147C JUMPI DUP1 PUSH4 0x44C4AEA9 EQ PUSH2 0x1453 JUMPI DUP1 PUSH4 0x46800F75 EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0x476343EE EQ PUSH2 0x1374 JUMPI DUP1 PUSH4 0x4E94C285 EQ PUSH2 0x133D JUMPI DUP1 PUSH4 0x5747E69F EQ PUSH2 0x131A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x12D8 JUMPI DUP1 PUSH4 0x5EB186F8 EQ PUSH2 0x12AB JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x1282 JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x118A JUMPI DUP1 PUSH4 0x63A599A4 EQ PUSH2 0x1169 JUMPI DUP1 PUSH4 0x67D81740 EQ PUSH2 0x114D JUMPI DUP1 PUSH4 0x6C7ECB78 EQ PUSH2 0x112C JUMPI DUP1 PUSH4 0x6DB79437 EQ PUSH2 0x1097 JUMPI DUP1 PUSH4 0x6F3BA889 EQ PUSH2 0xFFE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF94 JUMPI DUP1 PUSH4 0x779972DA EQ PUSH2 0xF5C JUMPI DUP1 PUSH4 0x78D60A5B EQ PUSH2 0xF22 JUMPI DUP1 PUSH4 0x7BBFFFA5 EQ PUSH2 0xEF3 JUMPI DUP1 PUSH4 0x8AE39CAC EQ PUSH2 0xED5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE9F JUMPI DUP1 PUSH4 0x9003ADFE EQ PUSH2 0xE81 JUMPI DUP1 PUSH4 0x910956AA EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x91DB7B0D EQ PUSH2 0xE2D JUMPI DUP1 PUSH4 0x99D32FC4 EQ PUSH2 0xE0F JUMPI DUP1 PUSH4 0x9FB82DB9 EQ PUSH2 0xC7E JUMPI DUP1 PUSH4 0xA113601B EQ PUSH2 0xC5D JUMPI DUP1 PUSH4 0xACB422C5 EQ PUSH2 0xBDA JUMPI DUP1 PUSH4 0xB507D70F EQ PUSH2 0xBBC JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x9AA JUMPI DUP1 PUSH4 0xBB872B4A EQ PUSH2 0x989 JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x960 JUMPI DUP1 PUSH4 0xC74AD493 EQ PUSH2 0x927 JUMPI DUP1 PUSH4 0xCCAAD55D EQ PUSH2 0x904 JUMPI DUP1 PUSH4 0xCE2040C8 EQ PUSH2 0x8DC JUMPI DUP1 PUSH4 0xD2C35CE8 EQ PUSH2 0x833 JUMPI DUP1 PUSH4 0xD4B0DE2F EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0xDB03E227 EQ PUSH2 0x6D9 JUMPI DUP1 PUSH4 0xDFE6B5D6 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xE1E158A5 EQ PUSH2 0x609 JUMPI DUP1 PUSH4 0xE1F1C4A7 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xE766C835 EQ PUSH2 0x5E6 JUMPI DUP1 PUSH4 0xE941FA78 EQ PUSH2 0x5C8 JUMPI DUP1 PUSH4 0xEE172546 EQ PUSH2 0x5AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x57F JUMPI DUP1 PUSH4 0xF8C8765E EQ PUSH2 0x2E3 JUMPI PUSH4 0xFD5E6DD1 EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2DE JUMPI PUSH2 0x2C5 PUSH1 0x20 SWAP2 PUSH2 0x1E73 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x2FC PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x2DE JUMPI PUSH2 0x31A PUSH2 0x1E16 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xFF DUP7 PUSH1 0x40 SHR AND ISZERO SWAP6 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x577 JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x56D JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x564 JUMPI JUMPDEST POP PUSH2 0x553 JUMPI DUP5 PUSH1 0x1 PUSH8 0xFFFFFFFFFFFFFFFF NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x521 JUMPI JUMPDEST PUSH2 0x3AE PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x3B6 PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x3BE PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x3C7 DUP4 PUSH2 0x237F JUMP JUMPDEST PUSH2 0x3CF PUSH2 0x25BF JUMP JUMPDEST PUSH2 0x3D7 PUSH2 0x25BF JUMP JUMPDEST PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND PUSH1 0x0 SSTORE NUMBER PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0xF SLOAD AND OR PUSH1 0xF SSTORE PUSH1 0x40 MLOAD SWAP4 PUSH1 0x80 DUP6 ADD SWAP5 DUP1 DUP7 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP8 GT OR PUSH2 0x50B JUMPI PUSH2 0x4B1 SWAP6 PUSH1 0x40 MSTORE PUSH8 0x16345785D8A0000 DUP2 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 TIMESTAMP SWAP2 ADD MSTORE PUSH8 0x16345785D8A0000 PUSH1 0x3 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SSTORE PUSH1 0x2 PUSH1 0x5 SSTORE TIMESTAMP PUSH1 0x6 SSTORE PUSH1 0x0 SLOAD SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB SWAP1 PUSH1 0x8 SHL AND SWAP1 PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x2460 JUMP JUMPDEST PUSH2 0x4B7 JUMPI STOP JUMPDEST PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH2 0x3A6 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO DUP7 PUSH2 0x36D JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x365 JUMP JUMPDEST DUP7 SWAP2 POP PUSH2 0x35B JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x5A8 PUSH2 0x59B PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x5A3 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x237F JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x1E49 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH7 0x38D7EA4C68000 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 PUSH1 0xB SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x689 JUMPI POP PUSH1 0xC0 SWAP2 PUSH2 0x682 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP1 PUSH1 0xFF PUSH1 0x0 SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP1 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0x6C5 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x644 JUMP JUMPDEST SWAP2 PUSH2 0x6D1 PUSH1 0x1 SWAP2 PUSH2 0x228D JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x6BD JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x6F2 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI DUP1 PUSH2 0x807 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP2 EQ PUSH2 0x7F8 JUMPI DUP1 DUP1 DUP1 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x7AD JUMPI PUSH2 0x727 DUP2 PUSH2 0x1E73 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP6 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x8 SHR PUSH1 0xFF AND PUSH2 0x75D JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x714 JUMP JUMPDEST PUSH2 0x7A0 PUSH1 0x1 SWAP3 SWAP4 SWAP5 PUSH2 0x79A DUP4 PUSH2 0x7A6 SWAP5 DUP10 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD SWAP1 PUSH2 0x786 DUP2 PUSH2 0x24B6 JUMP JUMPDEST DUP10 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x2 PUSH1 0x40 DUP11 KECCAK256 ADD SLOAD PUSH2 0x2045 JUMP JUMPDEST SWAP1 PUSH2 0x1E8E JUMP JUMPDEST SWAP4 PUSH2 0x228D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x754 JUMP JUMPDEST POP PUSH32 0x6AE8EE960D83517F7FA993AD7A0E16E33D9655A23FF41EEFC62BDB289C7A8E5F SWAP2 PUSH2 0x7F2 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST PUSH4 0x3435875F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x566498C1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E2C JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x84C PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x8CC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x20 DUP2 PUSH32 0xE5693914D19C789BDEE50A362998C0BC8D035A835F9871DA5D51152F0582C34F SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x12 SLOAD AND OR PUSH1 0x12 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0xE6C4247B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x82B429 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH2 0x902 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1E66 JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH2 0x91F PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x2DE JUMPI PUSH2 0x94D PUSH2 0x23AF JUMP JUMPDEST PUSH1 0xFF DUP1 NOT PUSH1 0xF SLOAD AND SWAP2 AND OR PUSH1 0xF SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x9A2 PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x15 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x9C7 CALLER PUSH2 0x23E5 JUMP JUMPDEST PUSH7 0x38D7EA4C68000 DUP2 LT PUSH2 0xB86 JUMPI PUSH2 0x2710 PUSH1 0xB SLOAD LT ISZERO DUP1 PUSH2 0xB6A JUMPI JUMPDEST PUSH2 0xB59 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 SWAP2 PUSH2 0xB1E JUMPI JUMPDEST POP ISZERO PUSH2 0xB0D JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD PUSH1 0xFF DUP2 SLOAD AND ISZERO PUSH2 0xABC JUMPI JUMPDEST PUSH2 0xA61 DUP3 DUP5 SLOAD PUSH2 0x1E8E JUMP JUMPDEST DUP4 SSTORE PUSH2 0x100 PUSH2 0xFF00 NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0xA7C DUP2 PUSH1 0x7 SLOAD PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x40 CALLER SWAP3 LOG2 PUSH1 0x1 NUMBER SWAP2 ADD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x50B JUMPI DUP1 PUSH1 0x1 PUSH2 0xADB SWAP3 ADD PUSH1 0xB SSTORE PUSH2 0x1E73 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND CALLER SWAP1 SWAP2 SHL OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE TIMESTAMP PUSH1 0x4 DUP5 ADD SSTORE PUSH2 0xA56 JUMP JUMPDEST PUSH4 0xF45377A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xB40 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB46 JUMPI JUMPDEST PUSH2 0xB38 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1FBC JUMP JUMPDEST DUP3 PUSH2 0xA32 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xB2E JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4F26E789 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0x9E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xBFB PUSH2 0x1E00 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF DUP2 SLOAD SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0xC76 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x5A8 PUSH2 0x22B4 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 PUSH1 0xB SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0xDBF JUMPI POP PUSH2 0xCC1 PUSH2 0xCAB DUP4 PUSH2 0x229C JUMP JUMPDEST SWAP3 PUSH2 0xCB9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1D95 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH2 0x229C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP4 CALLDATACOPY PUSH1 0x0 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD29 JUMPI DUP4 DUP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD07 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xD32 DUP2 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0xD65 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xCD4 JUMP JUMPDEST SWAP2 PUSH2 0xD6F DUP4 PUSH2 0x1E73 JUMP JUMPDEST SWAP1 SLOAD DUP7 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 LT ISZERO PUSH2 0xDA9 JUMPI DUP2 PUSH2 0xDA1 SWAP2 PUSH1 0x20 PUSH1 0x1 SWAP5 PUSH1 0x5 SHL DUP10 ADD ADD MSTORE PUSH2 0x228D JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xD5D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xDC8 DUP2 PUSH2 0x1E73 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND PUSH2 0xDFB JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0xC97 JUMP JUMPDEST SWAP2 PUSH2 0xE07 PUSH1 0x1 SWAP2 PUSH2 0x228D JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xDF3 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH32 0x5DD7B309B7BC5010D9C96159EE535A428121D6803CB847792402FFFCCAF1569A PUSH1 0x40 PUSH1 0x4 CALLDATALOAD PUSH2 0xE6C PUSH2 0x23AF JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 DUP1 PUSH1 0xE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x15 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x40 PUSH2 0xF16 PUSH2 0xF11 PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x214B JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xF43 PUSH2 0x1E00 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x8CC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xE SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0xFAD PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1020 PUSH2 0x23AF JUMP JUMPDEST DUP2 DUP2 GT PUSH2 0x1086 JUMPI PUSH1 0x32 DUP4 GT PUSH2 0x1086 JUMPI PUSH2 0x1081 PUSH32 0x81376037ED87033D6B5601A7C8806A8A7A2649525C23FE62315EB82C39C7E247 SWAP4 DUP3 PUSH1 0x3 SSTORE DUP4 PUSH1 0x4 SSTORE DUP1 PUSH1 0x5 SSTORE TIMESTAMP PUSH1 0x6 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST PUSH4 0x1A671641 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x8CC JUMPI PUSH2 0x3E8 DUP3 GT PUSH2 0x111B JUMPI PUSH2 0x3E8 DUP2 GT PUSH2 0x111B JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH32 0x5C6323BF1C2D7AAEA2C091A4751C1C87AF7F2864650C336507A77D0557AF37A1 SWAP4 PUSH1 0x10 SSTORE DUP1 PUSH1 0x11 SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST PUSH4 0xAC98D7E1 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x1145 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x5A8 PUSH2 0x20E9 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x32 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x1182 PUSH2 0x23AF JUMP JUMPDEST PUSH2 0x5A8 PUSH2 0x2052 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x11A3 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 PUSH1 0x40 MLOAD PUSH2 0x11B3 DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xE0 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x11FA DUP3 PUSH2 0x1D79 JUMP JUMPDEST DUP1 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP1 PUSH1 0x60 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 PUSH1 0x80 DUP7 ADD SWAP5 DUP6 MSTORE ADD SLOAD SWAP5 PUSH1 0xFF PUSH1 0xC0 PUSH1 0xA0 DUP8 ADD SWAP7 DUP3 DUP10 AND ISZERO ISZERO DUP9 MSTORE ADD SWAP7 PUSH1 0x8 SHR AND ISZERO ISZERO DUP7 MSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE MLOAD PUSH1 0x20 DUP8 ADD MSTORE MLOAD PUSH1 0x40 DUP7 ADD MSTORE MLOAD PUSH1 0x60 DUP6 ADD MSTORE MLOAD PUSH1 0x80 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0xC0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH32 0xCD5ED15C6E187E77E9AEE88184C21F4F2182AB5827CB3B7E07FBEDCD63F03300 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0xF SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x80 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x138D PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x14 SLOAD PUSH2 0x139B DUP2 ISZERO ISZERO PUSH2 0x1F86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH1 0x44 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR AND GAS CALL DUP1 ISZERO PUSH2 0xB4D JUMPI PUSH2 0x13F9 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1434 JUMPI JUMPDEST POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x1D1349746D782D6DFC3EE165BA93BABD914B7585E3D3E5497614F9FE0EB3FC1C SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST PUSH2 0x144D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB46 JUMPI PUSH2 0xB38 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP4 PUSH2 0x13F3 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x8 SHR AND ISZERO DUP1 ISZERO PUSH2 0x179D JUMPI JUMPDEST PUSH2 0x178C JUMPI PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x2 EQ DUP1 DUP1 PUSH2 0x177F JUMPI JUMPDEST PUSH2 0x176E JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x175D JUMPI ISZERO PUSH1 0x0 DUP2 DUP1 PUSH2 0x1752 JUMPI JUMPDEST PUSH2 0x172B JUMPI JUMPDEST POP PUSH2 0x1615 JUMPI JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x5 SWAP3 SSTORE ADD PUSH2 0xFF00 NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH2 0x1535 DUP2 PUSH1 0x7 SLOAD PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x7 SSTORE DUP1 PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x2 EQ ISZERO DUP1 PUSH2 0x160A JUMPI JUMPDEST PUSH2 0x15D9 JUMPI JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xB4D JUMPI PUSH2 0x15A5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1434 JUMPI POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST SWAP1 POP PUSH2 0x1601 PUSH2 0x15F8 PUSH2 0x2710 PUSH2 0x15F0 PUSH1 0x10 SLOAD DUP6 PUSH2 0x2012 JUMP JUMPDEST DIV DUP1 SWAP4 PUSH2 0x2045 JUMP JUMPDEST SWAP2 PUSH1 0x13 SLOAD PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x13 SSTORE DUP2 PUSH2 0x1557 JUMP JUMPDEST POP PUSH1 0x10 SLOAD ISZERO ISZERO PUSH2 0x1552 JUMP JUMPDEST PUSH2 0x161E CALLER PUSH2 0x23E5 JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SWAP1 DUP2 SLOAD SWAP2 DUP3 PUSH2 0x1634 JUMPI JUMPDEST POP SWAP1 POP PUSH2 0x1518 JUMP JUMPDEST PUSH2 0x167E PUSH2 0x2710 PUSH2 0x1646 PUSH1 0x11 SLOAD DUP7 PUSH2 0x2012 JUMP JUMPDEST DIV SWAP4 PUSH1 0x0 PUSH2 0x1654 DUP7 DUP4 PUSH2 0x2045 JUMP JUMPDEST SWAP4 SSTORE PUSH1 0x3 DUP5 ADD PUSH2 0x1665 DUP5 DUP3 SLOAD PUSH2 0x1E8E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1673 DUP6 PUSH1 0x14 SLOAD PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x14 SSTORE PUSH1 0x9 SLOAD PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP2 PUSH1 0x20 SWAP2 DUP7 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0xB4D JUMPI PUSH1 0x5 SWAP5 PUSH2 0x16D5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x170C JUMPI POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xEB6DDAF71011472A18676020A53F58D8146F6997849D9B61AFE146FE79AB0BD9 PUSH1 0x40 CALLER SWAP3 LOG2 DUP4 PUSH2 0x162C JUMP JUMPDEST PUSH2 0x1725 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB46 JUMPI PUSH2 0xB38 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP8 PUSH2 0x13F3 JUMP JUMPDEST PUSH2 0x173C PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0xE SLOAD SWAP1 PUSH2 0x1E8E JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x1512 JUMPI PUSH4 0x1958598B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD ISZERO ISZERO PUSH2 0x150D JUMP JUMPDEST PUSH4 0x8339C1AD PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x3435875F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0xF SLOAD AND ISZERO PUSH2 0x14E8 JUMP JUMPDEST PUSH4 0x27B95979 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH2 0x14CB JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH2 0x807 JUMPI PUSH2 0x17E0 CALLER PUSH2 0x23E5 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP1 DUP2 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x19A1 JUMPI PUSH2 0x2710 PUSH2 0x180B PUSH1 0x11 SLOAD DUP5 PUSH2 0x2012 JUMP JUMPDEST DIV SWAP2 PUSH2 0x1817 DUP4 DUP3 PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP6 SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0xB4D JUMPI DUP7 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x196C JUMPI JUMPDEST POP LT PUSH2 0x1927 JUMPI PUSH2 0x1883 SWAP3 PUSH1 0x0 PUSH1 0x3 SWAP3 SSTORE ADD PUSH2 0x1875 DUP6 DUP3 SLOAD PUSH2 0x1E8E JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1673 DUP4 PUSH1 0x14 SLOAD PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x8 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0xB4D JUMPI PUSH2 0x18D5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1908 JUMPI POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xEB6DDAF71011472A18676020A53F58D8146F6997849D9B61AFE146FE79AB0BD9 PUSH1 0x40 CALLER SWAP3 LOG2 STOP JUMPDEST PUSH2 0x1921 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB46 JUMPI PUSH2 0xB38 DUP2 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP5 PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1999 JUMPI JUMPDEST DUP2 PUSH2 0x1988 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2DE JUMPI DUP6 SWAP1 MLOAD DUP8 PUSH2 0x1859 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x197B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E6F2072657761726473 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x14 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x1A0A PUSH2 0x23AF JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH2 0x1A18 DUP2 ISZERO ISZERO PUSH2 0x1F86 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x13 DUP2 SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP3 PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH1 0x44 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0xB4D JUMPI PUSH2 0x1A70 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1434 JUMPI POP PUSH2 0x1FD4 JUMP JUMPDEST PUSH1 0x12 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x1E2E6257AC7187B1133B17D3E1E24C28BC4F84273E03229E9FAC633C1705DC5F SWAP1 PUSH1 0x20 SWAP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1ACA PUSH2 0x1E16 JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND SWAP1 DUP2 ISZERO PUSH2 0x1BAD JUMPI JUMPDEST POP PUSH2 0x553 JUMPI PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH1 0xFF PUSH1 0x40 SHL NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND SWAP3 PUSH2 0x3E8 DUP4 GT PUSH2 0x111B JUMPI PUSH2 0x3E8 DUP3 GT PUSH2 0x111B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x10 SSTORE PUSH1 0x11 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x12 SLOAD AND OR PUSH1 0x12 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x2 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x2 SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO DUP5 PUSH2 0x1AEA JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x40 PUSH2 0x1BE6 PUSH2 0x1BE1 PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x1EB1 JUMP JUMPDEST DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x13 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x1C52 PUSH1 0x40 MLOAD PUSH2 0x1C34 PUSH1 0x40 DUP3 PUSH2 0x1D95 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x322E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH2 0x1C52 PUSH1 0x40 MLOAD PUSH2 0x1C78 PUSH1 0x40 DUP3 PUSH2 0x1D95 JUMP JUMPDEST PUSH1 0x17 DUP2 MSTORE PUSH32 0x50726F706F7274696F6E616C20546F6B656E204661726D000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1DB7 JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x2DE JUMPI PUSH2 0x1CDC PUSH2 0x23AF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1086 JUMPI PUSH1 0x40 PUSH32 0xE4CEC16B1A7E6B7979E923DA619A8B1E5FD0F0FB6E5C1CF647F350430EE61CA9 SWAP2 PUSH1 0x2 SLOAD SWAP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP4 AND OR PUSH1 0x2 SSTORE DUP3 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x10 SLOAD PUSH1 0x11 SLOAD PUSH1 0x13 SLOAD PUSH1 0x14 SLOAD PUSH1 0x12 SLOAD SWAP4 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 SWAP1 RETURN JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1DEA JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1DC9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2DE JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2DE JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3E8 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2DE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2DE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x2710 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x818 JUMPI MSTORE JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xDA9 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1E9B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xC0 PUSH1 0x40 MLOAD PUSH2 0x1ED4 DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP3 SLOAD SWAP1 DUP2 DUP2 MSTORE PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP5 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 PUSH1 0x80 DUP5 ADD SWAP7 DUP8 MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x8 SHR AND ISZERO SWAP1 DUP2 ISZERO SWAP4 DUP5 SWAP2 ADD MSTORE SWAP2 PUSH2 0x1F7D JUMPI JUMPDEST POP PUSH2 0x1F74 JUMPI PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x2 EQ PUSH2 0x1F67 JUMPI PUSH1 0xE SLOAD DUP1 ISZERO PUSH2 0x1F5D JUMPI PUSH2 0x1F56 SWAP2 MLOAD PUSH2 0x1E8E JUMP JUMPDEST TIMESTAMP DUP2 GT ISZERO SWAP2 JUMP JUMPDEST POP POP PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0xF SLOAD AND SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 POP ISZERO CODESIZE PUSH2 0x1F28 JUMP JUMPDEST ISZERO PUSH2 0x1F8D JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x4E6F2066656573 PUSH1 0xC8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2DE JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2DE JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x1FDB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1E9B JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x202F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1E9B JUMPI JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x20E6 JUMPI PUSH1 0x40 PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP2 PUSH1 0x2 PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x20B9 PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH2 0x20AF DUP5 MLOAD DUP1 SWAP5 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1E66 JUMP JUMPDEST LOG1 PUSH32 0x1E8AC57E9803840915F0284B77B570A882FB2DB69108AC8EBA578BB30FCAF152 PUSH1 0x20 PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE LOG1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI DUP1 ISZERO PUSH2 0x20E6 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 EQ PUSH2 0x7F8 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP3 PUSH2 0x2148 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x20AF SWAP1 DUP5 SWAP1 PUSH2 0x1E66 JUMP JUMPDEST LOG1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x216E DUP2 PUSH2 0x1D79 JUMP JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 DUP6 ADD SWAP6 DUP4 DUP8 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE ADD SLOAD DUP2 DUP2 AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x8 SHR AND ISZERO DUP1 ISZERO SWAP1 DUP2 PUSH1 0xC0 DUP7 ADD MSTORE SWAP1 PUSH2 0x2283 JUMPI JUMPDEST PUSH2 0x2278 JUMPI POP SWAP1 PUSH2 0x21D4 PUSH1 0x20 SWAP3 NUMBER PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP2 MLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA0ACBEC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0xA4 DUP3 ADD MSTORE SWAP5 DUP6 SWAP2 PUSH1 0xC4 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 SWAP4 PUSH2 0x2244 JUMPI JUMPDEST POP MLOAD SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2270 JUMPI JUMPDEST DUP2 PUSH2 0x2260 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2DE JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x223E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2253 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x7 SLOAD ISZERO PUSH2 0x21C2 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1E9B JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x50B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x818 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x20E6 JUMPI PUSH1 0x40 PUSH32 0xE8A97EA87E4388FA22D496B95A8ED5CED6717F49790318DE2B928AAF37A021D8 SWAP2 PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH2 0x2148 PUSH1 0xFF PUSH1 0x0 SLOAD AND PUSH2 0x20AF DUP5 MLOAD DUP1 SWAP5 PUSH2 0x1E66 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP1 ISZERO PUSH2 0x2379 JUMPI PUSH2 0x2329 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP1 PUSH2 0x1E8E JUMP JUMPDEST PUSH1 0x1 SHR SWAP1 PUSH2 0x1770 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH2 0x1770 EQ DUP2 ISZERO OR ISZERO PUSH2 0x1E9B JUMPI PUSH3 0x216AB0 DUP2 MUL SWAP3 DUP1 DUP5 DIV PUSH2 0x16D EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1E9B JUMPI PUSH4 0xD0DACC0 MUL SWAP2 DUP1 DUP4 DIV PUSH1 0x64 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1E9B JUMPI PUSH2 0x2376 SWAP2 PUSH2 0x2025 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x2399 JUMPI PUSH2 0x2397 SWAP1 PUSH2 0x2460 JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x23D0 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 ADD SWAP1 DUP2 SLOAD DUP1 NUMBER GT DUP1 PUSH2 0x2456 JUMPI JUMPDEST PUSH2 0x2413 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH2 0x2445 PUSH2 0x243C PUSH2 0x2434 PUSH2 0x242B PUSH2 0x244F SWAP6 NUMBER PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x15 SLOAD SWAP1 PUSH2 0x2012 JUMP JUMPDEST DUP6 SLOAD SWAP1 PUSH2 0x2012 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0x2025 JUMP JUMPDEST SWAP3 ADD SWAP2 DUP3 SLOAD PUSH2 0x1E8E JUMP JUMPDEST SWAP1 SSTORE NUMBER SWAP1 SSTORE JUMP JUMPDEST POP DUP2 SLOAD ISZERO ISZERO PUSH2 0x240A JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x25EE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP3 ADD SWAP2 DUP3 SLOAD DUP1 NUMBER GT DUP1 ISZERO SWAP1 PUSH2 0x25B5 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x25AC JUMPI JUMPDEST PUSH2 0x25A6 JUMPI PUSH2 0x24F6 PUSH1 0x20 SWAP2 NUMBER PUSH2 0x2045 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP4 SLOAD PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA0ACBEC3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x24 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x44 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0xA4 DUP4 ADD MSTORE SWAP1 SWAP4 DUP5 SWAP2 PUSH1 0xC4 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2571 JUMPI JUMPDEST POP PUSH1 0x2 PUSH2 0x244F SWAP2 ADD SWAP2 DUP3 SLOAD PUSH2 0x1E8E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x259E JUMPI JUMPDEST DUP2 PUSH2 0x258D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1D95 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2DE JUMPI MLOAD SWAP1 PUSH1 0x2 PUSH2 0x2561 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2580 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP DUP2 SLOAD ISZERO PUSH2 0x24E6 JUMP JUMPDEST POP PUSH1 0x7 SLOAD ISZERO PUSH2 0x24DF JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x260E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x25DC JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x706673582212204CE0A3 DUP3 DUP12 RETURN 0xB5 DUP12 CALLDATACOPY 0xC6 GT JUMPI INVALID 0xD0 PUSH23 0xD480B23B75EFF009DCC797B27A80DF779164736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "389:8739:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;2550:24:24;389:8739:25;2550:24:24;;;;;;389:8739:25;2550:24:24;;:::i;:::-;389:8739:25;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;;;;2550:24:24;389:8739:25;2550:24:24;;389:8739:25;;;;;;-1:-1:-1;;389:8739:25;;;;;;:::i;:::-;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;389:8739:25;;;;;;-1:-1:-1;;;;;;;;;;;389:8739:25;;;;;;;;4301:16:1;389:8739:25;;4724:16:1;;:34;;;;389:8739:25;4803:1:1;4788:16;:50;;;;389:8739:25;4853:13:1;:30;;;;389:8739:25;4849:91:1;;;389:8739:25;4803:1:1;389:8739:25;;-1:-1:-1;;;;;;;;;;;389:8739:25;;;-1:-1:-1;;;;;;;;;;;389:8739:25;4977:67:1;;389:8739:25;6891:76:1;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;6959:1;;;:::i;:::-;6891:76;;:::i;:::-;;;:::i;:::-;389:8739:25;;-1:-1:-1;389:8739:25;;-1:-1:-1;389:8739:25;4613:12:24;4596:29;389:8739:25;4803:1:1;389:8739:25;;4636:31:24;389:8739:25;;;4636:31:24;389:8739:25;;;;;;;;;;;;;;;;;5353:6:24;389:8739:25;;;4744:4:24;389:8739:25;;4776:4:24;389:8739:25;4703:159:24;;389:8739:25;4807:1:24;389:8739:25;4703:159:24;;389:8739:25;;4835:15:24;4703:159;;389:8739:25;4744:4:24;4688:174;389:8739:25;4776:4:24;389:8739:25;;4807:1:24;389:8739:25;;4835:15:24;389:8739:25;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;;4803:1:1;389:8739:25;;;4803:1:1;389:8739:25;;;;;;;-1:-1:-1;;;;;389:8739:25;;4807:1:24;389:8739:25;;;4807:1:24;389:8739:25;5353:6:24;:::i;:::-;5064:101:1;;389:8739:25;5064:101:1;-1:-1:-1;;;389:8739:25;-1:-1:-1;;;;;;;;;;;389:8739:25;;-1:-1:-1;;;;;;;;;;;389:8739:25;5140:14:1;389:8739:25;;;4803:1:1;389:8739:25;;5140:14:1;389:8739:25;;;;;;;;;;;;;4977:67:1;-1:-1:-1;;;;;;389:8739:25;-1:-1:-1;;;;;;;;;;;389:8739:25;;;-1:-1:-1;;;;;;;;;;;389:8739:25;4977:67:1;;4849:91;6496:23;;;389:8739:25;4906:23:1;389:8739:25;;4906:23:1;4853:30;4870:13;;;4853:30;;;4788:50;4816:4;4808:25;:30;;-1:-1:-1;4788:50:1;;4724:34;;;-1:-1:-1;4724:34:1;;389:8739:25;;;;;;-1:-1:-1;;389:8739:25;;;;2357:1:0;389:8739:25;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;389:8739:25;;;;;;;-1:-1:-1;;389:8739:25;;;;;2209:38:24;389:8739:25;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;501:26;389:8739;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;2133:34:24;389:8739:25;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;389:8739:25;;;;;;;2807:4:24;389:8739:25;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;15405:7:24;389:8739:25;15381:153:24;15401:18;;;;;;389:8739:25;;;;15605:19:24;389:8739:25;;;15667:23:24;389:8739:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;15421:3:24;15457:10;;;:::i;:::-;389:8739:25;;;;;;;;;;;;;;15445:11:24;389:8739:25;;;15445:33:24;389:8739:25;;;15445:33:24;389:8739:25;;;;15441:82:24;;15421:3;389:8739:25;;15386:13:24;;15441:82;15499:8;;389:8739:25;15499:8:24;;:::i;:::-;15441:82;;;;;389:8739:25;;;;;;-1:-1:-1;;389:8739:25;;;;2303:62:0;;:::i;:::-;389:8739:25;;;;;;;;;;5486:29:24;5482:66;;5632:24;389:8739:25;5619:37:24;;5615:76;;10006:24;;;10130:3;10114:7;389:8739:25;10110:18:24;;;;;10169:10;;;:::i;:::-;389:8739:25;;;;;;;;-1:-1:-1;;;;;389:8739:25;;;;10198:11:24;389:8739:25;;;;;10198:31:24;;389:8739:25;;;;;10194:345:24;;10130:3;;389:8739:25;;10095:13:24;;10194:345;10445:45;389:8739:25;;;;10466:23:24;389:8739:25;10509:14:24;389:8739:25;;;10198:11:24;389:8739:25;;5632:24:24;389:8739:25;;;10271:36:24;389:8739:25;10341:8:24;;;;:::i;:::-;389:8739:25;;10198:11:24;389:8739:25;;5632:24:24;389:8739:25;;;10390:36:24;389:8739:25;10466:23:24;:::i;:::-;10445:45;;:::i;:::-;10509:14;;:::i;:::-;10194:345;;;;10110:18;;10575:67;10110:18;10575:67;389:8739:25;;10626:15:24;;;;10575:67;;389:8739:25;;;;;;;;;;;;;;;;;;10575:67:24;;;;389:8739:25;;5615:76:24;-1:-1:-1;;;5665:26:24;;389:8739:25;;5665:26:24;5482:66;5524:24;;;389:8739:25;5524:24:24;389:8739:25;;5524:24:24;389:8739:25;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;389:8739:25;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;389:8739:25;-1:-1:-1;;;;;389:8739:25;7871:10;:21;7867:48;;-1:-1:-1;;;;;389:8739:25;7930:26;;7926:55;;389:8739;;8035:33;389:8739;-1:-1:-1;;;;;389:8739:25;;7992:27;389:8739;;;7992:27;389:8739;;;;;;8035:33;389:8739;7926:55;2029:16;;;389:8739;7965:16;389:8739;;7965:16;7867:48;8224:14;;;389:8739;7901:14;389:8739;;7901:14;389:8739;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;;;;;;;2303:62:0;;:::i;:::-;389:8739:25;;;14211:35:24;389:8739:25;;;;;14211:35:24;389:8739:25;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;564:27;389:8739;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;2303:62:0;;:::i;:::-;389:8739:25;;2941:32;389:8739;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;3068:10;;;:::i;:::-;2807:4:24;3162:21:25;;389:8739;;2757:5:24;3217:7:25;389:8739;3217:29;;:67;;;389:8739;3213:137;;389:8739;;;;-1:-1:-1;;;6854:49:24;;3068:10:25;389:8739;6854:49:24;;389:8739:25;6889:4:24;389:8739:25;;;;;;;;;;;;;;;6854:49:24;;389:8739:25;;;;-1:-1:-1;;;;;389:8739:25;6854:49:24;;;;;;;389:8739:25;6854:49:24;;;389:8739:25;6853:50:24;;6849:117;;3068:10:25;389:8739;;3495:11;389:8739;;;;;3534:16;;;;389:8739;;;;3533:17;3529:168;;389:8739;3717:24;389:8739;;;3717:24;:::i;:::-;389:8739;;;;;;;;;;;3786:29;389:8739;3786:29;389:8739;3786:29;:::i;:::-;;389:8739;;;;;;7732:15:24;389:8739:25;;;;7710:38:24;389:8739:25;3068:10;7710:38:24;;389:8739:25;3944:12;3924:17;;389:8739;;;;3529:168;3217:7;389:8739;-1:-1:-1;;;389:8739:25;;;;;;;;;;3217:7;389:8739;;:::i;:::-;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;;;3068:10;389:8739;;;;;;;;-1:-1:-1;;389:8739:25;;;;;3670:15;389:8739;3644:23;;389:8739;3529:168;;6849:117:24;6927:27;;;389:8739:25;6927:27:24;389:8739:25;;6927:27:24;6854:49;;;;389:8739:25;6854:49:24;389:8739:25;6854:49:24;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;389:8739:25;;;;;;;;;3213:137;3308:30;;;389:8739;3308:30;389:8739;;3308:30;3217:67;3068:10;;389:8739;;3251:11;389:8739;;;3251:33;389:8739;;;3251:33;389:8739;;3250:34;3217:67;;389:8739;;;-1:-1:-1;;;389:8739:25;;;;;;;;;;;;-1:-1:-1;;;389:8739:25;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;2254:29:24;389:8739:25;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;-1:-1:-1;;;;;389:8739:25;;:::i;:::-;;;;2581:45:24;389:8739:25;;;;;;;;;2581:45:24;;;;389:8739:25;2581:45:24;;;;389:8739:25;2581:45:24;;;389:8739:25;2581:45:24;;389:8739:25;2581:45:24;;389:8739:25;2581:45:24;;389:8739:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;2303:62:0;;:::i;:::-;2357:1;;:::i;389:8739:25:-;;;;;;-1:-1:-1;;389:8739:25;;;;;18127:13:24;18146:7;389:8739:25;18122:158:24;18142:18;;;;;;389:8739:25;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;389:8739:25;;;;;18443:13:24;389:8739:25;18458:18:24;;;;;;389:8739:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;;;;;-1:-1:-1;389:8739:25;;;;;;;;;;;;;18478:3:24;18514:10;;;:::i;:::-;389:8739:25;;;;;;;;;;;;;;18186:11:24;389:8739:25;;;18186:33:24;389:8739:25;;;18502:33:24;389:8739:25;;;;18498:137:24;;18478:3;389:8739:25;;18443:13:24;;18498:137;18583:10;;;;:::i;:::-;389:8739:25;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;18612:7:24;389:8739:25;;;;18186:33:24;389:8739:25;;;;;18612:7:24;:::i;:::-;18498:137;;;;;389:8739:25;;;;;;;;;;;;18162:3:24;18198:10;;;:::i;:::-;389:8739:25;;;;;;;;;;;;;;18186:11:24;389:8739:25;;;18186:33:24;389:8739:25;;;18186:33:24;389:8739:25;;;;18182:87:24;;18162:3;389:8739:25;;18127:13:24;;18182:87;18240:13;;389:8739:25;18240:13:24;;:::i;:::-;18182:87;;;;;389:8739:25;;;;;;-1:-1:-1;;389:8739:25;;;;;534:23;389:8739;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;13999:40:24;389:8739:25;;;2303:62:0;;:::i;:::-;13939:10:24;389:8739:25;;;13939:10:24;389:8739:25;;;;;;;;;;13999:40:24;389:8739:25;;;;;;;-1:-1:-1;;389:8739:25;;;;;2174:28:24;389:8739:25;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;-1:-1:-1;;;;;;;;;;;389:8739:25;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;731:29;389:8739;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;-1:-1:-1;;;;;389:8739:25;;:::i;:::-;;;;2633:46:24;389:8739:25;;;;;;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;-1:-1:-1;;;;;;;;;;;389:8739:25;-1:-1:-1;;;;;389:8739:25;8584:10;:21;8580:48;;389:8739;;8639:24;389:8739;;;;;;;;-1:-1:-1;;389:8739:25;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;389:8739:25;;-1:-1:-1;;;;;;389:8739:25;;;;;;;-1:-1:-1;;;;;389:8739:25;3975:40:0;389:8739:25;;3975:40:0;389:8739:25;;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;;;2303:62:0;;:::i;:::-;13360:11:24;;;13356:57;;2860:2;13428:29;;13424:75;;13719:44;;389:8739:25;;13520:12:24;389:8739:25;;;;;13604:23:24;389:8739:25;13678:15:24;13652:23;389:8739:25;;;13719:44:24;;;;389:8739:25;;;;;;;;;;;;;;;;;;13719:44:24;;;;389:8739:25;13424:75:24;12919:33;;;389:8739:25;13466:33:24;389:8739:25;;13466:33:24;389:8739:25;;;;;;-1:-1:-1;;389:8739:25;;;;-1:-1:-1;;;;;;;;;;;389:8739:25;;;;;;;-1:-1:-1;;;;;389:8739:25;8194:10;:21;8190:48;;917:4;8253:31;;8249:61;;917:4;8325:25;;8321:55;;389:8739;;;8464:36;389:8739;8389:26;389:8739;;8426:20;389:8739;;;;;;;;;;8464:36;389:8739;8321:55;1895:17;;;389:8739;8359:17;389:8739;;8359:17;389:8739;;;;;;-1:-1:-1;;389:8739:25;;;;2303:62:0;;:::i;:::-;2357:1;;:::i;389:8739:25:-;;;;;;-1:-1:-1;;389:8739:25;;;;;;;2860:2:24;389:8739:25;;;;;;;;;-1:-1:-1;;389:8739:25;;;;2303:62:0;;:::i;:::-;2357:1;;:::i;389:8739:25:-;;;;;;-1:-1:-1;;389:8739:25;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15002:11:24;389:8739:25;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;1237:66:3;389:8739:25;;;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;2901:36:24;389:8739:25;;;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;2094:32:24;389:8739:25;;;2094:32:24;389:8739:25;2094:32:24;389:8739:25;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;2303:62:0;;:::i;:::-;7175:17:25;389:8739;7167:41;7175:21;;;7167:41;:::i;:::-;389:8739;7175:17;389:8739;;;;;7373:12;389:8739;;;-1:-1:-1;;;7354:40:25;;-1:-1:-1;;;;;389:8739:25;;;;7354:40;;389:8739;;;;;;;;7354:40;;389:8739;;;;;;;;;;;;;;7354:40;;;;;;7346:68;7354:40;389:8739;7354:40;;;389:8739;7346:68;;:::i;:::-;7373:12;389:8739;;;;;;-1:-1:-1;;;;;389:8739:25;;7430:37;;7354:40;;7430:37;389:8739;7354:40;;;;;;;;;;;;;;:::i;:::-;;;;389:8739;;;;;;-1:-1:-1;;389:8739:25;;;;1859:37:24;389:8739:25;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;2869:25:24;389:8739:25;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;5811:10:24;389:8739:25;;5799:11:24;389:8739:25;;;5799:33:24;389:8739:25;;;5799:33:24;389:8739:25;;;;5798:34:24;389:8739:25;;5798:74:24;;389:8739:25;5794:137:24;;389:8739:25;;;;;;;;;;5212:24;5199:37;;;:66;;389:8739;5195:132;;5811:10:24;389:8739:25;;5799:11:24;389:8739:25;;;;;;;5444:12;;;5440:51;;5508:37;389:8739;5508:37;;:55;;389:8739;5504:213;;389:8739;5729:803;;;389:8739;;;5799:33:24;389:8739:25;;6573:16;389:8739;;;;;;;6608:30;389:8739;6608:30;389:8739;6608:30;:::i;:::-;;389:8739;6677:32;389:8739;;;;;;;;;;5212:24;6724:37;;:56;;;389:8739;6720:215;;389:8739;-1:-1:-1;389:8739:25;;;;-1:-1:-1;;;6955:44:25;;5811:10:24;389:8739:25;6955:44;;389:8739;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;389:8739:25;6955:44;;;;;;6947:72;6955:44;389:8739;6955:44;;;6947:72;;:::i;:::-;389:8739;;;;;7072:15;389:8739;;;;7035:53;389:8739;5811:10:24;7035:53:25;;389:8739;6720:215;389:8739;;6901:22;6873:13;2757:5:24;6804:21:25;6814:11;389:8739;6804:21;;:::i;:::-;389:8739;6873:13;;;:::i;:::-;389:8739;6901:22;389:8739;6901:22;:::i;:::-;;389:8739;6720:215;;;6724:56;389:8739;6765:11;389:8739;6765:15;;6724:56;;5729:803;5806:10;5811::24;5806::25;:::i;:::-;5212:24;5836:21;;389:8739;;;5836:25;;5832:689;;5729:803;;;;;;5832:689;6237:34;2757:5:24;5966:18:25;5976:8;389:8739;5966:18;;:::i;:::-;389:8739;6041:24;389:8739;6041:24;;;;:::i;:::-;389:8739;;;6130:19;;:34;389:8739;;;6130:34;:::i;:::-;389:8739;;6183:35;389:8739;6183:35;389:8739;6183:35;:::i;:::-;;389:8739;6237:34;389:8739;6237:34;:::i;:::-;;389:8739;;;;;;-1:-1:-1;;;6361:43:25;;5811:10:24;389:8739:25;6361:43;;389:8739;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;6361:43;;;;;;;5799:33:24;6361:43:25;6353:71;6361:43;389:8739;6361:43;;;6353:71;;:::i;:::-;389:8739;;;;;;;;;6448:57;389:8739;5811:10:24;6448:57:25;;5832:689;;;6361:43;;;;389:8739;6361:43;389:8739;6361:43;;;;;;;:::i;:::-;;;;5504:213;5602:36;389:8739;5602:23;;389:8739;5628:10;389:8739;5602:36;;:::i;:::-;5584:15;:54;5580:126;5504:213;5580:126;-1:-1:-1;;;5666:24:25;;389:8739;;5666:24;5508:55;389:8739;5549:10;389:8739;5549:14;;5508:55;;5440:51;5465:26;;;389:8739;5465:26;389:8739;;5465:26;5195:132;5289:26;;;389:8739;5289:26;389:8739;;5289:26;5199:66;389:8739;;5241:24;389:8739;;5240:25;5199:66;;5794:137:24;5896:23;;;389:8739:25;5896:23:24;389:8739:25;;5896:23:24;5798:74;5811:10;;389:8739:25;;5799:11:24;389:8739:25;;;;;;5836:36:24;5798:74;;389:8739:25;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;;;;;;;5482:66:24;;4292:10:25;;;:::i;:::-;;389:8739;;4340:11;389:8739;;;;;4392:21;;;389:8739;;;4432:11;;;389:8739;;2757:5:24;4486:18:25;4496:8;389:8739;4486:18;;:::i;:::-;389:8739;4553:13;;;;;:::i;:::-;389:8739;;;;-1:-1:-1;;;4655:34:25;;4683:4;389:8739;4655:34;;389:8739;;;;;;;;;4655:34;;389:8739;;;;-1:-1:-1;;;;;389:8739:25;4655:34;;;;;;;;389:8739;4655:34;;;389:8739;4708:31;;389:8739;;4902:34;389:8739;;;;;4822:19;:34;389:8739;;;4822:34;:::i;:::-;389:8739;;4867:24;389:8739;4867:24;389:8739;4867:24;:::i;4902:34::-;;389:8739;;;;;;-1:-1:-1;;;4964:43:25;;4292:10;389:8739;4964:43;;389:8739;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;4964:43;;;;;;5018:35;4964:43;389:8739;4964:43;;;5018:35;;:::i;:::-;389:8739;;;;;;;;;5075:46;389:8739;4292:10;5075:46;;389:8739;4964:43;;;;389:8739;4964:43;389:8739;4964:43;;;;;;;:::i;:::-;;;;389:8739;;;-1:-1:-1;;;389:8739:25;;;;;;;;4655:34;389:8739;;;;;;;;;;;4655:34;;;;389:8739;4655:34;;389:8739;4655:34;;;;;;389:8739;4655:34;;;:::i;:::-;;;389:8739;;;;;;;4655:34;;;;;;-1:-1:-1;4655:34:25;;389:8739;;;-1:-1:-1;;;389:8739:25;;;;;;;;;;;;-1:-1:-1;;;389:8739:25;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;669:32;389:8739;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;2303:62:0;;:::i;:::-;7547:15:25;389:8739;7539:39;7547:19;;;7539:39;:::i;:::-;389:8739;7547:15;389:8739;;;;;7687:12;389:8739;;;-1:-1:-1;;;7670:38:25;;-1:-1:-1;;;;;389:8739:25;;;;7670:38;;389:8739;;;;;;;;7670:38;;389:8739;;;;;;;;;7670:38;;;;;;7662:66;7670:38;389:8739;7670:38;;;7662:66;;:::i;:::-;7687:12;389:8739;;;;;;-1:-1:-1;;;;;389:8739:25;;7744:37;;7670:38;;7744:37;389:8739;;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;389:8739:25;;;;;;6429:44:1;;;;;389:8739:25;6425:105:1;;;1789:1:25;389:8739;;-1:-1:-1;;;;;;;;;;;389:8739:25;;;-1:-1:-1;;;;;;;;;;;389:8739:25;-1:-1:-1;;;389:8739:25;-1:-1:-1;;;;;;;;;;;389:8739:25;;1855:31;917:4;1855:31;;1851:61;;917:4;1927:25;;1923:55;;-1:-1:-1;;;;;389:8739:25;;1993:27;;1989:56;;2058:26;389:8739;2095:20;389:8739;-1:-1:-1;;;;;389:8739:25;;2126:28;389:8739;;;2126:28;389:8739;-1:-1:-1;;;;;;;;;;;389:8739:25;6654:20:1;389:8739:25;;;1789:1;389:8739;;6654:20:1;389:8739:25;6429:44:1;1789:1:25;389:8739;;;;6448:25:1;;6429:44;;;389:8739:25;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;598:30;389:8739;;;;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;389:8739:25;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;389:8739:25;;;;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;2303:62:0;;:::i;:::-;12875:35:24;;12871:81;;389:8739:25;13074:51:24;389:8739:25;13003:14:24;389:8739:25;;;-1:-1:-1;;;;;389:8739:25;;;;;13003:14:24;389:8739:25;;;;;;;;;;;;;;;;13074:51:24;389:8739:25;;;;;;;-1:-1:-1;;389:8739:25;;;;8983:11;389:8739;9009:8;389:8739;9032:15;389:8739;9062:17;389:8739;9094:12;389:8739;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;389:8739:25;;;;;;:::o;:::-;;;;;;-1:-1:-1;;389:8739:25;;;;;;;917:4;389:8739;;;;;;;;;-1:-1:-1;;389:8739:25;;;;;;;2757:5:24;389:8739:25;;;;;;;;;;;;:::o;:::-;18146:7:24;389:8739:25;;;;;;18146:7:24;-1:-1:-1;389:8739:25;;-1:-1:-1;389:8739:25;;;-1:-1:-1;389:8739:25;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;17228:632:24;389:8739:25;;;;;;-1:-1:-1;389:8739:25;17361:11:24;389:8739:25;;;-1:-1:-1;389:8739:25;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17403:40:24;;;17228:632;17399:90;;;389:8739:25;-1:-1:-1;389:8739:25;;;;;;;;;17513:37:24;17509:106;;17639:10;389:8739:25;17639:15:24;;17635:64;;17745:36;389:8739:25;;17745:36:24;:::i;:::-;17800:15;:34;-1:-1:-1;17800:34:24;;17228:632::o;17635:64::-;17671:16;;389:8739:25;17671:16:24;-1:-1:-1;17671:16:24;:::o;17509:106::-;389:8739:25;;17575:24:24;389:8739:25;;17567:36:24;-1:-1:-1;17567:36:24;:::o;17399:90::-;17460:17;-1:-1:-1;17460:17:24;-1:-1:-1;17460:17:24;:::o;17403:40::-;17424:19;;;17403:40;;;389:8739:25;;;;:::o;:::-;;;-1:-1:-1;;;389:8739:25;;;;;;;;;;;;-1:-1:-1;;;389:8739:25;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;389:8739:25;;;;;;;;;;;;-1:-1:-1;;;389:8739:25;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;12390:313:24:-;389:8739:25;12457:9:24;389:8739:25;;;;;;;;12470:24:24;12457:37;;12453:50;;389:8739:25;12616:33:24;389:8739:25;12470:24:24;389:8739:25;;12457:9:24;389:8739:25;;;12457:9:24;389:8739:25;;;12457:9:24;389:8739:25;;;;;;;;:::i;:::-;;;;;;:::i;:::-;12616:33:24;12665:30;389:8739:25;;;12679:15:24;389:8739:25;;12665:30:24;12390:313::o;12453:50::-;12496:7;:::o;11987:335::-;389:8739:25;12051:9:24;389:8739:25;;;;;;;;12051:29:24;;12047:42;;12051:9;12116:24;12103:37;;12099:76;;389:8739:25;;-1:-1:-1;;389:8739:25;;;;;;12281:33:24;;389:8739:25;;-1:-1:-1;;389:8739:25;;;;;:::i;:::-;12281:33:24;11987:335::o;15839:698::-;;389:8739:25;;;;;;;-1:-1:-1;389:8739:25;16010:11:24;389:8739:25;;;-1:-1:-1;389:8739:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16042:45:24;;;15839:698;16038:111;;16184:12;;:32;389:8739:25;16184:12:24;;:32;:::i;:::-;389:8739:25;;;;16348:19:24;389:8739:25;;;;;;;;-1:-1:-1;;;16247:228:24;;;;;389:8739:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;;;;;;;;16247:228:24;;;;;;;-1:-1:-1;16247:228:24;;;15839:698;389:8739:25;;16488:41:24;15839:698;:::o;16247:228::-;;;;389:8739:25;16247:228:24;;389:8739:25;16247:228:24;;;;;;389:8739:25;16247:228:24;;;:::i;:::-;;;389:8739:25;;;;;16247:228:24;;;;;;;-1:-1:-1;16247:228:24;;16038:111;16104:33;-1:-1:-1;;;16104:33:24;-1:-1:-1;;;16104:33:24:o;16042:45::-;389:8739:25;16063:19:24;389:8739:25;16063:24:24;16042:45;;389:8739:25;-1:-1:-1;;389:8739:25;;;;;;;:::o;:::-;;;;;;;;;;;:::o;11695:237:24:-;389:8739:25;11758:9:24;389:8739:25;;;;;;;;11771:16:24;11758:29;;11754:42;;389:8739:25;11891:33:24;389:8739:25;11771:16:24;389:8739:25;;11758:9:24;389:8739:25;;;11758:9:24;389:8739:25;;;11758:9:24;389:8739:25;;;;;;;;:::i;16635:517:24:-;16709:19;389:8739:25;16709:24:24;;16705:38;;16850:51;:12;389:8739:25;16877:24:24;389:8739:25;16850:51:24;;:::i;:::-;389:8739:25;;;16960:4:24;389:8739:25;;;;;;16960:4:24;389:8739:25;;;;;;;;;;;;;;17014:3:24;389:8739:25;;;;;;;;;;;;;17118:3:24;389:8739:25;;;;;;;17101:43:24;;;:::i;:::-;16635:517;:::o;16705:38::-;16735:8;389:8739:25;16735:8:24;:::o;3405:215:0:-;-1:-1:-1;;;;;389:8739:25;;3489:22:0;3485:91;;3604:8;;;:::i;:::-;3405:215::o;3485:91::-;3534:31;;;3509:1;3534:31;3509:1;3534:31;389:8739:25;;3509:1:0;3534:31;2658:162;-1:-1:-1;;;;;;;;;;;389:8739:25;-1:-1:-1;;;;;389:8739:25;966:10:2;2717:23:0;2713:101;;2658:162::o;2713:101::-;2763:40;;;-1:-1:-1;2763:40:0;966:10:2;2763:40:0;389:8739:25;;-1:-1:-1;2763:40:0;2325:526:25;389:8739;;;;;;-1:-1:-1;389:8739:25;2411:11;389:8739;;;-1:-1:-1;389:8739:25;2458:17;;;389:8739;;;2443:12;;:32;:54;;;2325:526;2439:405;;2325:526;;;:::o;2439:405::-;2754:21;2655:70;2656:46;:29;2537:32;2754:31;2443:12;;2537:32;:::i;:::-;2671:14;389:8739;2656:29;;:::i;:::-;389:8739;;2656:46;;:::i;:::-;2706:19;389:8739;2655:70;;:::i;:::-;2754:21;;389:8739;;;2754:31;:::i;:::-;389:8739;;2443:12;389:8739;;2325:526::o;2443:54::-;389:8739;;;2479:18;;2443:54;;3774:248:0;-1:-1:-1;;;;;;;;;;;389:8739:25;;-1:-1:-1;;;;;389:8739:25;;;-1:-1:-1;;;;;;389:8739:25;;;;;;;;;;3975:40:0;-1:-1:-1;;3975:40:0;3774:248::o;10740:682:24:-;389:8739:25;;;;;;;-1:-1:-1;389:8739:25;10829:11:24;389:8739:25;;;-1:-1:-1;389:8739:25;10894:17:24;;;;389:8739:25;;;10878:12:24;;:33;;;:61;;;10740:682;10878:84;;;;10740:682;10874:123;;11032:32;389:8739:25;10878:12:24;;11032:32;:::i;:::-;11092:14;389:8739:25;;;11193:19:24;389:8739:25;11227:12:24;389:8739:25;11266:24:24;389:8739:25;;;;-1:-1:-1;;;11092:235:24;;;;;389:8739:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;389:8739:25;;;;;;;;;;;;;;;;11092:235:24;;;;;;;-1:-1:-1;11092:235:24;;;10740:682;11340:21;11092:14;11340:31;:21;;389:8739:25;;;11340:31:24;:::i;11092:235::-;;;;389:8739:25;11092:235:24;;389:8739:25;11092:235:24;;;;;;389:8739:25;11092:235:24;;;:::i;:::-;;;389:8739:25;;;;;;11092:14:24;:235;;;;;-1:-1:-1;11092:235:24;;10874:123;10979:7;;;;:::o;10878:84::-;389:8739:25;;;10943:19:24;10878:84;;:61;389:8739:25;10915:19:24;389:8739:25;10915:24:24;10878:61;;7082:141:1;389:8739:25;-1:-1:-1;;;;;;;;;;;389:8739:25;;;;7148:18:1;7144:73;;7082:141::o;7144:73::-;7189:17;;;-1:-1:-1;7189:17:1;;-1:-1:-1;7189:17:1"
            },
            "methodIdentifiers": {
              "BASIS_POINTS()": "e1f1c4a7",
              "MAX_CLAIM_FEE()": "46800f75",
              "MAX_FEE_PERCENT()": "67d81740",
              "MAX_STAKERS()": "910956aa",
              "MAX_WITHDRAW_FEE()": "d4b0de2f",
              "MIN_DEPOSIT()": "e1e158a5",
              "canWithdraw(address)": "19262d30",
              "claimFee()": "99d32fc4",
              "claimRewards()": "372500ab",
              "collectedDappFees()": "26712743",
              "collectedFees()": "9003adfe",
              "collectedLpFees()": "1568b169",
              "dappToken()": "5eb186f8",
              "deposit(uint256)": "b6b55f25",
              "distributeRewardsAll()": "db03e227",
              "emergencyStop()": "63a599a4",
              "emergencyWithdrawEnabled()": "5747e69f",
              "farmStartBlock()": "b507d70f",
              "farmState()": "ce2040c8",
              "feeCollector()": "c415b95c",
              "getActiveStakers()": "9fb82db9",
              "getContractStats()": "dfe6b5d6",
              "getEstimatedAPY()": "ccaad55d",
              "getFeeInfo()": "0002eab7",
              "getUserInfo(address)": "6386c1c7",
              "getVersion()": "0d8e6e2c",
              "initialize(address,address,address,address)": "f8c8765e",
              "initializeV2(uint256,uint256,address)": "1f51bf0c",
              "lockPeriod()": "3fd8b02f",
              "lpToken()": "5fcbd285",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "pauseFarm()": "a113601b",
              "paused()": "5c975abb",
              "renounceOwnership()": "715018a6",
              "resumeFarm()": "6c7ecb78",
              "rewardConfig()": "4e94c285",
              "rewardPerBlock()": "8ae39cac",
              "rewardStrategy()": "44c4aea9",
              "setEmergencyWithdrawEnabled(bool)": "c74ad493",
              "setLockPeriod(uint256)": "779972da",
              "setRewardPerBlock(uint256)": "bb872b4a",
              "simulateRewards(address)": "7bbfffa5",
              "stakerIndex(address)": "78d60a5b",
              "stakers(uint256)": "fd5e6dd1",
              "stakersData(address)": "acb422c5",
              "totalRewardsDistributed()": "ee172546",
              "totalStakingBalance()": "e766c835",
              "transferOwnership(address)": "f2fde38b",
              "updateFeeCollector(address)": "d2c35ce8",
              "updateFees(uint256,uint256)": "6db79437",
              "updateLockPeriod(uint256)": "91db7b0d",
              "updateRewardConfig(uint256,uint256,uint256)": "6f3ba889",
              "updateRewardStrategy(address)": "06309e4b",
              "withdraw()": "3ccfd60b",
              "withdrawFee()": "e941fa78",
              "withdrawFees()": "476343ee",
              "withdrawLpFees()": "25b500eb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidFeeValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__EmergencyStop\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__FarmStopped\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__InvalidConfiguration\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__MaxStakersReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__NoFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__NoRewards\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__NotStaking\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__OnlyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__StillLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenFarm__TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EmergencyStop\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"FeeCollectorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newWithdrawFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newClaimFee\",\"type\":\"uint256\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"}],\"name\":\"FeesWithdrawnV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPeriod\",\"type\":\"uint256\"}],\"name\":\"LockPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLockPeriod\",\"type\":\"uint256\"}],\"name\":\"LockPeriodUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"}],\"name\":\"LpFeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RewardConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReward\",\"type\":\"uint256\"}],\"name\":\"RewardPerBlockUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"netAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUsers\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"RewardsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum FarmState\",\"name\":\"oldState\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum FarmState\",\"name\":\"newState\",\"type\":\"uint8\"}],\"name\":\"StateChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldStrategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newStrategy\",\"type\":\"address\"}],\"name\":\"StrategyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CLAIM_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STAKERS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_DEPOSIT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"canWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"canWithdrawNow\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedDappFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectedLpFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dappToken\",\"outputs\":[{\"internalType\":\"contract DappToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeRewardsAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyStop\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdrawEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmStartBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmState\",\"outputs\":[{\"internalType\":\"enum FarmState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveStakers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"activeStakersList\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalStakers\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRewards\",\"type\":\"uint256\"},{\"internalType\":\"enum FarmState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"activeStakers\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEstimatedAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collectedLpFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collectedDappFees\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddr\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasStaked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isStaking\",\"type\":\"bool\"}],\"internalType\":\"struct TokenFarm.Staker\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dappToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeCollector\",\"type\":\"address\"}],\"name\":\"initializeV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract LPToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feePercent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardStrategy\",\"outputs\":[{\"internalType\":\"contract IRewardStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setEmergencyWithdrawEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockPeriod\",\"type\":\"uint256\"}],\"name\":\"setLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardPerBlock\",\"type\":\"uint256\"}],\"name\":\"setRewardPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"simulateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"projectedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakersData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasStaked\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isStaking\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardsDistributed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"updateFeeCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_claimFee\",\"type\":\"uint256\"}],\"name\":\"updateFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPeriod\",\"type\":\"uint256\"}],\"name\":\"updateLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"updateRewardConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IRewardStrategy\",\"name\":\"_newStrategy\",\"type\":\"address\"}],\"name\":\"updateRewardStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLpFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"canWithdraw(address)\":{\"details\":\"Verifica si un usuario puede retirar\"},\"claimRewards()\":{\"details\":\"Reclama las recompensas pendientes\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"distributeRewardsAll()\":{\"details\":\"Distribuye recompensas a todos los stakers activos\"},\"emergencyStop()\":{\"details\":\"Activa el modo de emergencia\"},\"getActiveStakers()\":{\"details\":\"Obtiene la lista de todos los stakers activos\"},\"getContractStats()\":{\"details\":\"Obtiene estad\\u00edsticas del contrato\"},\"getEstimatedAPY()\":{\"details\":\"Calcula la APY estimada basada en la configuraci\\u00f3n actual\"},\"getUserInfo(address)\":{\"details\":\"Obtiene informaci\\u00f3n completa de un usuario\"},\"initializeV2(uint256,uint256,address)\":{\"custom:oz-upgrades-validate-as-initializer\":\"\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pauseFarm()\":{\"details\":\"Pausa el farm (no permite nuevos dep\\u00f3sitos ni claims)\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resumeFarm()\":{\"details\":\"Reanuda el farm\"},\"setEmergencyWithdrawEnabled(bool)\":{\"details\":\"Habilita/deshabilita retiros de emergencia\"},\"simulateRewards(address)\":{\"details\":\"Simula las recompensas actuales y proyectadas\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateLockPeriod(uint256)\":{\"details\":\"Actualiza el per\\u00edodo de bloqueo\"},\"updateRewardConfig(uint256,uint256,uint256)\":{\"details\":\"Actualiza la configuraci\\u00f3n de recompensas\"},\"updateRewardStrategy(address)\":{\"details\":\"Actualiza la estrategia de recompensas\"},\"withdraw()\":{\"details\":\"Retira todos los tokens depositados\"},\"withdrawFees()\":{\"details\":\"Retira las comisiones acumuladas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenFarmV2.sol\":\"TokenFarmV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa6bf6b7efe0e6625a9dcd30c5ddf52c4c24fe8372f37c7de9dbf5034746768d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c353ee3705bbf6fadb84c0fb10ef1b736e8ca3ca1867814349d1487ed207beb\",\"dweb:/ipfs/QmcugaPssrzGGE8q4YZKm2ZhnD3kCijjcgdWWg76nWt3FY\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/DappToken.sol\":{\"keccak256\":\"0xe618a35cf7a07450a3d97d5132d7874782f3f3fa68debf02d5fb7cf0469a0bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7651149cdb34ffe25489dc41efe0699adaaac548b17d3dff6afd22824959bee3\",\"dweb:/ipfs/QmeLJuYwgb4eW38TVYfntgSzBsBPtpYd4NGAxCnS187SBj\"]},\"contracts/LPToken.sol\":{\"keccak256\":\"0xb47f69e847eccd98b83f058c327c3bea97cc6cefc308150de83697845feea545\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0126f3a7ed94ec90cebb25c8d8df0ba373f62663596646eae79d599f2bea002\",\"dweb:/ipfs/QmZxzHS3yCMikp7cMNFMVCADWZXi9vx2M46xvViSmXddTB\"]},\"contracts/TokenFarm.sol\":{\"keccak256\":\"0xd204c217c0989ec1f96b47263b3a128c601911fa446c087c637b49577efdbc89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://faeae6b662ff179f321a18b95579e0a8c8ce6b334e9c618f8a66388e75489b34\",\"dweb:/ipfs/QmcFTg1zG3TwnduwjechAW1pfnafYcg7eNpLAXVBStsx2c\"]},\"contracts/TokenFarmV2.sol\":{\"keccak256\":\"0x578c3469a368f5c7a48c38093bec55488f629045f42c94da1a5985d9e361f3d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0dbfa5f1cd2df140f56d6f25bfd7deda0a6017eed240751c5eca0f5a3166836f\",\"dweb:/ipfs/QmQ6vf1VXEWZ4xugCA2PmVYB7uh4X8HPuaqosVRCj6d2Ye\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 2921,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "farmState",
                "offset": 0,
                "slot": "0",
                "type": "t_enum(FarmState)2821"
              },
              {
                "astId": 2924,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "dappToken",
                "offset": 1,
                "slot": "0",
                "type": "t_contract(DappToken)2630"
              },
              {
                "astId": 2927,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "lpToken",
                "offset": 0,
                "slot": "1",
                "type": "t_contract(LPToken)2669"
              },
              {
                "astId": 2930,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "rewardStrategy",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(IRewardStrategy)2839"
              },
              {
                "astId": 2942,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "rewardConfig",
                "offset": 0,
                "slot": "3",
                "type": "t_struct(RewardConfig)2939_storage"
              },
              {
                "astId": 2944,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "totalStakingBalance",
                "offset": 0,
                "slot": "7",
                "type": "t_uint256"
              },
              {
                "astId": 2946,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "collectedFees",
                "offset": 0,
                "slot": "8",
                "type": "t_uint256"
              },
              {
                "astId": 2948,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "totalRewardsDistributed",
                "offset": 0,
                "slot": "9",
                "type": "t_uint256"
              },
              {
                "astId": 2950,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "farmStartBlock",
                "offset": 0,
                "slot": "10",
                "type": "t_uint256"
              },
              {
                "astId": 2968,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "stakers",
                "offset": 0,
                "slot": "11",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "astId": 2973,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "stakersData",
                "offset": 0,
                "slot": "12",
                "type": "t_mapping(t_address,t_struct(Staker)2965_storage)"
              },
              {
                "astId": 2977,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "stakerIndex",
                "offset": 0,
                "slot": "13",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 2988,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "lockPeriod",
                "offset": 0,
                "slot": "14",
                "type": "t_uint256"
              },
              {
                "astId": 2990,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "emergencyWithdrawEnabled",
                "offset": 0,
                "slot": "15",
                "type": "t_bool"
              },
              {
                "astId": 4469,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "withdrawFee",
                "offset": 0,
                "slot": "16",
                "type": "t_uint256"
              },
              {
                "astId": 4471,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "claimFee",
                "offset": 0,
                "slot": "17",
                "type": "t_uint256"
              },
              {
                "astId": 4473,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "feeCollector",
                "offset": 0,
                "slot": "18",
                "type": "t_address"
              },
              {
                "astId": 4475,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "collectedLpFees",
                "offset": 0,
                "slot": "19",
                "type": "t_uint256"
              },
              {
                "astId": 4477,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "collectedDappFees",
                "offset": 0,
                "slot": "20",
                "type": "t_uint256"
              },
              {
                "astId": 4479,
                "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                "label": "rewardPerBlock",
                "offset": 0,
                "slot": "21",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_contract(DappToken)2630": {
                "encoding": "inplace",
                "label": "contract DappToken",
                "numberOfBytes": "20"
              },
              "t_contract(IRewardStrategy)2839": {
                "encoding": "inplace",
                "label": "contract IRewardStrategy",
                "numberOfBytes": "20"
              },
              "t_contract(LPToken)2669": {
                "encoding": "inplace",
                "label": "contract LPToken",
                "numberOfBytes": "20"
              },
              "t_enum(FarmState)2821": {
                "encoding": "inplace",
                "label": "enum FarmState",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_struct(Staker)2965_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct TokenFarm.Staker)",
                "numberOfBytes": "32",
                "value": "t_struct(Staker)2965_storage"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_struct(RewardConfig)2939_storage": {
                "encoding": "inplace",
                "label": "struct TokenFarm.RewardConfig",
                "members": [
                  {
                    "astId": 2932,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "minPerBlock",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2934,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "maxPerBlock",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2936,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "feePercent",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2938,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "lastUpdate",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "128"
              },
              "t_struct(Staker)2965_storage": {
                "encoding": "inplace",
                "label": "struct TokenFarm.Staker",
                "members": [
                  {
                    "astId": 2952,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "balance",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2954,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "checkpoint",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2956,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "pendingRewards",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2958,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "totalClaimed",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2960,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "depositTimestamp",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2962,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "hasStaked",
                    "offset": 0,
                    "slot": "5",
                    "type": "t_bool"
                  },
                  {
                    "astId": 2964,
                    "contract": "contracts/TokenFarmV2.sol:TokenFarmV2",
                    "label": "isStaking",
                    "offset": 1,
                    "slot": "5",
                    "type": "t_bool"
                  }
                ],
                "numberOfBytes": "192"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          }
        }
      }
    }
  }
}